<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2022年7月16日江淮Tho 徐州站</title>
    <url>/2022/06/17/2022%E5%B9%B47%E6%9C%8816%E6%97%A5%E6%B1%9F%E6%B7%AETho-%E5%BE%90%E5%B7%9E%E7%AB%99/</url>
    <content><![CDATA[<div class="note primary"><p><strong>PRIMARY</strong><br>第二次当越共，曲子在写啦在写啦…</p>
</div>

<h2 id="一些记录"><a href="#一些记录" class="headerlink" title="一些记录"></a>一些记录</h2><h3 id="灵感"><a href="#灵感" class="headerlink" title="灵感"></a>灵感</h3><p>其实也没有什么灵感，莹莹和我说按照自己风格来，那么我就尽量写的悲伤一点吧。</p>
]]></content>
      <categories>
        <category>音乐</category>
        <category>Tho</category>
      </categories>
      <tags>
        <tag>徐州站</tag>
      </tags>
  </entry>
  <entry>
    <title>Colorful-Error-Repo</title>
    <url>/2022/08/17/Colorful-Error-Repo/</url>
    <content><![CDATA[<details class="note "><summary><p>secondary</p>
</summary>
<p><strong>Colorful-Error-Repo</strong></p>
<blockquote>
<p>简单的自定义报错回复模板.</p>
</blockquote>

</details>


<h1 id="❡Colorful-Error-Repo-来点不一样的报错吧"><a href="#❡Colorful-Error-Repo-来点不一样的报错吧" class="headerlink" title="❡Colorful-Error-Repo:来点不一样的报错吧"></a><a href="">❡</a>Colorful-Error-Repo:来点不一样的报错吧</h1><blockquote>
<p>使用《署名—禁止演绎 4.0 协议国际版》（CC BY-ND 4.0）进行授权。<br><span class="exturl" data-url="aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5kLzQuMC9sZWdhbGNvZGUuemgtSGFucw==">https://creativecommons.org/licenses/by-nd/4.0/legalcode.zh-Hans<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<blockquote>
<p>续之前的弦：<span class="exturl" data-url="aHR0cHM6Ly9mb3J1bS5rb2tvbmEudGVjaC9kLzExNjgtemhpLWxpbmctamlhby1iZW4tc2kteGlhbmctdG91LW5pYW5nLXppLWppYW4tZ2VuZy1sYW4tZGUtcGFuLWR1YW4tYmFvLWN1by1iaW5nLXppLWRpbmcteWktaHVpLWZ1">骰娘自检/判断报错并自定义回复<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<hr>
<h2 id="一、基本信息"><a href="#一、基本信息" class="headerlink" title="一、基本信息"></a>一、基本信息</h2><ul>
<li>作者： 简律纯</li>
<li>联系方式：qq:a2c29k9</li>
<li>版本：v1.0</li>
<li>更新日期：暂无</li>
<li>关键词：暂无</li>
<li>许可协议：CC BY-ND 4.0</li>
</ul>
<hr>
<h2 id="二-、需求"><a href="#二-、需求" class="headerlink" title="二 、需求"></a>二 、需求</h2><ul>
<li><input disabled="" type="checkbox"> 更多的lua报错类型列表</li>
<li><input disabled="" type="checkbox"> 更多时间</li>
</ul>
<hr>
<h2 id="三、准备"><a href="#三、准备" class="headerlink" title="三、准备"></a>三、准备</h2><p>1.暂时用了手册内色子整理的常见报错信息说明。</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="built_in">module</span> <span class="string">&#x27;%s&#x27;</span> <span class="keyword">not</span> found:</span><br><span class="line">	no field <span class="built_in">package</span>.<span class="built_in">preload</span>[<span class="string">&#x27;%s&#x27;</span>]</span><br><span class="line">	no file </span><br><span class="line"><span class="comment">-- 没有把被引用的lua或dll文件放在指定位置（多见于require与loadLua）</span></span><br><span class="line"><span class="comment">-- 解决方式：把所需文件放入Dice存档目录/plugin/或Diceki/lua/，dll文件或require对象必须置于后者</span></span><br><span class="line">attempt to call a <span class="literal">nil</span> value (global <span class="string">&#x27;%s&#x27;</span>)</span><br><span class="line"><span class="comment">-- 将空变量%s用作函数（global表示被调用的是全局变量，local表示本地变量，method表示索引方法）</span></span><br><span class="line">attempt to index a <span class="literal">nil</span> value (global <span class="string">&#x27;%s&#x27;</span>)</span><br><span class="line"><span class="comment">-- 对空变量%s使用索引（只有table等结构可以索引，形如msg.fromMsg）</span></span><br><span class="line">attempt to concatenate a <span class="literal">nil</span> value (<span class="keyword">local</span> <span class="string">&#x27;%s&#x27;</span>)</span><br><span class="line"><span class="comment">-- 使用..连接字符串时连接了一个空变量%s</span></span><br><span class="line">bad argument #<span class="number">1</span> to <span class="string">&#x27;%s&#x27;</span> (<span class="built_in">string</span> expected, got <span class="literal">nil</span>)</span><br><span class="line"><span class="comment">-- 函数%s的第1个参数类型错误，要求类型为string，但实际传入的参数为nil。特别地，got nil表示输入参数为nil或缺少参数</span></span><br><span class="line">value expected</span><br><span class="line"><span class="comment">-- 要求参数，但没有传入</span></span><br><span class="line">attempt to perform arithmetic on a <span class="literal">nil</span> value (global <span class="string">&#x27;%s&#x27;</span>)</span><br><span class="line"><span class="comment">-- 将一个空变量%s当做数字表示</span></span><br><span class="line">bad argument #<span class="number">5</span> to <span class="string">&#x27;format&#x27;</span>(number has no integer representation)</span><br><span class="line"><span class="comment">-- 函数format的第5个参数类型错误，要求是整数，但传入是小数，或者是其余类型不能化为整数</span></span><br><span class="line"><span class="string">&#x27;&#125;&#x27;</span> expected (to <span class="built_in">close</span> <span class="string">&#x27;&#123;&#x27;</span> at line <span class="number">169</span>) near <span class="string">&#x27;%s&#x27;</span></span><br><span class="line"><span class="comment">-- 脚本第169行的左花括号缺少配对的右花括号。此错误也可以由表格内缺少逗号分隔、括号外的中文等原因造成</span></span><br><span class="line"><span class="string">&#x27;end&#x27;</span> expected (to <span class="built_in">close</span> <span class="string">&#x27;function&#x27;</span> at line <span class="number">240</span>) near &lt;eof&gt;</span><br><span class="line"><span class="comment">-- 脚本第240行的function缺少收尾的end，&lt;eof&gt;表示文件结束（找到文件末也没找到）</span></span><br><span class="line"><span class="string">&#x27;then&#x27;</span> expected near <span class="string">&#x27;end&#x27;</span></span><br><span class="line"><span class="comment">-- if then end逻辑结构缺少then</span></span><br><span class="line">unexpected symbol near <span class="string">&#x27;%s&#x27;</span></span><br><span class="line"><span class="comment">-- 符号%s边有无法识读的符号，比如中文字符</span></span><br><span class="line">attempt to get length of a <span class="literal">nil</span> value (<span class="keyword">local</span> <span class="string">&#x27;tab&#x27;</span>)</span><br><span class="line"><span class="comment">-- 对空变量tab作取长度运算（#）</span></span><br><span class="line">attempt to add a <span class="string">&#x27;string&#x27;</span> with a <span class="string">&#x27;string&#x27;</span></span><br><span class="line"><span class="comment">-- 对(不能化为数字的)字符串用加法&#x27;+&#x27;（字符串只能用连接&#x27;..&#x27;）</span></span><br><span class="line">attempt to compare number with <span class="built_in">string</span></span><br><span class="line"><span class="comment">-- 对数字和(不能化为数字的)字符串用比较运算符</span></span><br><span class="line"><span class="built_in">error</span> loading <span class="built_in">module</span> <span class="string">&#x27;%s&#x27;</span> from file</span><br><span class="line"><span class="comment">-- 使用require &quot;%s&quot;时加载出错</span></span><br><span class="line">no visible label <span class="string">&#x27;%s&#x27;</span> <span class="keyword">for</span> &lt;<span class="keyword">goto</span>&gt; at line </span><br><span class="line"><span class="comment">-- 在循环结构中跳转不存在的节点</span></span><br><span class="line">invalid option <span class="string">&#x27;%s&#x27;</span></span><br><span class="line"><span class="comment">-- 传入的参数不是string或不在给定的字符串列表中</span></span><br></pre></td></tr></table></figure>

<h2 id="四、引用清单"><a href="#四、引用清单" class="headerlink" title="四、引用清单"></a>四、引用清单</h2><ol>
<li><span class="exturl" data-url="aHR0cHM6Ly92MmRvY3Mua29rb25hLnRlY2gvemgvbGF0ZXN0L0RldmVsb3BfTWFudWFsLmh0bWwjaWQyMg==">https://v2docs.kokona.tech/zh/latest/Develop_Manual.html#id22<i class="fa fa-external-link-alt"></i></span></li>
</ol>
]]></content>
      <categories>
        <category>技术</category>
        <category>Lua</category>
      </categories>
      <tags>
        <tag>Dice</tag>
      </tags>
  </entry>
  <entry>
    <title>在dice里关于ai的应用</title>
    <url>/2022/07/06/ai-reply/</url>
    <content><![CDATA[<div class="note primary"><p>一个失败品…</p>
</div>

<blockquote>
<p>使用《署名—非商业性使用—相同方式共享 4.0 协议国际版》（CC BY-NC-SA 4.0）进行授权。<br><span class="exturl" data-url="aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC9sZWdhbGNvZGUuemgtSGFucw==">https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode.zh-Hans<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>非常无聊，于是用正则以及dice的lua回复写了一个调用ai实例，总结了两个ai，青云客与思知。</p>
<p>使用方法：<br>调用青云客:setUserConf(getDiceQQ(),’ai’,1)<br>调用思知:setUserConf(getDiceQQ(),’ai’,2)</p>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">.reply set</span><br><span class="line">Regex=(.*)</span><br><span class="line">Lua=</span><br><span class="line"><span class="keyword">if</span> getUserConf(getDiceQQ(),<span class="string">&#x27;ai&#x27;</span>) == <span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">url = <span class="string">&quot;http://api.qingyunke.com/api.php?key=free&amp;appid=0&amp;msg=&quot;</span> .. msg.fromMsg</span><br><span class="line">	res,data = http.get(url)</span><br><span class="line">	json = <span class="built_in">require</span>(<span class="string">&quot;json&quot;</span>)</span><br><span class="line">	j = json.decode(data)</span><br><span class="line"><span class="keyword">return</span> j.content</span><br><span class="line"><span class="keyword">elseif</span> getUserConf(getDiceQQ(),<span class="string">&#x27;ai&#x27;</span>) == <span class="number">2</span> <span class="keyword">then</span></span><br><span class="line">url = <span class="string">&quot;https://api.ownthink.com/bot?spoken=&quot;</span> .. msg.fromMsg</span><br><span class="line">	res,data = http.get(url)</span><br><span class="line">	json = <span class="built_in">require</span>(<span class="string">&quot;json&quot;</span>)</span><br><span class="line">	j = json.decode(data)</span><br><span class="line"><span class="keyword">return</span> j.data.info.text</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>技术</category>
        <category>Lua</category>
      </categories>
      <tags>
        <tag>Dice</tag>
        <tag>AI</tag>
      </tags>
  </entry>
  <entry>
    <title>Midido 一个更非人性化的手搓midi库</title>
    <url>/2022/08/05/Midido/</url>
    <content><![CDATA[<div class="note success"><p><strong>Midido</strong><br>简单实现用lua输出midi的库。</p>
</div>

<blockquote>
<p>使用《署名—非商业性使用—相同方式共享 4.0 协议国际版》（CC BY-NC-SA 4.0）进行授权。<br><span class="exturl" data-url="aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC9sZWdhbGNvZGUuemgtSGFucw==">https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode.zh-Hans<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<table>
<thead>
<tr>
<th align="left">Midido To-do list</th>
<th align="center">描述</th>
<th align="center">状态</th>
</tr>
</thead>
<tbody><tr>
<td align="left">wiki</td>
<td align="center">用法wiki</td>
<td align="center">x</td>
</tr>
<tr>
<td align="left">Keyboards’ pack</td>
<td align="center">键位包</td>
<td align="center">敬请期待</td>
</tr>
<tr>
<td align="left">songs’ e.g.</td>
<td align="center">歌曲工程示例</td>
<td align="center">x</td>
</tr>
</tbody></table>
<h2 id="一、基本信息"><a href="#一、基本信息" class="headerlink" title="一、基本信息"></a>一、基本信息</h2><blockquote>
<ul>
<li>作者： 简律纯</li>
</ul>
</blockquote>
<ul>
<li>联系方式：qq:a2c29k9</li>
<li>版本：v1.0</li>
<li>更新日期：暂无</li>
<li>关键词：暂无</li>
<li>许可协议：CC BY-NC-SA 4.0</li>
</ul>
<h2 id="二、详细介绍"><a href="#二、详细介绍" class="headerlink" title="二、详细介绍"></a>二、详细介绍</h2><h3 id="1-简介"><a href="#1-简介" class="headerlink" title="1.简介"></a>1.简介</h3><blockquote>
<p>最初是一个设想，毕竟我是写音乐的，主要负责作曲编曲，鸽了快一年后很多粉丝不耐烦了，于是我开始整一些或许大学用得上的东西^比如一个bot ，高考那几天突发奇想，我或许可以教粉丝朋友一起写音乐？那就先从midi序列开始吧！<del>（也可以名正言顺咕咕咕，同时压榨劳动力）</del></p>
</blockquote>
<h3 id="2-一些教训"><a href="#2-一些教训" class="headerlink" title="2.一些教训"></a>2.一些教训</h3><blockquote>
<p>1.之前试过onebot ZBP插件里的timidity，也是手搓midi，但是仍然需要安装ffmpeg和timidity环境，且受到一定的系统环境影响——尽管成功写出了midi文件，但是对于其他那些使用非Windows系统（大家其实更愿意用Macbook）的人（主要是我的作曲家编曲家朋友）来说安装十分困难。<br>zbp关于midi的插件介绍：<br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-07-30/1659158099-11773-5d706d6c091bc400.jpg"></p>
</blockquote>
<blockquote>
<p>2.于是我开始注意到简化使用指令的重要性，并在此机缘巧合下找到了 <span class="exturl" data-url="aHR0cHM6Ly93d3cuYXV0b3BpYW5vLmNuLw==">AutoPiano<i class="fa fa-external-link-alt"></i></span>。<br>我并不在意它的关于编写输出音乐的任何逻辑或是别的什么，我找到了站长，并向他提出了几个问题——就比如，键盘谱是如何想出来的。<br>下图为孤勇者唱谱：<br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-07-30/1659157938-716855-img20220730131141.jpg"></p>
</blockquote>
<blockquote>
<p>3.综上，这未尝不是一个很好的开端，至少我明白了手搓midi的原理，以及一些更切合实际的东西，就比如简化指令。</p>
</blockquote>
<h2 id="三、TO-DO-LIST"><a href="#三、TO-DO-LIST" class="headerlink" title="三、TO-DO LIST"></a>三、TO-DO LIST</h2><ul>
<li><p><input disabled="" type="checkbox">  编写用法wiki<br>用法非常复杂，这脚本就算是raw了，我需要讲清楚如何写出一段音阶（最简单的一段中音区 C D E F G A B midi片段）；如何写出一段chord（和弦），并在此和弦基础上继续写主旋律；如何变换调式调性（F# -&gt; Ab）；如何修改速度等等。</p>
</li>
<li><p><input disabled="" type="checkbox">  编写最基础的简化指令包，虽然目前写好的raw版本是功能最全的，但是其编写midi的方式（我目前主要靠写lua脚本再 <code>loadLua()</code> 或者使用basicFunction1.0（啊现在应该叫FuncLib2.0）内注释掉的 <code>load()()</code> 来写midi）过于硬核，所以需要一个诸如 <code>midi:0333-1 0333-2</code> 或是 <code>midi:E5 E5 E5 C5</code> 这样的简单易用指令。</p>
</li>
<li><p><input checked="" disabled="" type="checkbox">  一个音源键位包，或者一个键位函数包，用于简化脚本写midi时的打谱环节。</p>
</li>
</ul>
<h2 id="四、脚本输出实例试听"><a href="#四、脚本输出实例试听" class="headerlink" title="四、脚本输出实例试听"></a>四、脚本输出实例试听</h2><p>C大调音阶：<br>[upl-file uuid=e45d0254-ca7a-498c-b00d-069b2de5a74b size=257B]c-major-scale.zip[/upl-file]<br>Am和弦：<br>[upl-file uuid=d2589143-51ab-4ff7-aa9f-96734e60d4b3 size=321B]chord-example.zip[/upl-file]<br>时值变化：<br>[upl-file uuid=d9db9d92-396a-48c2-918c-2ecf3ef37e26 size=260B]duration-example.zip[/upl-file]</p>
<h2 id="五、最后"><a href="#五、最后" class="headerlink" title="五、最后"></a>五、最后</h2><blockquote>
<p>脚本将会在简化指令版写完发布，愿大家都能名正言顺的咕咕咕，也愿大家都热爱生活，热爱音乐！</p>
</blockquote>
]]></content>
      <categories>
        <category>技术</category>
        <category>Lua</category>
      </categories>
      <tags>
        <tag>Dice</tag>
        <tag>FIXED</tag>
      </tags>
  </entry>
  <entry>
    <title>basicFunction</title>
    <url>/2022/06/11/basicFunction/</url>
    <content><![CDATA[<blockquote>
<p>使用《署名—非商业性使用—相同方式共享 4.0 协议国际版》（CC BY-NC-SA 4.0）进行授权<br><span class="exturl" data-url="aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC9sZWdhbGNvZGUuemgtSGFucw==">https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode.zh-Hans<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<blockquote>
<p>作者：简律纯<br>联系方式：qq:A2C29K9<br>更新日期：2022/5/15<br>关键词： <code>#basicFunction:</code></p>
</blockquote>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><em>basicFunction</em> 的定位非常清晰，那就是作为脚本制作者的配置扩展，通过在lua脚本中 <code>require &quot;basicFunction&quot;</code>使用其中的函数。</p>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2N5cHJlc3MwNTIyL2N5cHJlc3MwNTIyLmdpdGh1Yi5pby9yZWxlYXNlcy90YWcvYmFzaWNGdW5jdGlvbg==">basicFunction-alpha(2).zip<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p> 衷心希望大家指正其中的错误和不足，促使 <em>basicFunction</em> 不断进步完善</p>
<h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h2><h3 id="搭载"><a href="#搭载" class="headerlink" title="搭载"></a>搭载</h3><p><em>——开始之前的一些必要工作。</em><br>1.下载 _basicFunction_并解压得到 _basicFunction.lua_文件<br>2.将解压得到的 _basicFunction.lua_文件放入 DiceQQ\plugin\文件夹<br>3.在确保前两步万无一失的情况下回到聊天窗口使用 <code>.system load</code>命令重载 _basicFunction_脚本</p>
<blockquote>
<p>看到这里，你已经成功安装完成了！接下来让我们快速开始吧！</p>
</blockquote>
<h3 id="在聊天窗口使用"><a href="#在聊天窗口使用" class="headerlink" title="在聊天窗口使用"></a>在聊天窗口使用</h3><p> <em>为了方便测试函数，简律纯特别的写了一个聊天窗口指令，用于测试这些函数</em></p>
<h4 id="gt-xxx-basicFunction-help"><a href="#gt-xxx-basicFunction-help" class="headerlink" title="&gt; [xxx]. #basicFunction:help"></a>&gt; [xxx]. <code>#basicFunction:help</code></h4><p>这是一条用于获取帮助与更新的指令，不建议在群聊中使用。<br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652528156-326881-4ce86491377f0bf4.png"></p>
<h4 id="gt-1-basicFunction-table-draw"><a href="#gt-1-basicFunction-table-draw" class="headerlink" title="&gt; [1] #basicFunction:table_draw"></a>&gt; [1] <code>#basicFunction:table_draw</code></h4><ul>
<li>功能：随机抽取一条数组内元素</li>
<li>参数：数组</li>
<li>返回：字符串</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652528703-218364-341fe90b2615ec.png"></li>
</ul>
<h4 id="gt-2-basicFunction-num-or-string"><a href="#gt-2-basicFunction-num-or-string" class="headerlink" title="&gt;[2] #basicFunction:num_or_string"></a>&gt;[2] <code>#basicFunction:num_or_string</code></h4><ul>
<li>功能：判断是否为num类型，若是则自动转为num类型，否则为string</li>
<li>参数：x:待转换字符串</li>
<li>返回：number类型数据或string类型数据</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652529015-469470-1a7836efde35a6a8.png"></li>
</ul>
<h4 id="gt-3-basicFunction-getAtQQ"><a href="#gt-3-basicFunction-getAtQQ" class="headerlink" title="&gt;[3] #basicFunction:getAtQQ"></a>&gt;[3] <code>#basicFunction:getAtQQ</code></h4><ul>
<li>功能：取at对象的qq</li>
<li>参数：字符串（尤指CQ码）</li>
<li>返回：文本形式的qq号</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652531356-998104-7ef52e1b54b3e7ce.png"></li>
</ul>
<h4 id="gt-4-basicFunction-write-file"><a href="#gt-4-basicFunction-write-file" class="headerlink" title="&gt;[4] #basicFunction:write_file"></a>&gt;[4] <code>#basicFunction:write_file</code></h4><ul>
<li>功能：追加写文件，没有则创建</li>
<li>参数：文件路径，文件内容</li>
<li>返回：提示文本</li>
<li>说明：文件根目录DiceQQ//，我在生成文件时写了点注释，就比如会在当文件读写时在第一行特别注明文件名。</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652532311-215587-35aa6d41a8469dd9.png"><br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652532306-79898-312b586e9182eb27.png"></li>
</ul>
<h4 id="gt-5-basicFunction-read-file"><a href="#gt-5-basicFunction-read-file" class="headerlink" title="&gt;[5] #basicFunction:read_file"></a>&gt;[5] <code>#basicFunction:read_file</code></h4><ul>
<li>功能：读取文件全部内容</li>
<li>参数：文件路径</li>
<li>返回：有内容则返回字符串否则返回错误提示</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652532848-201463-3b032d5b2cba1d44.png"></li>
</ul>
<h4 id="gt-6-basicFunction-filter-spec-chars"><a href="#gt-6-basicFunction-filter-spec-chars" class="headerlink" title="&gt;[6] #basicFunction:filter_spec_chars"></a>&gt;[6] <code>#basicFunction:filter_spec_chars</code></h4><ul>
<li>功能：捕获并提取所有中文，合并后输出</li>
<li>参数：待捕获中文的字符串</li>
<li>返回：所有中文合并后的字符串</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652533253-492295-2c56f7627a54c1e4.png"></li>
</ul>
<h4 id="gt-7-basicFunction-getFileName"><a href="#gt-7-basicFunction-getFileName" class="headerlink" title="&gt;[7] #basicFunction:getFileName"></a>&gt;[7] <code>#basicFunction:getFileName</code></h4><ul>
<li>功能：取文件名，有扩展名</li>
<li>参数：文件路径</li>
<li>返回：字符串</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652535078-993169-6fc947dd5fe881d3.png"></li>
</ul>
<h4 id="gt-8-basicFunction-getFileName2"><a href="#gt-8-basicFunction-getFileName2" class="headerlink" title="&gt;[8] #basicFunction:getFileName2"></a>&gt;[8] <code>#basicFunction:getFileName2</code></h4><ul>
<li>功能：取文件名，无扩展名</li>
<li>参数：文件路径</li>
<li>返回：字符串</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652535090-491912-475b2a113fb5d0a2.png"></li>
</ul>
<h4 id="gt-9-basicFunction-utfStrLen"><a href="#gt-9-basicFunction-utfStrLen" class="headerlink" title="&gt;[9] #basicFunction:utfStrLen"></a>&gt;[9] <code>#basicFunction:utfStrLen</code></h4><ul>
<li>功能：返回文本中的字符总数目</li>
<li>参数：字符串</li>
<li>返回：数字</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652536608-701822-3e9f7c7fe9aa2e6d.png"></li>
</ul>
<h4 id="gt-10-basicFunction-MD5"><a href="#gt-10-basicFunction-MD5" class="headerlink" title="&gt;[10] #basicFunction:MD5"></a>&gt;[10] <code>#basicFunction:MD5</code></h4><ul>
<li>功能：转字符串为MD5</li>
<li>参数：待转换字符串</li>
<li>返回：MD5</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652537139-681577-35d6b69778ddd24a.png"><br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652537160-810141-screenshot-2022-05-14-22-00-48-36.jpg"><br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652537170-642829-screenshot-2022-05-14-22-01-10-15.jpg"></li>
</ul>
<h4 id="gt-11-basicFunction-table-exists"><a href="#gt-11-basicFunction-table-exists" class="headerlink" title="&gt;[11] #basicFunction:table_exists"></a>&gt;[11] <code>#basicFunction:table_exists</code></h4><ul>
<li>功能：判断数组中是否存在指定字符串</li>
<li>参数：数组，查找的字符串</li>
<li>返回：有则为true，没有则什么都不返回</li>
<li>示例：<br>先看一下内部代码，设定了一个tables<br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652541688-375470-screenshot-2022-05-14-23-19-42-70.jpg"><br>接着输入看看效果<br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652541709-390654-644c1b552d1efffa.png"></li>
</ul>
<h4 id="gt-12-basicFunction-encodeBase64"><a href="#gt-12-basicFunction-encodeBase64" class="headerlink" title="&gt;[12] #basicFunction:encodeBase64"></a>&gt;[12] <code>#basicFunction:encodeBase64</code></h4><ul>
<li>功能：返回字符串base64加密后的文本</li>
<li>参数：待加密字符串</li>
<li>返回：base64加密后文本</li>
<li>说明：因为不支持 <code>math.pow</code> 所以把写好的解密删了</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652542191-759474-40c8bacd80597d41.png"><br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652537170-642829-screenshot-2022-05-14-22-01-10-15.jpg"><br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652537160-810141-screenshot-2022-05-14-22-00-48-36.jpg"></li>
</ul>
<h4 id="gt-13-basicFunction-string-split"><a href="#gt-13-basicFunction-string-split" class="headerlink" title="&gt;[13] #basicFunction:string.split"></a>&gt;[13] <code>#basicFunction:string.split</code></h4><ul>
<li>功能：分割字符串</li>
<li>参数：待分割字符串，分隔符</li>
<li>返回：字符串表</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652551923-200447-7c2b18bc815913ea.png"></li>
</ul>
<h4 id="gt-14-basicFunction-string-count"><a href="#gt-14-basicFunction-string-count" class="headerlink" title="&gt;[14] #basicFunction:string.count"></a>&gt;[14] <code>#basicFunction:string.count</code></h4><ul>
<li>功能：统计字符串中字符的个数</li>
<li>参数：待统计的字符串</li>
<li>返回：总字符个数、英文字符数、中文字符数</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652544106-120444-2bc227485b07f827.png"></li>
</ul>
<h4 id="gt-15-basicFunction-string-width"><a href="#gt-15-basicFunction-string-width" class="headerlink" title="&gt;[15] #basicFunction:string.width"></a>&gt;[15] <code>#basicFunction:string.width</code></h4><ul>
<li>功能：计算字符串的宽度</li>
<li>参数：字符串</li>
<li>返回：数字</li>
<li>说明：这里一个中文等于两个英文，后面的情况同理，此函数和 _utfStrLen_原理类似</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652554310-333254-20bf853ca8430fd0.png"></li>
</ul>
<h4 id="gt-16-basicFunction-string-tocenter"><a href="#gt-16-basicFunction-string-tocenter" class="headerlink" title="&gt;[16] #basicFunction:string.tocenter"></a>&gt;[16] <code>#basicFunction:string.tocenter</code></h4><ul>
<li>功能: 把字符串扩展为长度为len,居中对齐, 其他地方以filledChar补齐</li>
<li>参数: 需要被扩展的字符、数字、字符串表，被扩展成的长度，填充字符（可以为空）</li>
<li>返回：字符串</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652553472-701179-49139d6f69a2cd50.png"></li>
</ul>
<h4 id="gt-3-14-basicFunction-string-toleft"><a href="#gt-3-14-basicFunction-string-toleft" class="headerlink" title="&gt;[3+14] #basicFunction:string.toleft"></a>&gt;[3+14] <code>#basicFunction:string.toleft</code></h4><ul>
<li>功能: 把字符串扩展为长度为len,左对齐, 其他地方用filledChar补齐</li>
<li>参数：需要被扩展的字符、数字、字符串表，被扩展成的长度，填充字符（可以为空）</li>
<li>返回：字符串</li>
<li>说明：中文相当于2个英文</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652553319-940907-3d59e78bd1371f52.png"></li>
</ul>
<h4 id="gt-18-basicFunction-string-toright"><a href="#gt-18-basicFunction-string-toright" class="headerlink" title="&gt;[18] #basicFunction:string.toright"></a>&gt;[18] <code>#basicFunction:string.toright</code></h4><ul>
<li>功能: 把字符串扩展为长度为len,右对齐, 其他地方用filledChar补齐</li>
<li>参数：需要被扩展的字符、数字、字符串表，被扩展成的长度，填充字符（可以为空）</li>
<li>返回：字符串</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652553542-607083-2e26d59c330482.png"></li>
</ul>
<h4 id="gt-19-basicFunction-string-ltrim"><a href="#gt-19-basicFunction-string-ltrim" class="headerlink" title="&gt;[19] #basicFunction:string.ltrim"></a>&gt;[19] <code>#basicFunction:string.ltrim</code></h4><ul>
<li>功能：对齐，去除通配符</li>
<li>参数：文本</li>
<li>返回：文本</li>
<li>示例：暂无</li>
</ul>
<h4 id="gt-20-basicFunction-string-rtrim"><a href="#gt-20-basicFunction-string-rtrim" class="headerlink" title="&gt;[20] #basicFunction:string.rtrim"></a>&gt;[20] <code>#basicFunction:string.rtrim</code></h4><ul>
<li>功能：对齐，去除通配符</li>
<li>参数：文本</li>
<li>返回：文本</li>
<li>示例：暂无</li>
</ul>
<h4 id="gt-21-basicFunction-string-trim"><a href="#gt-21-basicFunction-string-trim" class="headerlink" title="&gt;[21] #basicFunction:string.trim"></a>&gt;[21] <code>#basicFunction:string.trim</code></h4><ul>
<li>功能：对齐，去除通配符</li>
<li>参数：文本</li>
<li>返回：文本</li>
<li>示例：暂无</li>
</ul>
<h4 id="gt-22-basicFunction-ranStr"><a href="#gt-22-basicFunction-ranStr" class="headerlink" title="&gt;[22] #basicFunction:ranStr"></a>&gt;[22] <code>#basicFunction:ranStr</code></h4><ul>
<li>功能：随机输出字符串</li>
<li>参数：数字（输出个数）</li>
<li>返回：字符串</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652554731-126125-39ebb8a73aeede9.png"></li>
</ul>
<h4 id="gt-23-basicFunction-tryCatch"><a href="#gt-23-basicFunction-tryCatch" class="headerlink" title="&gt;[23] #basicFunction:tryCatch"></a>&gt;[23] <code>#basicFunction:tryCatch</code></h4><ul>
<li>功能：监听错误报告如有则反馈</li>
<li>参数：函数名</li>
<li>返回：错误信息</li>
<li>说明：lua有两个函数可以捕获异常，分别是pcall(fun[,arg1,…])和xpcall(fun,errfun,[,arg1,…])，对比这两个函数,xpcall多了异常处理，这里仅采用pcall()做示例</li>
<li>示例：在没有改代码的情况下如果直接输入参数，将把输入的文本当做函数名找错<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652555008-125097-45b942fe53a293c.png"><br>我们看代码部分，我已经修改好了参数，好，现在它将会调用自己了<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652555367-976137-img20220515030858.jpg"><br>让我们猜一下会输出什么？<br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652555401-577693-5f1c2329f7089d24.png"><br>是啊，没有错误，因为是奔着找错的目的执行 _找错_函数，当它能完整运行时自然是没有错误，简言之：</li>
</ul>
<p>错误的错误就是没有错误（好耶！我又说了一句凡人名言）</p>
<p>那么，换成别的函数还会如此吗？<br>这里以 <em>bubbleSort</em> 函数为例<em>因为很快就要讲到ta了</em><br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652555938-996780-screenshot-2022-05-15-03-18-06-41.jpg"><br>很好，果然不负众望的报错并让krypton拦截了<br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652556076-36222-1f5d440399af905f.png"><br>那么输入参数会发生什么？<br>…to be continue</p>
<h4 id="gt-24-basicFunction-bubbleSort"><a href="#gt-24-basicFunction-bubbleSort" class="headerlink" title="&gt;[24] #basicFunction:bubbleSort"></a>&gt;[24] <code>#basicFunction:bubbleSort</code></h4><ul>
<li>功能：冒泡（升序）排序</li>
<li>参数：tab:目标表</li>
<li>返回：排好序的文本</li>
<li>示例：<br><code>tab = &#123;3, 4, 61, 7, 5, 8, 56, 14, 11, 10&#125; return bubbleSort(tab)</code><br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652556743-633251-36c62b11467b00a2.png"></li>
</ul>
<h4 id="gt-25-basicFunction-load"><a href="#gt-25-basicFunction-load" class="headerlink" title="&gt;[25] #basicFunction:load"></a>&gt;[25] <code>#basicFunction:load</code></h4><ul>
<li>功能：安全执行lua语句</li>
<li>说明：暂时弃用</li>
<li>示例：暂无</li>
</ul>
<h4 id="gt-26-basicFunction-sortTable-delRepeat"><a href="#gt-26-basicFunction-sortTable-delRepeat" class="headerlink" title="&gt;[26] #basicFunction:sortTable_delRepeat"></a>&gt;[26] <code>#basicFunction:sortTable_delRepeat</code></h4><ul>
<li>功能：将重复出现的数字全部删除(后续数字往前移)</li>
<li>参数：tab:数组</li>
<li>返回：去完重的字符串（多半还是降序的）</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652557118-960232-5fe3b9332f1eabbb.png"></li>
</ul>
<h4 id="gt-27-1-basicFunction-Round"><a href="#gt-27-1-basicFunction-Round" class="headerlink" title="&gt;[27-1] #basicFunction:Round"></a>&gt;[27-1] <code>#basicFunction:Round</code></h4><ul>
<li>功能：四舍五入(常用)</li>
<li>参数：num:待计算数字</li>
<li>返回：计算结果</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652557301-733453-57f1940480749985.png"></li>
</ul>
<h4 id="gt-27-2-basicFunction-Round2"><a href="#gt-27-2-basicFunction-Round2" class="headerlink" title="&gt;[27-2] #basicFunction:Round2"></a>&gt;[27-2] <code>#basicFunction:Round2</code></h4><ul>
<li>功能：四舍五入(奇进偶舍)</li>
<li>参数：num:待计算数字 i:保留几位小数</li>
<li>返回：计算结果</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652557524-430485-37f48a1ee6238e19.png"></li>
</ul>
<h4 id="gt-28-basicFunction-Multiply"><a href="#gt-28-basicFunction-Multiply" class="headerlink" title="&gt;[28] #basicFunction:Multiply"></a>&gt;[28] <code>#basicFunction:Multiply</code></h4><ul>
<li>功能：相乘，同时判断了是否有null值</li>
<li>参数：都看得懂吧//两个数字…</li>
<li>返回：计算结果</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652557646-168592-1b35afe337a9742d.png"></li>
</ul>
<h4 id="gt-29-basicFunction-Divide"><a href="#gt-29-basicFunction-Divide" class="headerlink" title="&gt;[29] #basicFunction:Divide"></a>&gt;[29] <code>#basicFunction:Divide</code></h4><ul>
<li>功能：相除</li>
<li>参数：denominator:除数 numerator:被除数</li>
<li>返回：计算结果</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652557740-451-6ccd7840db133641.png"></li>
</ul>
<h4 id="gt-30-1-basicFunction-Ceil"><a href="#gt-30-1-basicFunction-Ceil" class="headerlink" title="&gt;[30-1] #basicFunction:Ceil"></a>&gt;[30-1] <code>#basicFunction:Ceil</code></h4><ul>
<li>功能：取整</li>
<li>参数：数字</li>
<li>返回：结果</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652557790-14329-4f2b567f4dcf84d9.png"></li>
</ul>
<h4 id="gt-30-2-basicFunction-Ceil2"><a href="#gt-30-2-basicFunction-Ceil2" class="headerlink" title="&gt;[30-2] #basicFunction:Ceil2"></a>&gt;[30-2] <code>#basicFunction:Ceil2</code></h4><ul>
<li>参数：数字</li>
<li>返回：结果</li>
<li>说明：第二种取整思路</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652557836-897466-682bdcbbe4e50ec4.png"></li>
</ul>
<h4 id="gt-31-basicFunction-unicode2Chinese"><a href="#gt-31-basicFunction-unicode2Chinese" class="headerlink" title="&gt;[31] #basicFunction:unicode2Chinese"></a>&gt;[31] <code>#basicFunction:unicode2Chinese</code></h4><ul>
<li>功能：利用JSON解析器把Unicode转中文汉字</li>
<li>参数：uni:完整的json格式Unicode码</li>
<li>返回：汉字字符串</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652558928-339373-407db05212e7f332.png"></li>
</ul>
<h4 id="gt-32-basicFunction-stamp2Time"><a href="#gt-32-basicFunction-stamp2Time" class="headerlink" title="&gt;[32] #basicFunction:stamp2Time"></a>&gt;[32] <code>#basicFunction:stamp2Time</code></h4><ul>
<li>功能：时间戳转时间</li>
<li>参数：Stamp:时间戳</li>
<li>返回：字符串</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652559106-59803-2aba66b7a6713455.png"></li>
</ul>
<h4 id="gt-33-basicFunction-Match"><a href="#gt-33-basicFunction-Match" class="headerlink" title="&gt;[33] #basicFunction:Match"></a>&gt;[33] <code>#basicFunction:Match</code></h4><ul>
<li>功能：匹配截取字符串</li>
<li>参数：msg:待匹配的字符串 num:截取位置</li>
<li>说明：汉字长度为2，特别注意</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652559448-296157-4861fe8be91b307b.png"></li>
</ul>
<h4 id="gt-34-1-basicFunction-fitemSort"><a href="#gt-34-1-basicFunction-fitemSort" class="headerlink" title="&gt;[34-1] #basicFunction:fitemSort"></a>&gt;[34-1] <code>#basicFunction:fitemSort</code></h4><ul>
<li>功能：取数据存入数组</li>
<li>参数：字符串</li>
<li>返回：数组</li>
<li>示例：暂无</li>
</ul>
<h4 id="gt-34-2-basicFunction-ffitemSort"><a href="#gt-34-2-basicFunction-ffitemSort" class="headerlink" title="&gt;[34-2] #basicFunction:ffitemSort"></a>&gt;[34-2] <code>#basicFunction:ffitemSort</code></h4><ul>
<li>功能：取数据存入数组</li>
<li>参数：字符串</li>
<li>返回：数组</li>
<li>示例：暂无</li>
</ul>
<h4 id="gt-FUNCTION-INDEX-amp-LIST"><a href="#gt-FUNCTION-INDEX-amp-LIST" class="headerlink" title="&gt; FUNCTION INDEX&amp;LIST:"></a>&gt; FUNCTION INDEX&amp;LIST:</h4><p>[1]table_draw(tab) LINE:48<br>[2]num_or_string(x) LINE:55<br>[3]getAtQQ(str) LINE:67<br>[4]write_file(path, text) LINE:79<br>[5]read_file(path) LINE:88<br>[6]filter_spec_chars(s) LINE:103<br>[7]getFileName(path) LINE:133<br>[8]getFileName2(path) LINE:140<br>[9]utfstrlen(str) LINE:147<br>[10]MD5(str) LINE:168<br>[11]table_exists(tables,value) LINE:395<br>[12]encodeBase64(source_str) LINE:408<br>[13]string.split(str, delimiter) LINE:443<br>[14]string.count(str) LINE:460<br>[15]string.width(str) LINE:470<br>[16]string.tocenter(str, len, filledChar) LINE:479<br>[17]string.toleft(str, len, filledChar) LINE:511<br>[18]string.toright(str, len, filledChar) LINE:540<br>[19]string.ltrim(str) LINE:573<br>[20]string.rtrim(str) LINE:577<br>[21]string.trim(str) LINE:581<br>[22]ranStr(num) LINE:588<br>[23]tryCatch(fun) LINE:604<br>[24]bubbleSort(tab) LINE:620<br>[25]弃用 LINE:646<br>[26]sortTable_delRepeat(tab) LINE:653<br>[27-1]Round(num, i) LINE:672<br>[27-2]Round2(num, i) LINE:681<br>[28]Multiply(num1,num2) LINE:702<br>[29]Divide(denominator,numerator) LINE:718<br>[30-1]Ceil(num) LINE:734<br>[30-2]Ceil2(num) LINE:753<br>[31]unicode2Chinese(uni) LINE:765<br>[32]stamp2Time(Stamp) LINE:782<br>[33]Match(msg,num) LINE:789<br>[34-1]fitemSort(rest) LINE:798<br>[34-2]ffitemSort(rest) LINE:809</p>
<h3 id="在lua编写过程中使用"><a href="#在lua编写过程中使用" class="headerlink" title="在lua编写过程中使用"></a>在lua编写过程中使用</h3><p>由于时间来不及，在lua中使用的教程与进阶用法将会在日后补齐。<br><strong>to be…</strong></p>
<h3 id="一些实例"><a href="#一些实例" class="headerlink" title="一些实例"></a>一些实例</h3><p><strong>getAtQQ</strong>的使用：<span class="exturl" data-url="aHR0cHM6Ly9mb3J1bS5rb2tvbmEudGVjaC9kLzExNDY=">【指令脚本】爬/丢/赞<i class="fa fa-external-link-alt"></i></span><br><strong>tryCatch</strong>的使用：<span class="exturl" data-url="aHR0cHM6Ly9mb3J1bS5rb2tvbmEudGVjaC9kLzExNjg=">【指令脚本/思想】巴拉巴拉骰娘自检和偷懒自定义报错什么的<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>技术</category>
        <category>Lua</category>
      </categories>
      <tags>
        <tag>Dice</tag>
      </tags>
  </entry>
  <entry>
    <title>chat-ActObjectValue:help</title>
    <url>/2022/06/16/chat-AOV-help/</url>
    <content><![CDATA[<div class="note warning"><p><strong>WARNING</strong><br>这是关于<a href="https://cypress0522.github.io/2022/06/11/chat-ActObjectValue/"><strong>chat-ActObjectValue</strong></a>的隐藏更新页面，你不应该在这里进行任何操作！</p>
</div>

<h2 id="1-0数组写法"><a href="#1-0数组写法" class="headerlink" title="1.0数组写法"></a>1.0数组写法</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*FINAL VERSION</span><br><span class="line">#&lt;get|set&gt;&lt;User|Group&gt;&lt;Today|Conf&gt; &lt;Object&gt; &lt;Ng&gt; [Value]</span><br><span class="line">*例1，获取2753364619用户的jrrp：</span><br><span class="line">#getUserToday 2753364619 jrrp</span><br><span class="line">*例2，特别地，清空：</span><br><span class="line">#setUserConf 2753364619 好感度 nil</span><br></pre></td></tr></table></figure>

<h2 id="2-0函数写法"><a href="#2-0函数写法" class="headerlink" title="2.0函数写法"></a>2.0函数写法</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*Ver:2.0</span><br><span class="line">#&lt;get|set&gt;&lt;User|Group&gt;&lt;Today|Conf&gt;(&lt;Object&gt;,&lt;Ng&gt;[,Value])</span><br><span class="line">*例1，获取2753364619用户的jrrp：</span><br><span class="line">#getUserToday(&quot;2753364619&quot;,&quot;jrrp&quot;,0)</span><br><span class="line">*例2，清空操作：</span><br><span class="line">#setUserConf(&quot;2753364619&quot;,&quot;好感度&quot;,nil)</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>chat-ActObjectValue 1.0</title>
    <url>/2022/06/11/chat-ActObjectValue-1.0/</url>
    <content><![CDATA[<blockquote>
<p>使用《署名—非商业性使用—相同方式共享 4.0 协议国际版》（CC BY-NC-SA 4.0）进行授权<br><span class="exturl" data-url="aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC9sZWdhbGNvZGUuemgtSGFucw==">https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode.zh-Hans<i class="fa fa-external-link-alt"></i></span><br>许可协议：CC BY-NC-SA 4.0<br>声明：本脚本适合<strong>有一定脚本编写基础</strong>的master使用，所造成的一切损失作者概不负责。</p>
</blockquote>
<div class="note warning"><p><strong>WARNING</strong><br>1.0已不再更新，或许你可以期待一下<a href="https://cypress0522.github.io/2022/06/18/chat-ActObjectValue-2.0"><strong>2.0</strong></a>？</p>
</div>

<h3 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h3><ul>
<li>默认设置参数输入格式：#setUserConf <user_qq> <Conf_name> <value><br>清空和获取同理。</li>
<li>注意：必须写UserConf或者UserToday，否则不输出。</li>
<li>作者：简律纯</li>
<li>联系方式：qq:A2C29K9</li>
<li>版本：1.0(FINAL)</li>
<li>更新日期：2022/6/16</li>
</ul>
<blockquote>
<p>关键词：<code>#set</code> <code>#get</code> <code>#help log</code> <code>#help chataov</code></p>
</blockquote>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2N5cHJlc3MwNTIyL2N5cHJlc3MwNTIyLmdpdGh1Yi5pby9yZWxlYXNlcy90YWcvY2hhdC1BY3RPYmplY3RWYWx1ZQ==">chat-ActObjectValue.zip<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>在测试时总会遇到要重置或获取或设置某个用户配置的情况，但苦于没有这方面的指令，所以写了一个，目前可以在聊天窗口中设置用户全局配置或当日配置。<br>当然，你也可以使用更多花里胡哨的东西。</p>
<p><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-04-22/1650594557-426212-4acb8e97ccd6fe5a.png"><br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-01/1651378789-731493-e5371e816c74ee6.png"></p>
<blockquote>
<p>清 空 可 使 用 set nil</p>
</blockquote>
<h2 id="进阶用法"><a href="#进阶用法" class="headerlink" title="进阶用法"></a>进阶用法</h2><ul>
<li>Chat-AOV；</li>
</ul>
<p>1.赋予所有人权限：<br><code>#setUserConf &lt;DiceQQ&gt; &lt;chat_perm&gt; 1</code><br>2.赋予单个用户权限：<br><code>.user trust &lt;用户&gt; 4</code></p>
<ul>
<li>Dice；</li>
</ul>
<p>1.查看|修改 jrrp：<br><code>#get|setUserToday &lt;用户&gt; &lt;jrrp&gt;</code><br>2.查看|修改 用户信任trust：<br><code>#get|setUserConf &lt;用户&gt; &lt;trust&gt;</code><br>3.查看|修改 群配置rc房规：<br><code>#get|setGroupConf &lt;群号&gt; &lt;rc房规&gt; &lt;参数&gt;</code><br>4.清空/重置 配置：<br><code>#setUserConf 2753364619 好感度 nil</code></p>
<h2 id="TODO-list"><a href="#TODO-list" class="headerlink" title="TODO list"></a>TODO list</h2><ul>
<li>各类报错回复</li>
<li>设置数据类型</li>
</ul>
<h2 id="关于5-8更新内容的示例"><a href="#关于5-8更新内容的示例" class="headerlink" title="关于5.8更新内容的示例"></a>关于5.8更新内容的示例</h2><p>5.8重点更新了记录的查看方式，新增了 <code>start_crrt</code>配置。</p>
<p>使用命令 <code>#setUserConf &lt;骰娘QQ&gt; start_crrt &lt;值&gt; </code>进行更改，其更改将会改变 <code>#help log</code>的返回内容：<br><code>start_crrt</code> 默认为0，这时查看日志会显示最新的一条。<br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-07/1651953020-849510-29e7e2d45c34a60b.png"><br>当 <code>start_crrt</code>修改为1至5范围内的数字，会显示最近的2至6条记录。<br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-07/1651953344-615701-574c97559bc3ae34.png"><br>设置范围6至30时会显示对应数量的记录，但不是在群里，bot会私发给指令发出者。<br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-07/1651953608-811583-315f836bf1e21646.png"><br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-07/1651953634-841540-1a024626f1fb6728.png"></p>
<h2 id="如何安装使用？"><a href="#如何安装使用？" class="headerlink" title="如何安装使用？"></a>如何安装使用？</h2><p>1.解压安装包<br>2.将安装包内文件与文件夹全部放入plugin文件夹<br>3.使用命令<code>.system load</code></p>
]]></content>
      <categories>
        <category>技术</category>
        <category>Lua</category>
      </categories>
      <tags>
        <tag>Dice</tag>
      </tags>
  </entry>
  <entry>
    <title>chat-ActObjectValue 2.0</title>
    <url>/2022/06/18/chat-ActObjectValue-2.0/</url>
    <content><![CDATA[<details class="note "><summary><p>secondary</p>
</summary>
<p><strong>NOTICE</strong><br>2.0 或许在明天就出了？</p>

</details>

<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote>
<p>说句实话在昨天2.0也只是个创建了一个空文件夹的存在，但是今天突然就写完了，并且写得彻彻底底的，总之能用便是了！</p>
</blockquote>
<p>只需要两步即可完成操作</p>
<h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><h3 id="添加回复命令"><a href="#添加回复命令" class="headerlink" title="添加回复命令"></a>添加回复命令</h3><p>在开始之前，你需要对自己家的骰娘输入以下命，其中，<code>require &quot;catchError&quot;</code>是必须的库，其他可根据需要添加。</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">.reply set</span><br><span class="line">Prefix=#</span><br><span class="line">Lua=</span><br><span class="line"><span class="built_in">require</span> <span class="string">&quot;catchError&quot;</span></span><br><span class="line"><span class="built_in">require</span> <span class="string">&quot;basicFunction&quot;</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">load</span>(<span class="string">&quot;return &quot;</span>..<span class="built_in">string</span>.<span class="built_in">gsub</span>(msg.fromMsg,<span class="number">2</span>))()</span><br></pre></td></tr></table></figure>

<p>好的，目前你已经完成了三分之二了！<br>接下来让我们完成最后一步操作。</p>
<h3 id="安装库"><a href="#安装库" class="headerlink" title="安装库"></a>安装库</h3><p>1.下载<span class="exturl" data-url="aHR0cHM6Ly9naXJodWIuY29tL2N5cHJlc3MwNTIy">catchError<i class="fa fa-external-link-alt"></i></span><br>2.将lua库丢进<code>Diceki\lua\</code>文件夹下<br>3.在聊天窗口使用<code>.system load</code>命令</p>
]]></content>
      <categories>
        <category>技术</category>
        <category>Lua</category>
      </categories>
      <tags>
        <tag>Dice</tag>
      </tags>
  </entry>
  <entry>
    <title>getFileList 获取文件夹列表</title>
    <url>/2022/08/03/getFileList/</url>
    <content><![CDATA[<div class="note success"><p><strong>getFileList</strong><br>简单的调用控制台获取文件夹列表实例</p>
</div>

<h1 id="获取文件夹列表"><a href="#获取文件夹列表" class="headerlink" title="获取文件夹列表"></a>获取文件夹列表</h1><blockquote>
<p>使用《署名—非商业性使用—相同方式共享 4.0 协议国际版》（CC BY-NC-SA 4.0）进行授权。<br><span class="exturl" data-url="aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC9sZWdhbGNvZGUuemgtSGFucw==">https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode.zh-Hans<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>[ toc ]</p>
<table>
<thead>
<tr>
<th align="left">System</th>
<th align="center">statement</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Windows</td>
<td align="center">supported</td>
</tr>
<tr>
<td align="left">Linux</td>
<td align="center">unsupported</td>
</tr>
<tr>
<td align="left">IOS</td>
<td align="center">unsupported</td>
</tr>
</tbody></table>
<hr>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2N5cHJlc3MwNTIyL2N5cHJlc3MwNTIyLmdpdGh1Yi5pby9yZWxlYXNlcy90YWcvZ2V0RmlsZUxpc3Q=">getFileList.zip<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h3><ul>
<li>作者： 简律纯</li>
<li>联系方式：qq:a2c29k9</li>
<li>版本：v1.0</li>
<li>更新日期：2022/08/03</li>
<li>关键词：<br><code>--getDiceList=</code><br><code>--getRootList=</code></li>
<li>许可协议：CC BY-NC-SA 4.0</li>
</ul>
<h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>利用os库中的os. execute执行cmd指令，达到获取文件夹列表的目的。</p>
<h3 id="须知"><a href="#须知" class="headerlink" title="须知"></a>须知</h3><p>该脚本只适配win平台，linux版本将会在后续更新（或者你也可以修改脚本，将dir改为ls即可，注意linux斜杠和反斜杠与win的区别），MA暂无解决方法。</p>
<h3 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h3><blockquote>
<p><code>--getDiceList=nil</code>与 <code>--getRootList=nil</code>分别用于获取dice根目录列表以及框架根目录列表，后接二级目录或更多（你需要用两个反斜杠<a href="">\</a>将他们连接）子目录来获取其列表。每次执行命令，脚本将会在dice根目录生成对应的DiceList.txt与RootList.txt，若文件太多发不出来也可以去那边查看。</p>
</blockquote>
<h3 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h3><blockquote>
<p>获取根目录列表<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-08-03/1659492690-490071-13b5fe1b2faf154d.png"></p>
</blockquote>
<blockquote>
<p>获取根目录二级或三级文件夹列表<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-08-03/1659492727-777395-17c81e22d7ab297.png"><br><strong>获取Dice文件夹二级或更多级文件夹列表同理。</strong></p>
</blockquote>
<blockquote>
<p>获取Dice文件夹列表<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-08-03/1659492798-371911-1528bb3c4ba6fcb6.png"></p>
</blockquote>
<h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">---------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">-- @getFileList 获取文件列表.</span></span><br><span class="line"><span class="comment">-- Author @简律纯(qq:a2c29k9)</span></span><br><span class="line"><span class="comment">-- @License MIT.</span></span><br><span class="line"><span class="comment">-- 2022/08/03</span></span><br><span class="line"><span class="comment">---------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">msg_order=&#123;[<span class="string">&quot;--getDiceList=&quot;</span>]=<span class="string">&quot;getDiceList&quot;</span>,[<span class="string">&quot;--getRootList=&quot;</span>]=<span class="string">&quot;getRootList&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">read_file = <span class="function"><span class="keyword">function</span><span class="params">(path,mode1,mode2)</span></span></span><br><span class="line">    <span class="keyword">local</span> text = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">local</span> file = <span class="built_in">io</span>.<span class="built_in">open</span>(<span class="built_in">path</span>,mode1)</span><br><span class="line">    <span class="keyword">if</span> (file ~= <span class="literal">nil</span>) <span class="keyword">then</span></span><br><span class="line">      text = file.<span class="built_in">read</span>(file, mode2)</span><br><span class="line">      <span class="built_in">io</span>.<span class="built_in">close</span>(file)</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;没有找到文件哦~&quot;</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> text</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">getLineCount = <span class="function"><span class="keyword">function</span><span class="params">(path)</span></span></span><br><span class="line"><span class="keyword">local</span> BUFSIZE = <span class="number">2</span>^<span class="number">13</span></span><br><span class="line"><span class="keyword">local</span> f = <span class="built_in">io</span>.<span class="built_in">input</span>(<span class="built_in">path</span>)</span><br><span class="line"><span class="keyword">local</span> lc = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">local</span> <span class="built_in">lines</span>,rest = f:<span class="built_in">read</span>(BUFSIZE,<span class="string">&#x27;*line&#x27;</span>)</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">lines</span> <span class="keyword">then</span> <span class="keyword">break</span> <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">if</span> rest <span class="keyword">then</span> <span class="built_in">lines</span> = <span class="built_in">lines</span> .. rest .. <span class="string">&#x27;\n&#x27;</span> <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">local</span> _,t = <span class="built_in">string</span>.<span class="built_in">gsub</span>(<span class="built_in">lines</span>,<span class="string">&quot;%S+&quot;</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line">        _,t = <span class="built_in">string</span>.<span class="built_in">gsub</span>(<span class="built_in">lines</span>,<span class="string">&quot;\n&quot;</span>,<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">        lc = lc + t</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> lc</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">getDiceList = <span class="function"><span class="keyword">function</span><span class="params">(msg)</span></span></span><br><span class="line">    <span class="keyword">local</span> <span class="built_in">path</span> = <span class="built_in">string</span>.<span class="built_in">sub</span>(msg.fromMsg,#<span class="string">&#x27;--getDiceList=&#x27;</span>+<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">local</span> Dir = <span class="built_in">path</span></span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">path</span> == <span class="string">&#x27;nil&#x27;</span> <span class="keyword">then</span> Dir = <span class="literal">nil</span> <span class="keyword">end</span></span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> Dir <span class="keyword">then</span> </span><br><span class="line">        cmd = <span class="string">&#x27;dir &#x27;</span>.. getDiceDir()..<span class="string">&#x27;\\&#x27;</span>..<span class="built_in">path</span>..<span class="string">&#x27; /b &gt;&#x27;</span>..getDiceDir()..<span class="string">&#x27;//DiceList.txt&#x27;</span></span><br><span class="line">        <span class="built_in">os</span>.<span class="built_in">execute</span>(cmd)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        cmd = <span class="string">&#x27;dir &#x27;</span>.. getDiceDir()..<span class="string">&#x27; /b &gt;&#x27;</span>..getDiceDir()..<span class="string">&#x27;//DiceList.txt&#x27;</span></span><br><span class="line">        <span class="built_in">os</span>.<span class="built_in">execute</span>(cmd)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  </span><br><span class="line">    <span class="keyword">return</span> read_file(getDiceDir()..<span class="string">&#x27;//DiceList.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>,<span class="string">&#x27;*a&#x27;</span>)..<span class="built_in">os</span>.<span class="built_in">date</span>(<span class="string">&#x27;\n%x&#x27;</span>)..<span class="string">&#x27;\n文件夹与文件共 &#x27;</span>..getLineCount(getDiceDir()..<span class="string">&#x27;//DiceList.txt&#x27;</span>)..<span class="string">&#x27; 个&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">getRootList = <span class="function"><span class="keyword">function</span><span class="params">(msg)</span></span></span><br><span class="line">    <span class="keyword">local</span> <span class="built_in">path</span> = <span class="built_in">string</span>.<span class="built_in">sub</span>(msg.fromMsg,#<span class="string">&#x27;--getRootList=&#x27;</span>+<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">local</span> Dir = <span class="built_in">path</span></span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">path</span> == <span class="string">&#x27;nil&#x27;</span> <span class="keyword">then</span> Dir = <span class="literal">nil</span> <span class="keyword">end</span></span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> Dir <span class="keyword">then</span> </span><br><span class="line">        cmd = <span class="string">&#x27;dir &#x27;</span>..<span class="built_in">path</span>..<span class="string">&#x27; /b &gt;&#x27;</span>..getDiceDir()..<span class="string">&#x27;//RootList.txt&#x27;</span></span><br><span class="line">        <span class="built_in">os</span>.<span class="built_in">execute</span>(cmd)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        cmd = <span class="string">&#x27;dir /b &gt;&#x27;</span>..getDiceDir()..<span class="string">&#x27;//RootList.txt&#x27;</span></span><br><span class="line">        <span class="built_in">os</span>.<span class="built_in">execute</span>(cmd)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  </span><br><span class="line">    <span class="keyword">return</span> read_file(getDiceDir()..<span class="string">&#x27;//RootList.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>,<span class="string">&#x27;*a&#x27;</span>)..<span class="built_in">os</span>.<span class="built_in">date</span>(<span class="string">&#x27;\n%x&#x27;</span>)..<span class="string">&#x27;\n文件夹与文件共 &#x27;</span>..getLineCount(getDiceDir()..<span class="string">&#x27;//RootList.txt&#x27;</span>)..<span class="string">&#x27; 个&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>技术</category>
        <category>Lua</category>
      </categories>
      <tags>
        <tag>Dice</tag>
      </tags>
  </entry>
  <entry>
    <title>lua-colors</title>
    <url>/2022/08/16/lua-colors.howto/</url>
    <content><![CDATA[<div class="note primary"><p><strong>lua-colors</strong></p>
<blockquote>
<p>用lua解释色彩原理.</p>
</blockquote>
</div>

<p>颜色通常在软件中通过其在RGB（红-绿-蓝）颜色空间中的坐标进行编码。 不幸的是，RGB色彩空间非常不直观，另外某些颜色协调的原则在RGB中不容易表达出来。 HSL（色相-饱和度-亮度）色彩空间解决了这两个问题。这个库允许你在HSL色彩空间中处理颜色，计算协调的图案，然后转换为RGB。 (你可以在 <span class="exturl" data-url="aHR0cDovL3d3dy53b3JxeC5jb20vY29sb3IvY29sb3Jfd2hlZWwuaHRt">worqx.com<i class="fa fa-external-link-alt"></i></span> 看到更多关于色彩协调的相关内容)</p>
<h2 id="HSL-色彩空间"><a href="#HSL-色彩空间" class="headerlink" title="HSL 色彩空间"></a>HSL 色彩空间</h2><p>颜色在HSL中由三个值编码：色相，饱和度和亮度。</p>
<p><strong>亮度(Lightness)</strong> 正好与颜色的亮暗相反。 白色亮度为1，黑色亮度为0。 其他颜色介于它们之间。</p>
<p><strong>饱和度(Saturation)</strong> 代表颜色的强度，它显示颜色与灰色的距离。 以下是不同饱和度和亮度的红色渐变：</p>
<table>
 <tr>&nbsp;</tr>
 <tr><td colspan='11' style='text-align:center'>Lightness</td></tr>
 <tr><td>&nbsp</td><td>&nbsp</td>
<td style="width:40px; text-align: right; border: 1px solid gray;">0.0</td>
<td style="width:40px; text-align: right; border: 1px solid gray;">0.1</td>
<td style="width:40px; text-align: right; border: 1px solid gray;">0.2</td>
<td style="width:40px; text-align: right; border: 1px solid gray;">0.3</td>
<td style="width:40px; text-align: right; border: 1px solid gray;">0.4</td>

<td style="width:40px; text-align: right; border: 1px solid gray;">0.5</td>
<td style="width:40px; text-align: right; border: 1px solid gray;">0.6</td>
<td style="width:40px; text-align: right; border: 1px solid gray;">0.7</td>
<td style="width:40px; text-align: right; border: 1px solid gray;">0.8</td>
<td style="width:40px; text-align: right; border: 1px solid gray;">0.9</td>
<td style="width:40px; text-align: right; border: 1px solid gray;">1.0</td>
</tr>
 <tr>
  <td rowspan='11' style='vertical-align:center'>Saturation</td>

<td style="width:40px; text-align: right; border: 1px solid gray;">0.0</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #000000;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #191919;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #333333;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #4c4c4c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #666666;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #999999;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #b2b2b2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #cbcbcb;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e5e5e5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #fefefe;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">0.1</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #000000;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #1c1616;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #382d2d;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #544444;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #705b5b;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #8c7272;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a38e8e;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #baaaaa;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d1c6c6;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e8e2e2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #fefefe;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">0.2</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #000000;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #1e1414;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #3d2828;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #5b3d3d;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #7a5151;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #996666;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ad8484;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #c1a3a3;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d6c1c1;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #eae0e0;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #fffefe;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">0.3</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #000000;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #211111;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #422323;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #633535;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #844747;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a55959;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #b77a7a;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #c99b9b;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #dbbcbc;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #eddddd;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #feffff;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">0.4</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #000000;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #230f0f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #471e1e;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #6b2d2d;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #8e3d3d;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #b24c4c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #c17070;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d19393;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e0b7b7;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #efdbdb;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #fffefe;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">0.5</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #000000;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #260c0c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #4c1919;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #722626;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #993232;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #bf3f3f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #cc6565;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d88c8c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e5b2b2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f2d8d8;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #fffefe;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">0.6</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #000000;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #280a0a;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #511414;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #7a1e1e;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #a32828;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #cc3232;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d65b5b;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e08484;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #eaadad;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f4d6d6;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #fffefe;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">0.7</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #000000;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #2b0707;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #560f0f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #821616;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #ad1e1e;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d82626;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e05151;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e87c7c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #efa8a8;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f7d3d3;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #fefefe;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">0.8</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #000000;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #2d0505;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #5b0a0a;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #890f0f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #b71414;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e51919;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ea4747;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ef7575;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f4a3a3;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f9d1d1;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #fffefe;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">0.9</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #000000;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #300202;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #600505;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #910707;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #c10a0a;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f20c0c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f43d3d;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f76d6d;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f99e9e;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #fccece;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #fffefe;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">1.0</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #000000;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #330000;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #660000;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #990000;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #cc0000;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ff0000;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ff3232;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #fe6666;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ff9898;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ffcbcb;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #fffefe;">&nbsp;</td>
 </tr>
</table>

<p><strong>色相/色调(Hue)</strong> 是颜色的“color”：它让“绿色”与“红色”不同。色相 也可以表示为介于 0 和 1 之间的数字，但此库使用从 0 到 360 的值。<br>与亮度和饱和度不同，hue __loops__：色相360实际上与 0（红色）相同。</p>
<table>

 <tr><td colspan='11' style='text-align:center'>Saturation</td></tr>
 <tr><td>&nbsp;</td><td>&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray;">1.0</td>
<td style="width:40px; text-align: right; border: 1px solid gray;">0.9</td>
<td style="width:40px; text-align: right; border: 1px solid gray;">0.8</td>
<td style="width:40px; text-align: right; border: 1px solid gray;">0.7</td>
<td style="width:40px; text-align: right; border: 1px solid gray;">0.6</td>
<td style="width:40px; text-align: right; border: 1px solid gray;">0.5</td>

<td style="width:40px; text-align: right; border: 1px solid gray;">0.4</td>
<td style="width:40px; text-align: right; border: 1px solid gray;">0.3</td>
<td style="width:40px; text-align: right; border: 1px solid gray;">0.2</td>
<td style="width:40px; text-align: right; border: 1px solid gray;">0.1</td>
<td style="width:40px; text-align: right; border: 1px solid gray;">0.0</td>
 </tr>
 <tr>
  <td rowspan='37' width='100px' style='vertical-align:center'>Hue</td>

<td style="width:40px; text-align: right; border: 1px solid gray;">0</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ff0000;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f20c0c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e51919;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d82626;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #cc3232;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #bf3f3f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #b24c4c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a55959;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #996565;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #8c7272;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">10</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ff2a00;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f2330c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e53b19;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d84326;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #cc4c32;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #bf553f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #b25d4c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a56559;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #996e65;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #8c7672;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">20</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ff5500;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f2590c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e55d19;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d86126;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #cc6632;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #bf6a3f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #b26e4c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a57259;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #997665;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #8c7b72;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">30</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ff7f00;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f27f0c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e57f19;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d87f26;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #cc7f32;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #bf7f3f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #b27f4c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a57f59;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #997f65;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #8c7f72;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">40</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ffaa00;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f2a50c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e5a119;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d89d26;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #cc9932;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #bf943f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #b2904c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a58c59;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #998865;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #8c8372;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">50</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ffd400;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f2cc0c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e5c319;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d8bb26;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ccb232;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #bfaa3f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #b2a14c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a59959;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #999065;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #8c8872;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">60</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #feff00;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f2f20c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e5e519;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d8d826;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #cbcc32;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #bfbf3f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #b2b24c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a5a559;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #999965;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #8c8c72;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">70</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d4ff00;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #cbf20c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #c3e519;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #bad826;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #b2cc32;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a9bf3f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a1b24c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #99a559;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #909965;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #888c72;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">80</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a9ff00;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a5f20c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a1e519;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #9dd826;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #98cc32;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #94bf3f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #90b24c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #8ca559;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #889965;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #838c72;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">90</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7fff00;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7ff20c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7fe519;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7fd826;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7fcc32;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7fbf3f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7fb24c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7fa559;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f9965;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f8c72;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">100</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #54ff00;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #59f20c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #5de519;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #61d826;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #65cc32;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #6abf3f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #6eb24c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #72a559;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #769965;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7b8c72;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">110</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #2aff00;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #33f20c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #3be519;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #44d826;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #4ccc32;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #55bf3f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #5db24c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #65a559;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #6e9965;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #768c72;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">120</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #00ff00;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #0cf20c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #19e519;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #26d826;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #32cc32;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #3fbf3f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #4cb24c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #59a559;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #659965;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #728c72;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">130</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #00ff2a;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #0cf233;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #19e53b;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #26d844;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #32cc4c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #3fbf55;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #4cb25d;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #59a565;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #65996e;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #728c76;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">140</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #00ff55;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #0cf259;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #19e55d;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #26d861;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #32cc66;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #3fbf6a;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #4cb26e;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #59a572;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #659977;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #728c7b;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">150</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #00ff7f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #0cf27f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #19e57f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #26d87f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #32cc7f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #3fbf7f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #4cb27f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #59a57f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #65997f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #728c7f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">160</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #00ffaa;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #0cf2a5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #19e5a1;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #26d89d;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #32cc99;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #3fbf94;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #4cb290;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #59a58c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #659988;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #728c83;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">170</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #00ffd4;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #0cf2cc;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #19e5c3;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #26d8bb;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #32ccb2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #3fbfaa;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #4cb2a1;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #59a599;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #659990;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #728c88;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">180</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #00feff;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #0cf2f2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #19e5e5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #26d8d8;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #32cbcc;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #3fbfbf;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #4cb2b2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #59a5a5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #659999;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #728c8c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">190</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #00d4ff;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #0ccbf2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #19c3e5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #26bad8;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #32b2cc;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #3fa9bf;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #4ca1b2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #5999a5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #659099;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #72888c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">200</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #00a9ff;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #0ca5f2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #19a1e5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #269dd8;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #3298cc;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #3f94bf;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #4c90b2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #598ca5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #658899;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #72838c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">210</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #007fff;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #0c7ff2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #197fe5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #267fd8;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #327fcc;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #3f7fbf;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #4c7fb2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #597fa5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #657f99;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #727f8c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">220</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #0054ff;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #0c59f2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #195de5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #2661d8;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #3265cc;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #3f6abf;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #4c6eb2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #5972a5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #657699;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #727b8c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">230</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #002aff;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #0c33f2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #193be5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #2644d8;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #324ccc;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #3f55bf;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #4c5db2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #5965a5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #656e99;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #72768c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">240</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #0000ff;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #0c0cf2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #1919e5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #2626d8;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #3232cc;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #3f3fbf;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #4c4cb2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #5959a5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #656599;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #72728c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">250</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #2a00ff;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #320cf2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #3b19e5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #4326d8;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #4c32cc;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #543fbf;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #5d4cb2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #6559a5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #6e6599;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #76728c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">260</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #5500ff;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #590cf2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #5d19e5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #6126d8;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #6632cc;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #6a3fbf;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #6e4cb2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7259a5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #776599;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7b728c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">270</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f00ff;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f0cf2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f19e5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f26d8;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f32cc;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f3fbf;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f4cb2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f59a5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f6599;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f728c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">280</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #aa00ff;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a50cf2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a119e5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #9d26d8;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #9932cc;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #943fbf;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #904cb2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #8c59a5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #886599;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #83728c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">290</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d400ff;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #cb0cf2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #c319e5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ba26d8;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #b232cc;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a93fbf;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a14cb2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #9959a5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #906599;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #88728c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">300</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ff00fe;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f20cf2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e519e5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d826d8;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #cc32cb;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #bf3fbf;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #b24cb2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a559a5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #996599;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #8c728c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">310</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ff00d4;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f20ccb;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e519c3;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d826ba;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #cc32b2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #bf3fa9;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #b24ca1;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a55998;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #996590;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #8c7287;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">320</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ff00a9;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f20ca5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e519a1;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d8269d;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #cc3298;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #bf3f94;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #b24c90;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a5598c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #996588;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #8c7283;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">330</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ff007f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f20c7f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e5197f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d8267f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #cc327f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #bf3f7f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #b24c7f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a5597f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #99657f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #8c727f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">340</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ff0054;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f20c59;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e5195d;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d82661;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #cc3265;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #bf3f6a;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #b24c6e;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a55972;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #996576;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #8c727b;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">350</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ff002a;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f20c33;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e5193b;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d82644;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #cc324c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #bf3f55;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #b24c5d;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a55965;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #99656e;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #8c7276;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">360</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ff0000;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f20c0c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e51919;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d82626;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #cc3232;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #bf3f3f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #b24c4c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a55959;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #996565;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #8c7272;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
</table>

<h2 id="使用颜色进行-HSL-计算"><a href="#使用颜色进行-HSL-计算" class="headerlink" title="使用颜色进行 HSL 计算"></a>使用颜色进行 HSL 计算</h2><p>在HSL空间中创建颜色并将其转换为RGB。</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> colors = <span class="built_in">require</span>(<span class="string">&quot;colors&quot;</span>)</span><br><span class="line">c = colors.new(<span class="number">130</span>, <span class="number">.8</span>, <span class="number">0.3</span>) <span class="comment">-- 绿色，相当饱和，有点暗</span></span><br><span class="line"><span class="comment">-- =tostring(c)</span></span><br><span class="line"><span class="comment">-- #0f8923</span></span><br></pre></td></tr></table></figure>

<table>
 <tr><td width="100"></td><td width="160" style="background: #0f8923">&nbsp;</td></tr>
</table>

<p>你也可以通过它的RGB代码创建这些颜色：</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> colors = <span class="built_in">require</span>(<span class="string">&quot;colors&quot;</span>)</span><br><span class="line">c = colors.new(<span class="string">&quot;#0f8923&quot;</span>)</span><br><span class="line"><span class="comment">-- =tostring(c)</span></span><br><span class="line"><span class="comment">-- #0f8923</span></span><br></pre></td></tr></table></figure>

<p>当强制转换为字符串时，颜色将转换为其 RGB 形式：</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">=c</span><br><span class="line"><span class="comment">-- #0f8923</span></span><br></pre></td></tr></table></figure>

<table><tr><td width="100"></td><td width="160" style="background: #0f8923">&nbsp;</td></tr>
</table>

<p>查看 HSL ：</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(c.H, c.S, c.L)</span><br><span class="line"><span class="comment">-- 130     0.8     0.3</span></span><br></pre></td></tr></table></figure>

<p>改变饱和度：</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">=c:desaturate_by(<span class="number">.5</span>) <span class="comment">-- 将饱和度设置为饱和度*.5</span></span><br><span class="line"><span class="comment">-- #2d6b38</span></span><br></pre></td></tr></table></figure>
<table><tr><td width="100"></td><td width="160" style="background: #2d6b38">&nbsp;</td></tr>
</table>
    
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">=c:desaturate_to(<span class="number">.5</span>) <span class="comment">-- 将饱和度设置为 .5</span></span><br><span class="line"><span class="comment">-- #267233</span></span><br></pre></td></tr></table></figure>

<table><tr><td width="100"></td><td width="160" style="background: #267233">&nbsp;</td></tr>
</table>

<p>改变亮度：</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">=c:lighten_by(<span class="number">.5</span>) <span class="comment">-- 将亮度设置为亮度*.5</span></span><br><span class="line"><span class="comment">-- #14b72f</span></span><br></pre></td></tr></table></figure>

<table><tr><td width="100"></td><td width="160" style="background: #14b72f">&nbsp;</td></tr>
</table>

<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">=c:lighten_to(<span class="number">.5</span>) <span class="comment">-- 将亮度设置为 .5</span></span><br><span class="line"><span class="comment">-- #19e53b</span></span><br></pre></td></tr></table></figure>

<table><tr><td width="100"></td><td width="160" style="background: #19e53b">&nbsp;</td></tr>
</table>

<p>改变色相：</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">=c:hue_offset(<span class="number">180</span>) <span class="comment">-- 色调偏移 180</span></span><br><span class="line"><span class="comment">-- #890f75</span></span><br></pre></td></tr></table></figure>

<table><tr><td width="100"></td><td width="160" style="background: #890f75">&nbsp;</td></tr>
</table>

<h2 id="构建配色方案"><a href="#构建配色方案" class="headerlink" title="构建配色方案"></a>构建配色方案</h2><pre><code>要构建配色方案，我们通常从颜色开始，选择一种或多种匹配的颜色，然后从中获取阴影和色调。你可以在[worqx.com](http://www.worqx.com/color/combinations.htm)找到有关颜色组合的一些东西。
</code></pre>
<p>对于 <strong>单色</strong> 配色方案，我们只使用一开始的颜色以及它的色相和阴影：</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">tints = c:tints(<span class="number">5</span>) <span class="comment">-- 生成色相</span></span><br><span class="line"><span class="keyword">for</span> i,t <span class="keyword">in</span> <span class="built_in">ipairs</span>(tints) <span class="keyword">do</span> <span class="built_in">print</span>(t) <span class="keyword">end</span></span><br><span class="line"><span class="comment">-- #16c934</span></span><br><span class="line"><span class="comment">-- #3ee95a</span></span><br><span class="line"><span class="comment">-- #7ef091</span></span><br><span class="line"><span class="comment">-- #bef7c8</span></span><br><span class="line"><span class="comment">-- #ffffff</span></span><br></pre></td></tr></table></figure>

<table>
 <tr>
  <td width="100"></td>
  <td width="80" style="border:1px solid grey; background: #16c934">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #3ee95a">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #7ef091">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #bef7c8">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #ffffff">&nbsp;</td>
 </tr>
</table>

<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">shades = c:shades(<span class="number">5</span>) <span class="comment">-- 生成阴影</span></span><br><span class="line"><span class="keyword">for</span> i,s <span class="keyword">in</span> <span class="built_in">ipairs</span>(shades) <span class="keyword">do</span> <span class="built_in">print</span>(s) <span class="keyword">end</span></span><br><span class="line"><span class="comment">-- #0c6e1c</span></span><br><span class="line"><span class="comment">-- #095215</span></span><br><span class="line"><span class="comment">-- #06370e</span></span><br><span class="line"><span class="comment">-- #031b07</span></span><br><span class="line"><span class="comment">-- #000000</span></span><br></pre></td></tr></table></figure>

<table>
 <tr>
  <td width="100"></td>
  <td width="80" style="border:1px solid grey; background: #0c6e1c">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #095215">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #06370e">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #031b07">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #000000">&nbsp;</td>
 </tr>
</table>

<p>对于<strong>懒人</strong>方案，我们可以轻松得出懒人想要的颜色及其色调和阴影：</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">ctints = c:complementary():tints(<span class="number">5</span>) <span class="comment">-- 制作五种颜色的互补色</span></span><br><span class="line"><span class="keyword">for</span> i,t <span class="keyword">in</span> <span class="built_in">ipairs</span>(ctints) <span class="keyword">do</span> <span class="built_in">print</span>(t) <span class="keyword">end</span></span><br><span class="line"><span class="comment">-- #c916ac</span></span><br><span class="line"><span class="comment">-- #e93ecd</span></span><br><span class="line"><span class="comment">-- #f07edd</span></span><br><span class="line"><span class="comment">-- #f7beee</span></span><br><span class="line"><span class="comment">-- #fffff</span></span><br></pre></td></tr></table></figure>

<table>
  <td width="100"></td>
  <td width="80" style="border:1px solid grey; background: #16c934">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #3ee95a">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #7ef091">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #bef7c8">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #ffffff">&nbsp;</td>
 </tr>
 <tr>
  <td width="100"></td>
  <td width="80" style="border:1px solid grey; background: #c916ac">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #e93ecd">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #f07edd">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #f7beee">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #ffffff">&nbsp;</td>
 </tr>
</table>

<p>但是，为了减少对比度，我们可以坚持使用<strong>相邻</strong>的颜色：例如，起始颜色的 +/- 60度：</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">n1, n2 = c:neighbors(<span class="number">60</span>)  <span class="comment">-- 获得上下60个相邻的颜色</span></span><br><span class="line"><span class="keyword">for</span> i,t <span class="keyword">in</span> <span class="built_in">ipairs</span>(n1:tints()) <span class="keyword">do</span> <span class="built_in">print</span>(t) <span class="keyword">end</span></span><br><span class="line"><span class="comment">-- #16c98e</span></span><br><span class="line"><span class="comment">-- #3ee9b0</span></span><br><span class="line"><span class="comment">-- #7ef0ca</span></span><br><span class="line"><span class="comment">-- #bef7e4</span></span><br><span class="line"><span class="comment">-- #ffffff</span></span><br><span class="line"><span class="keyword">for</span> i,t <span class="keyword">in</span> <span class="built_in">ipairs</span>(n2:tints()) <span class="keyword">do</span> <span class="built_in">print</span>(t) <span class="keyword">end</span></span><br><span class="line"><span class="comment">-- #52c916</span></span><br><span class="line"><span class="comment">-- #77e93e</span></span><br><span class="line"><span class="comment">-- #a4f07e</span></span><br><span class="line"><span class="comment">-- #d1f7be</span></span><br><span class="line"><span class="comment">-- #ffffff</span></span><br></pre></td></tr></table></figure>

<table>
  <td width="100"></td>
  <td width="80" style="border:1px solid grey; background: #16c934">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #3ee95a">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #7ef091">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #bef7c8">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #ffffff">&nbsp;</td>
 </tr>
 <tr>
  <td width="100"></td>
  <td width="80" style="border:1px solid grey; background: #16acc9">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #3ecde9">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #7eddf0">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #beeef7">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #ffffff">&nbsp;</td>
 </tr>
 <tr>
  <td width="100"></td>
  <td width="80" style="border:1px solid grey; background: #acc916">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #cde93e">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #ddf07e">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #eef7be">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #ffffff">&nbsp;</td>
 </tr>
</table>

<p>或者，我们也可以生成一个拆分的互补配色方案：</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i,t <span class="keyword">in</span> <span class="built_in">ipairs</span>(c1:tints()) <span class="keyword">do</span> <span class="built_in">print</span>(t) <span class="keyword">end</span></span><br><span class="line"><span class="comment">-- #8e16c9</span></span><br><span class="line"><span class="comment">-- #b03ee9</span></span><br><span class="line"><span class="comment">-- #ca7ef0</span></span><br><span class="line"><span class="comment">-- #e4bef7</span></span><br><span class="line"><span class="comment">-- #ffffff</span></span><br><span class="line"><span class="keyword">for</span> i,t <span class="keyword">in</span> <span class="built_in">ipairs</span>(c2:tints()) <span class="keyword">do</span> <span class="built_in">print</span>(t) <span class="keyword">end</span></span><br><span class="line"><span class="comment">-- #c91652</span></span><br><span class="line"><span class="comment">-- #e93e77</span></span><br><span class="line"><span class="comment">-- #f07ea4</span></span><br><span class="line"><span class="comment">-- #f7bed1</span></span><br><span class="line"><span class="comment">-- #ffffff</span></span><br></pre></td></tr></table></figure>

<table>
  <td width="100"></td>
  <td width="80" style="border:1px solid grey; background: #16c934">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #3ee95a">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #7ef091">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #bef7c8">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #ffffff">&nbsp;</td>
 </tr>
 <tr>
  <td width="100"></td>
  <td width="80" style="border:1px solid grey; background: #8e16c9">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #b03ee9">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #ca7ef0">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #e4bef7">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #ffffff">&nbsp;</td>
 </tr>
 <tr>
  <td width="100"></td>
  <td width="80" style="border:1px solid grey; background: #c91652">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #e93e77">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #f07ea4">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #f7bed1">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #ffffff">&nbsp;</td>
 </tr>
</table>


<p>或者三色混合：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">t1, t2 &#x3D; c:triadic()</span><br><span class="line">for i,t in ipairs(t1:tints()) do print(t) end</span><br><span class="line">-- #3416c9</span><br><span class="line">-- #5a3ee9</span><br><span class="line">-- #917ef0</span><br><span class="line">-- #c8bef7</span><br><span class="line">-- #ffffff</span><br><span class="line">for i,t in ipairs(t2:tints()) do print(t) end</span><br><span class="line">-- #c93416</span><br><span class="line">-- #e95a3e</span><br><span class="line">-- #f0917e</span><br><span class="line">-- #f7c8be</span><br><span class="line">-- #ffffff</span><br></pre></td></tr></table></figure>

<table>
  <td width="100"></td>
  <td width="80" style="border:1px solid grey; background: #16c934">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #3ee95a">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #7ef091">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #bef7c8">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #ffffff">&nbsp;</td>
 </tr>
 <tr>
  <td width="100"></td>
  <td width="80" style="border:1px solid grey; background: #3416c9">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #5a3ee9">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #917ef0">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #c8bef7">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #ffffff">&nbsp;</td>
 </tr>
 <tr>
  <td width="100"></td>
  <td width="80" style="border:1px solid grey; background: #c93416">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #e95a3e">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #f0917e">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #f7c8be">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #ffffff">&nbsp;</td>
 </tr>
</table>

]]></content>
      <categories>
        <category>技术</category>
        <category>Lua</category>
      </categories>
      <tags>
        <tag>颜色</tag>
      </tags>
  </entry>
  <entry>
    <title>改写print</title>
    <url>/2022/08/05/print-fixed/</url>
    <content><![CDATA[<div class="note success"><p><strong>print fixed</strong><br>简单实现改写print，将print内容写入文件生成日志。</p>
</div>

<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">-------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">-- Print 改写. @简律纯 @gexi</span></span><br><span class="line"><span class="comment">-------------------------------------------------------------------------------</span></span><br><span class="line">writeToFile = <span class="function"><span class="keyword">function</span> <span class="params">( str )</span></span></span><br><span class="line">    <span class="keyword">local</span> filename = <span class="string">&quot;print.log&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> fileLogOut <span class="keyword">then</span></span><br><span class="line">        fileLogOut = <span class="built_in">io</span>.<span class="built_in">open</span>(filename, <span class="string">&quot;w&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        fileLogOut = <span class="built_in">io</span>.<span class="built_in">open</span>(filename, <span class="string">&quot;a&quot;</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    fileLogOut:<span class="built_in">write</span>(<span class="built_in">os</span>.<span class="built_in">date</span>(<span class="string">&quot;%H:%M:%S&quot;</span>,<span class="built_in">os</span>.<span class="built_in">time</span>())..<span class="string">&quot; &quot;</span>..str..<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">    fileLogOut:<span class="built_in">close</span>()</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">babe_tostring</span><span class="params">(...)</span></span></span><br><span class="line">    <span class="keyword">local</span> num = <span class="built_in">select</span>(<span class="string">&quot;#&quot;</span>, ...);</span><br><span class="line">    <span class="keyword">local</span> args = &#123; ... &#125;;</span><br><span class="line">    <span class="keyword">local</span> outs = &#123;&#125;;</span><br><span class="line">    <span class="keyword">for</span> i = <span class="number">1</span>, num <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">if</span> i &gt; <span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">            outs[#outs + <span class="number">1</span>] = <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        outs[#outs + <span class="number">1</span>] = <span class="built_in">tostring</span>(args[i]);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">table</span>.<span class="built_in">concat</span>(outs);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> just_print = <span class="built_in">print</span>;</span><br><span class="line"><span class="keyword">local</span> babe_output = <span class="function"><span class="keyword">function</span><span class="params">(...)</span></span></span><br><span class="line">    just_print(...);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">local</span> str = babe_tostring(...);</span><br><span class="line">    <span class="keyword">if</span> writeToFile <span class="keyword">then</span> writeToFile(str) <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="built_in">print</span> = babe_output</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>技术</category>
        <category>Lua</category>
      </categories>
      <tags>
        <tag>FIXED</tag>
      </tags>
  </entry>
  <entry>
    <title>repeat-joker</title>
    <url>/2022/07/14/repeat-joker/</url>
    <content><![CDATA[<details class="note "><summary><p>secondary</p>
</summary>
<p><strong>目前正在努力ing…</strong></p>

</details>

<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote>
<p>使用《署名—非商业性使用—相同方式共享4.0 协议国际版》（CC BY-NC-SA 4.0）进行授权<span class="exturl" data-url="aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC9sZWdhbGNvZGUuemgtSGFucw==">https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode.zh-Hans<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<div class="note warning"><p><strong>WARNING ⚠️</strong><br>提供了dice解决复读问题的一种方法思路，但不免会有诸多不便。</p>
<blockquote>
<p>采用读写json方式。</p>
</blockquote>
</div>


<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">msg_order=&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">require</span>(<span class="string">&quot;basicFunction&quot;</span>)</span><br><span class="line">json = <span class="built_in">require</span>(<span class="string">&quot;json&quot;</span>)</span><br><span class="line"></span><br><span class="line">msg_order[<span class="string">&quot;.repjoker&quot;</span>]=<span class="string">&quot;repjoker&quot;</span></span><br><span class="line"></span><br><span class="line">default_uid_json = <span class="string">[[&#123;&quot;uid&quot;:2753364619,&quot;msg&quot;:&quot;好耶&quot;,&quot;time&quot;:1657773120&#125;]]</span></span><br><span class="line">default_gid_json = <span class="string">[[&#123;&quot;gid&quot;:971050440,&quot;msg&quot;:&quot;简律纯&quot;,&quot;time&quot;:1657773120&#125;]]</span></span><br><span class="line">uid_path = <span class="string">&quot;plugin//repeat-joker//uid.json&quot;</span></span><br><span class="line">gid_path = <span class="string">&quot;plugin//repeat-joker//gid.json&quot;</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span>(getUserConf(getDiceQQ(),<span class="string">&#x27;repjoker_&#x27;</span>) ~= <span class="literal">true</span>) <span class="keyword">then</span></span><br><span class="line">    mkDirs(getDiceDir()..<span class="string">&#x27;//plugin//repeat-joker&#x27;</span>)</span><br><span class="line">    write_file(uid_path,default_uid_json)</span><br><span class="line">    write_file(gid_path,default_gid_json)</span><br><span class="line">    setUserConf(getDiceQQ(),<span class="string">&#x27;repjoker_&#x27;</span>,<span class="literal">true</span>)</span><br><span class="line">    <span class="comment">--&gt; repeat-joker:初始化完成~</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">repjoker</span><span class="params">(msg)</span></span></span><br><span class="line">    <span class="keyword">local</span> default_data = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">local</span> data = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">local</span> son_orders = fitemSort(Match(msg.fromMsg,#<span class="string">&#x27;.repkiller&#x27;</span>+<span class="number">1</span>))</span><br><span class="line">    <span class="keyword">if</span>(fitems[<span class="number">1</span>] == <span class="string">&quot;list&quot;</span>) <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">if</span>(fitems[<span class="number">2</span>] == <span class="string">&quot;uid&quot;</span>) <span class="keyword">then</span></span><br><span class="line">            default_data = <span class="string">&quot;&#123;\&quot;uid_list\&quot;:[&quot;</span>..read_file(uid_path)..<span class="string">&quot;]&#125;&quot;</span></span><br><span class="line">            data = json.decode(default_data)</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&#123;self&#125;共【&quot;</span>..#data.uid_list..<span class="string">&quot;】条私聊记录:&quot;</span>..default_data</span><br><span class="line">        <span class="keyword">elseif</span>(fitems[<span class="number">2</span>] == <span class="string">&quot;gid&quot;</span>) <span class="keyword">then</span></span><br><span class="line">            default_data =  <span class="string">&quot;&#123;\&quot;gid_list\&quot;:[&quot;</span>..read_file(gid_path)..<span class="string">&quot;]&#125;&quot;</span></span><br><span class="line">            data =  json.decode(default_data)</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&#123;self&#125;共【&quot;</span>..#data.gid_list..<span class="string">&quot;】条群聊记录:\n&quot;</span>..default_data</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">elseif</span>(fitems[<span class="number">1</span>] == <span class="string">&quot;uid&quot;</span>) <span class="keyword">then</span></span><br><span class="line">        default_data = <span class="string">&quot;&#123;\&quot;uid_list\&quot;:[&quot;</span>..read_file(uid_path)..<span class="string">&quot;]&#125;&quot;</span></span><br><span class="line">        data = json.decode(default_data)</span><br><span class="line">        <span class="keyword">if</span>(fitems[<span class="number">2</span>] == <span class="literal">nil</span>) <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">if</span>(getUserConf(msg.uid,<span class="string">&#x27;uid-help&#x27;</span>) ~= <span class="literal">true</span>) <span class="keyword">then</span></span><br><span class="line">                setUserConf(msg.uid,<span class="string">&#x27;uid-help&#x27;</span>,<span class="literal">true</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;&#123;nick&#125;你的对象呢？\n是这样用哒:\n.repjoker uid &lt;QQ号&gt;\n记住了以后可不会再告诉你了&quot;</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;&#123;nick&#125;又没有对象了吗?&quot;</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">local</span> uid = getAtQQ(fitems[<span class="number">2</span>])</span><br><span class="line">            data = json.decode(<span class="built_in">string</span>.<span class="built_in">gsub</span>(default_data,<span class="string">&#x27;%s&#x27;</span>,<span class="string">&#x27;&#x27;</span>))</span><br><span class="line">            <span class="keyword">for</span> i=<span class="number">1</span>,#data.uid_list <span class="keyword">do</span></span><br><span class="line">                <span class="keyword">if</span>(data.uid_list[i].uid == <span class="built_in">tonumber</span>(uid)) <span class="keyword">then</span></span><br><span class="line">                    k = i</span><br><span class="line">                    out = <span class="string">&quot;已为&#123;nick&#125;找到&quot;</span>..getUserConf(<span class="built_in">tonumber</span>(data.uid_list[k].uid),<span class="string">&quot;nick#&quot;</span>)..<span class="string">&quot;最近的一条发言记录:\n&quot;</span>..stamp2Time(data.uid_list[k].<span class="built_in">time</span>)..<span class="string">&quot;:&quot;</span>..data.uid_list[k].msg</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    out = <span class="string">&quot;&#123;self&#125;处没有关于&quot;</span>.. getUserConf(<span class="built_in">tonumber</span>(uid),<span class="string">&quot;nick#&quot;</span>)..<span class="string">&quot;的发言记录哦~&quot;</span></span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">return</span> out</span><br><span class="line">    <span class="keyword">elseif</span>(fitems[<span class="number">1</span>] == <span class="string">&quot;gid&quot;</span>) <span class="keyword">then</span></span><br><span class="line">        default_data = <span class="string">&quot;&#123;\&quot;gid_list\&quot;:[&quot;</span>..read_file(gid_path)..<span class="string">&quot;]&#125;&quot;</span></span><br><span class="line">        data = json.decode(default_data)</span><br><span class="line">        <span class="keyword">if</span>(fitems[<span class="number">2</span>] == <span class="literal">nil</span>) <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">return</span> getGroupConf(<span class="built_in">tonumber</span>(msg.gid),<span class="string">&quot;name&quot;</span>)..<span class="string">&quot;(&quot;</span>..msg.gid..<span class="string">&quot;)还没有人复读过哦~#期待&quot;</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">local</span> gid = getAtQQ(fitems[<span class="number">2</span>])</span><br><span class="line">            data = json.decode(<span class="built_in">string</span>.<span class="built_in">gsub</span>(default_data,<span class="string">&#x27;%s&#x27;</span>,<span class="string">&#x27;&#x27;</span>))</span><br><span class="line">            <span class="keyword">for</span> i=<span class="number">1</span>,#data.msg <span class="keyword">do</span></span><br><span class="line">                <span class="keyword">if</span>(data.gid[i] == <span class="built_in">tonumber</span>(gid)) <span class="keyword">then</span></span><br><span class="line">                    k = i</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    out = <span class="string">&quot;&#123;self&#125;处没有关于群&quot;</span>.. getGroupConf(<span class="built_in">tonumber</span>(gid),<span class="string">&quot;name&quot;</span>)..<span class="string">&quot;(&quot;</span>..gid..<span class="string">&quot;)的用户发言记录哦~&quot;</span></span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">return</span> out</span><br><span class="line">    <span class="keyword">elseif</span>(fitems[<span class="number">1</span>] == <span class="string">&quot;test&quot;</span>) <span class="keyword">then</span></span><br><span class="line">        write_(msg.fromMsg,msg.uid,msg.fromGroup)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">write_</span><span class="params">(str,uid,gid)</span></span></span><br><span class="line">    <span class="keyword">if</span>(gid == <span class="string">&quot;0&quot;</span>) <span class="keyword">then</span></span><br><span class="line">        write_file(uid_path,<span class="string">&quot;,&#123;\&quot;uid\&quot;:&quot;</span>..uid..<span class="string">&quot;,\&quot;msg\&quot;:\&quot;&quot;</span>..str..<span class="string">&quot;\&quot;,\&quot;time\&quot;:&quot;</span>..<span class="built_in">os</span>.<span class="built_in">time</span>()..<span class="string">&quot;&#125;&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        write_file(gid_path,<span class="string">&quot;,&#123;\&quot;gid\&quot;:&quot;</span>..gid..<span class="string">&quot;,\&quot;msg\&quot;:\&quot;&quot;</span>..str..<span class="string">&quot;\&quot;,\&quot;time\&quot;:&quot;</span>..<span class="built_in">os</span>.<span class="built_in">time</span>()..<span class="string">&quot;&#125;&quot;</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
        <category>Lua</category>
      </categories>
      <tags>
        <tag>Dice</tag>
      </tags>
  </entry>
  <entry>
    <title>reborn 重开模拟器</title>
    <url>/2022/06/24/reborn/</url>
    <content><![CDATA[<div class="note success"><p><strong>reborn</strong><br>高考成绩出来了，重开吧，摆烂！</p>
</div>

<blockquote>
<p>使用《署名—非商业性使用—相同方式共享 4.0 协议国际版》（CC BY-NC-SA 4.0）进行授权。<br><span class="exturl" data-url="aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC9sZWdhbGNvZGUuemgtSGFucw==">https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode.zh-Hans<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h2 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h2><ul>
<li>作者： 简律纯</li>
<li>联系方式：qq:a2c29k9</li>
<li>版本：v1.2 fix</li>
<li>更新日期：2022/06/24</li>
<li>简介：投胎</li>
<li>关键词：<code>reborn</code></li>
<li>许可协议：CC BY-NC-SA 4.0</li>
</ul>
<h2 id="详细介绍"><a href="#详细介绍" class="headerlink" title="详细介绍"></a>详细介绍</h2><p>首先感谢 @Natsume <span class="exturl" data-url="aHR0cHM6Ly9mb3J1bS5rb2tvbmEudGVjaC9kLzExOA==">随机国家<i class="fa fa-external-link-alt"></i></span><br>算起来Natsume的这个帖子已经两年整了。<br>ta说这似乎没什么用，于是我便突发奇想昨天晚上熬夜整了个重开模拟器。</p>
<h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img src="https://cdn.jsdelivr.net/gh/cypress0522/img@main/2022/06/24/49e9f345b9e057b6.png"></p>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2N5cHJlc3MwNTIyL2N5cHJlc3MwNTIyLmdpdGh1Yi5pby9yZWxlYXNlcy90YWcvcmVib3Ju">reborn v1.2 fix.zip<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">---------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">--reborn.重生|投胎 脚本</span></span><br><span class="line"><span class="comment">--countryu取自Natsume(https://forum.kokona.tech/d/118)</span></span><br><span class="line"><span class="comment">--作者:简律纯(qq:A2C29K9)</span></span><br><span class="line"><span class="comment">--2022.06.24 Fixed</span></span><br><span class="line"><span class="comment">---------------------------------------------------------------------</span></span><br><span class="line">msg_order=&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">born</span><span class="params">(msg)</span></span></span><br><span class="line">    <span class="keyword">local</span> countryu = &#123; <span class="string">&quot;芬兰&quot;</span>,<span class="string">&quot;瑞典&quot;</span>,<span class="string">&quot;挪威&quot;</span>,<span class="string">&quot;冰岛&quot;</span>,<span class="string">&quot;丹麦&quot;</span>,<span class="string">&quot;法罗群岛（丹）&quot;</span> ,<span class="string">&quot;爱沙尼亚&quot;</span>,<span class="string">&quot;拉脱维亚&quot;</span>,<span class="string">&quot;立陶宛&quot;</span>,<span class="string">&quot;俄罗斯&quot;</span>,<span class="string">&quot;白俄罗斯&quot;</span>,<span class="string">&quot;乌克兰&quot;</span>,<span class="string">&quot;摩尔多瓦&quot;</span>,<span class="string">&quot;波兰&quot;</span>,<span class="string">&quot;捷克&quot;</span>,<span class="string">&quot;斯洛伐克&quot;</span>,<span class="string">&quot;匈牙利&quot;</span>,<span class="string">&quot;德国&quot;</span>,<span class="string">&quot;奥地利&quot;</span>,<span class="string">&quot;瑞士&quot;</span>,<span class="string">&quot;列支敦士登&quot;</span>,<span class="string">&quot;英国&quot;</span>,<span class="string">&quot;爱尔兰&quot;</span>,<span class="string">&quot;荷兰&quot;</span>,<span class="string">&quot;比利时&quot;</span>,<span class="string">&quot;卢森堡&quot;</span>,<span class="string">&quot;法国&quot;</span>,<span class="string">&quot;摩纳哥&quot;</span>,<span class="string">&quot;罗马尼亚&quot;</span>,<span class="string">&quot;保加利亚&quot;</span>,<span class="string">&quot;塞尔维亚&quot;</span>,<span class="string">&quot;黑山&quot;</span>,<span class="string">&quot;马其顿&quot;</span>,<span class="string">&quot;阿尔巴尼亚&quot;</span>,<span class="string">&quot;希腊&quot;</span>,<span class="string">&quot;斯洛文尼亚&quot;</span>,<span class="string">&quot;克罗地亚&quot;</span>,<span class="string">&quot;波斯尼亚和墨塞哥维那&quot;</span>,<span class="string">&quot;意大利&quot;</span>,<span class="string">&quot;梵蒂冈&quot;</span>,<span class="string">&quot;圣马力诺&quot;</span>,<span class="string">&quot;马耳他&quot;</span>,<span class="string">&quot;西班牙&quot;</span>,<span class="string">&quot;葡萄牙&quot;</span>,<span class="string">&quot;安道尔&quot;</span>,<span class="string">&quot;中国&quot;</span>,<span class="string">&quot;蒙古&quot;</span>,<span class="string">&quot;朝鲜&quot;</span>,<span class="string">&quot;韩国&quot;</span>,<span class="string">&quot;日本&quot;</span>,<span class="string">&quot;菲律宾&quot;</span>,<span class="string">&quot;越南&quot;</span>,<span class="string">&quot;老挝&quot;</span>,<span class="string">&quot;柬埔寨&quot;</span>,<span class="string">&quot;缅甸&quot;</span>,<span class="string">&quot;泰国&quot;</span>,<span class="string">&quot;马来西亚&quot;</span>,<span class="string">&quot;文莱&quot;</span>,<span class="string">&quot;新加坡&quot;</span>,<span class="string">&quot;印度尼西亚&quot;</span>,<span class="string">&quot;东帝汶&quot;</span>,<span class="string">&quot;尼泊尔&quot;</span>,<span class="string">&quot;不丹&quot;</span>,<span class="string">&quot;孟加拉国&quot;</span>,<span class="string">&quot;印度&quot;</span>,<span class="string">&quot;巴基斯坦&quot;</span>,<span class="string">&quot;斯里兰卡&quot;</span>,<span class="string">&quot;马尔代夫&quot;</span>,<span class="string">&quot;哈萨克斯坦&quot;</span>,<span class="string">&quot;土库曼斯坦&quot;</span>,<span class="string">&quot;塔吉克斯坦&quot;</span>,<span class="string">&quot;乌兹别克斯坦&quot;</span>,<span class="string">&quot;吉尔吉斯斯坦&quot;</span>,<span class="string">&quot;阿富汗&quot;</span>,<span class="string">&quot;伊拉克&quot;</span>,<span class="string">&quot;伊朗&quot;</span>,<span class="string">&quot;叙利亚&quot;</span>,<span class="string">&quot;约旦&quot;</span>,<span class="string">&quot;黎巴嫩&quot;</span>,<span class="string">&quot;以色列&quot;</span>,<span class="string">&quot;巴勒斯坦&quot;</span>,<span class="string">&quot;巴林&quot;</span>,<span class="string">&quot;卡塔尔&quot;</span>,<span class="string">&quot;科威特&quot;</span>,<span class="string">&quot;沙特阿拉伯&quot;</span>,<span class="string">&quot;阿拉伯联合酋长国&quot;</span>,<span class="string">&quot;阿曼&quot;</span>,<span class="string">&quot;也门&quot;</span>,<span class="string">&quot;格鲁吉亚&quot;</span>,<span class="string">&quot;亚美尼亚&quot;</span>,<span class="string">&quot;阿塞拜疆&quot;</span>,<span class="string">&quot;塞浦路斯&quot;</span>,<span class="string">&quot;土耳其&quot;</span>,<span class="string">&quot;埃及&quot;</span>,<span class="string">&quot;利比亚&quot;</span>,<span class="string">&quot;苏丹&quot;</span>,<span class="string">&quot;突尼斯&quot;</span>,<span class="string">&quot;阿尔及利亚&quot;</span>,<span class="string">&quot;摩洛哥&quot;</span>,<span class="string">&quot;亚速尔群岛（葡）&quot;</span>,<span class="string">&quot;马德拉群岛（葡）&quot;</span>,<span class="string">&quot;埃塞俄比亚&quot;</span>,<span class="string">&quot;厄立特里亚&quot;</span>,<span class="string">&quot;索马里&quot;</span>,<span class="string">&quot;吉布提&quot;</span>,<span class="string">&quot;肯尼亚&quot;</span>,<span class="string">&quot;坦桑尼亚&quot;</span>,<span class="string">&quot;乌干达&quot;</span>,<span class="string">&quot;卢旺达&quot;</span>,<span class="string">&quot;布隆迪&quot;</span>,<span class="string">&quot;塞舌尔&quot;</span>,<span class="string">&quot;赞比亚&quot;</span>,<span class="string">&quot;安哥拉&quot;</span>,<span class="string">&quot;津巴布韦&quot;</span>,<span class="string">&quot;马拉维&quot;</span>,<span class="string">&quot;莫桑比克&quot;</span>,<span class="string">&quot;博茨瓦纳&quot;</span>,<span class="string">&quot;纳米比亚&quot;</span>,<span class="string">&quot;斯威士兰&quot;</span>,<span class="string">&quot;莱索托&quot;</span>,<span class="string">&quot;马达加斯加&quot;</span>,<span class="string">&quot;科摩罗&quot;</span>,<span class="string">&quot;毛里求斯&quot;</span>,<span class="string">&quot;留尼旺（法）&quot;</span>,<span class="string">&quot;圣赫勒拿&quot;</span>,<span class="string">&quot;（英）南非&quot;</span>,<span class="string">&quot;乍得&quot;</span>,<span class="string">&quot;中非&quot;</span>,<span class="string">&quot;喀麦隆&quot;</span>,<span class="string">&quot;加蓬&quot;</span>,<span class="string">&quot;圣多美&quot;</span>,<span class="string">&quot;赤道几内亚&quot;</span>,<span class="string">&quot;刚果民主共和国（刚果)&quot;</span>,<span class="string">&quot;普林西比&quot;</span>,<span class="string">&quot;毛里塔尼亚&quot;</span>,<span class="string">&quot;塞内加尔&quot;</span>,<span class="string">&quot;冈比亚&quot;</span>,<span class="string">&quot;马里&quot;</span>,<span class="string">&quot;布基纳法索&quot;</span>,<span class="string">&quot;几内亚&quot;</span>,<span class="string">&quot;几内亚比绍&quot;</span>,<span class="string">&quot;塞拉利昂&quot;</span>,<span class="string">&quot;利比里亚&quot;</span>,<span class="string">&quot;科特迪瓦&quot;</span>,<span class="string">&quot;佛得角&quot;</span>,<span class="string">&quot;加纳&quot;</span>,<span class="string">&quot;多哥&quot;</span>,<span class="string">&quot;贝宁&quot;</span>,<span class="string">&quot;尼日尔&quot;</span>,<span class="string">&quot;加那利群岛（西）&quot;</span>,<span class="string">&quot;澳大利亚&quot;</span>,<span class="string">&quot;新西兰&quot;</span>,<span class="string">&quot;巴布亚新几内亚&quot;</span>,<span class="string">&quot;所罗门群岛&quot;</span>,<span class="string">&quot;瓦努阿图&quot;</span>,<span class="string">&quot;密克罗尼西亚&quot;</span>,<span class="string">&quot;马绍尔群岛&quot;</span>,<span class="string">&quot;帕劳&quot;</span>,<span class="string">&quot;瑙鲁&quot;</span>,<span class="string">&quot;基里巴斯&quot;</span>,<span class="string">&quot;图瓦卢&quot;</span>,<span class="string">&quot;萨摩亚&quot;</span>,<span class="string">&quot;斐济群岛&quot;</span>,<span class="string">&quot;汤加&quot;</span>,<span class="string">&quot;库克群岛（新）&quot;</span>,<span class="string">&quot;关岛（美）&quot;</span>,<span class="string">&quot;新喀里多尼亚（法）&quot;</span>,<span class="string">&quot;法属波利尼西亚&quot;</span>,<span class="string">&quot;皮特凯恩岛（英）&quot;</span>,<span class="string">&quot;瓦利斯与富图纳（法）&quot;</span>,<span class="string">&quot;纽埃（新）&quot;</span>,<span class="string">&quot;托克劳（新）&quot;</span>,<span class="string">&quot;美属萨摩亚&quot;</span>,<span class="string">&quot;北马里亚纳（美）&quot;</span>,<span class="string">&quot;加拿大&quot;</span>,<span class="string">&quot;美国&quot;</span>,<span class="string">&quot;墨西哥&quot;</span>,<span class="string">&quot;格陵兰（丹）&quot;</span>,<span class="string">&quot;危地马拉&quot;</span>,<span class="string">&quot;伯利兹&quot;</span>,<span class="string">&quot;萨尔瓦多&quot;</span>,<span class="string">&quot;洪都拉斯&quot;</span>,<span class="string">&quot;尼加拉瓜&quot;</span>,<span class="string">&quot;哥斯达黎加&quot;</span>,<span class="string">&quot;巴拿马&quot;</span>,<span class="string">&quot;巴哈马&quot;</span>,<span class="string">&quot;古巴&quot;</span>,<span class="string">&quot;牙买加&quot;</span>,<span class="string">&quot;海地&quot;</span>,<span class="string">&quot;多米尼加共和国&quot;</span>,<span class="string">&quot;安提瓜和巴布达&quot;</span>,<span class="string">&quot;圣基茨和尼维斯&quot;</span>,<span class="string">&quot;多米尼克&quot;</span>,<span class="string">&quot;圣卢西亚&quot;</span>,<span class="string">&quot;圣文森特和格林纳丁斯&quot;</span>,<span class="string">&quot;格林纳达&quot;</span>,<span class="string">&quot;特立尼达和多巴哥&quot;</span>,<span class="string">&quot;波多黎各（美）&quot;</span>,<span class="string">&quot;英属维尔京群岛&quot;</span>,<span class="string">&quot;巴巴多斯&quot;</span>,<span class="string">&quot;美属维尔京群岛&quot;</span>,<span class="string">&quot;蒙特塞拉特（英）&quot;</span>,<span class="string">&quot;瓜德罗普（法）&quot;</span>,<span class="string">&quot;马提尼克（法）&quot;</span>,<span class="string">&quot;荷属安的列斯&quot;</span>,<span class="string">&quot;安圭拉&quot;</span>,<span class="string">&quot;阿鲁巴（荷）&quot;</span>,<span class="string">&quot;特克斯和凯科斯群岛（英）&quot;</span>,<span class="string">&quot;开曼群岛（英）&quot;</span>,<span class="string">&quot;百慕大（英）&quot;</span>,<span class="string">&quot;哥伦比亚&quot;</span>,<span class="string">&quot;委内瑞拉&quot;</span>,<span class="string">&quot;圭亚那&quot;</span>,<span class="string">&quot;法属圭亚那&quot;</span>,<span class="string">&quot;苏里南&quot;</span>,<span class="string">&quot;厄瓜多尔&quot;</span>,<span class="string">&quot;秘鲁&quot;</span>,<span class="string">&quot;玻利维亚&quot;</span>,<span class="string">&quot;巴西&quot;</span>,<span class="string">&quot;智利&quot;</span>,<span class="string">&quot;阿根廷&quot;</span>,<span class="string">&quot;乌拉圭&quot;</span>,<span class="string">&quot;巴拉圭&quot;</span>&#125;</span><br><span class="line">    <span class="comment">-- 国家</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">local</span> cardu = &#123;<span class="string">&quot;你患有败血症\n&quot;</span>,<span class="string">&quot;你发育不良\n&quot;</span>,<span class="string">&quot;你得了新冠病毒\n&quot;</span>,<span class="string">&quot;你居然没有屁眼\n&quot;</span>,<span class="string">&quot;你喜欢和小狗抢食物\n&quot;</span>,<span class="string">&quot;你看得见空气中浮动的黑色粒子\n&quot;</span>..<span class="string">&quot;你有两个脑袋\n&quot;</span>,<span class="string">&quot;你喜欢咬脚趾甲\n&quot;</span>,<span class="string">&quot;你喜欢吃墙灰\n&quot;</span>,<span class="string">&quot;你患有糖尿病\n&quot;</span>,<span class="string">&quot;你的小心脏是露出来的\n&quot;</span>,<span class="string">&quot;你是畸形儿\n&quot;</span>,<span class="string">&quot;你看上去像个傻子\n&quot;</span>,<span class="string">&quot;你长得很丑\n&quot;</span>&#125;</span><br><span class="line">    <span class="comment">-- 病情描述，可增加</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">local</span> apper = &#123;<span class="string">&quot;你有着大大的眼睛\n&quot;</span>,<span class="string">&quot;你的睫毛很长很好看\n&quot;</span>,<span class="string">&quot;你总是很好奇的看着世界\n&quot;</span>,<span class="string">&quot;你五官端正\n&quot;</span>,<span class="string">&quot;你出生时没有大哭大闹\n&quot;</span>,<span class="string">&quot;你长得很可爱\n&quot;</span>,<span class="string">&quot;你看上去很乖巧\n&quot;</span>&#125;</span><br><span class="line">    <span class="comment">-- 健康描述，可增加</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">local</span> parent_good_tab = &#123;<span class="string">&quot;很穷，因此&quot;</span>,<span class="string">&quot;看你很可爱于是&quot;</span>&#125;</span><br><span class="line">    <span class="keyword">local</span> parent_bad_tab = &#123;<span class="string">&quot;认为你长得太丑于是&quot;</span>,<span class="string">&quot;对你议论纷纷，不过他们&quot;</span>,<span class="string">&quot;发现你大有问题便把你扔了，但还是&quot;</span>&#125;</span><br><span class="line">    <span class="comment">-- 父母行为</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">local</span> sexu = ranint(<span class="number">1</span>,<span class="number">100</span>)</span><br><span class="line">    <span class="comment">--男女比例与下文53对应</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">local</span> health = ranint(<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line">    <span class="comment">--健康与否</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(sexu&lt;=<span class="number">53</span>) <span class="keyword">then</span> sex = <span class="string">&quot;男孩子&quot;</span> <span class="keyword">elseif</span>(sexu==<span class="number">1</span>) <span class="keyword">then</span> sex = <span class="string">&quot;雌雄同体&quot;</span> <span class="keyword">else</span> sex = <span class="string">&quot;女孩子&quot;</span> <span class="keyword">end</span></span><br><span class="line">    <span class="comment">-- 没有采用drawDeck(0,msg.fromQQ,&quot;性别&quot;)的原因是这样可以自定义男女比例</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">local</span> country = countryu[ranint(<span class="number">1</span>,#countryu)] <span class="comment">-- 抽取国家</span></span><br><span class="line">    <span class="keyword">local</span> card = <span class="string">&quot;&quot;</span> <span class="comment">-- 抽选病情</span></span><br><span class="line">    <span class="keyword">local</span> state = ranint(<span class="number">1</span>,<span class="number">20</span>) <span class="comment">-- 投胎成功概率</span></span><br><span class="line">    <span class="keyword">local</span> weight = ranint(<span class="number">20</span>,<span class="number">35</span>)/<span class="number">10</span> <span class="comment">-- 新生儿体重，折合公斤</span></span><br><span class="line">    <span class="keyword">local</span> weightu = <span class="string">&quot;&quot;</span> <span class="comment">-- 初始化关于体重的评价</span></span><br><span class="line">    <span class="keyword">local</span> healthu = <span class="string">&quot;&quot;</span> <span class="comment">-- 初始化健康与否</span></span><br><span class="line">    <span class="keyword">local</span> apperu = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">local</span> parent_good = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">local</span> parent_bad = <span class="string">&quot;&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(state==<span class="number">5</span>) <span class="keyword">then</span> <span class="comment">-- 失败概率为1/20</span></span><br><span class="line">        dead_weight = ranint(<span class="number">9</span>,<span class="number">18</span>)/<span class="number">10</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&#123;nick&#125;投胎失败！\n你没能活到出生，祝你下次好运！\n你的父母收到了一具&quot;</span>..dead_weight..<span class="string">&quot;公斤的死尸x(没错就是你)&quot;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    <span class="comment">-- 投胎失败</span></span><br><span class="line">    </span><br><span class="line">        <span class="keyword">if</span>(weight==<span class="number">3.2</span>) <span class="keyword">then</span></span><br><span class="line">            weightu = <span class="string">&quot;是标准体重哦~&quot;</span> </span><br><span class="line">            <span class="comment">-- 对体重等于3.2kg的评价</span></span><br><span class="line">        <span class="keyword">elseif</span>(weight&lt;=<span class="number">2.4</span>) <span class="keyword">then</span></span><br><span class="line">            weightu = <span class="string">&quot;有一点点轻呢。&quot;</span></span><br><span class="line">            <span class="comment">-- 对体重小于2.4kg的评价</span></span><br><span class="line">        <span class="keyword">elseif</span>(weight&gt;<span class="number">3.2</span>) <span class="keyword">then</span></span><br><span class="line">            weightu = <span class="string">&quot;可能是父母的原因让你有点点小胖吧~&quot;</span></span><br><span class="line">            <span class="comment">-- 对体重大于3.2kg的评价</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(country==<span class="string">&quot;中国&quot;</span>) <span class="keyword">then</span> name = drawDeck(<span class="number">0</span>,msg.fromQQ,<span class="string">&quot;随机姓名_zh&quot;</span>) <span class="keyword">or</span> drawDeck(<span class="number">0</span>,msg.fromQQ,<span class="string">&quot;随机姓名_enzh&quot;</span>)</span><br><span class="line">        <span class="comment">-- 中国人当然要有中文名</span></span><br><span class="line">        <span class="keyword">elseif</span>(country==<span class="string">&quot;日本&quot;</span>) <span class="keyword">then</span> name = drawDeck(<span class="number">0</span>,msg.fromQQ,<span class="string">&quot;随机姓名_jp&quot;</span>)</span><br><span class="line">        <span class="comment">-- 霓虹進的名字</span></span><br><span class="line">        <span class="keyword">else</span> name = drawDeck(<span class="number">0</span>,msg.fromQQ,<span class="string">&quot;随机姓名_en&quot;</span>) <span class="keyword">or</span> drawDeck(<span class="number">0</span>,msg.fromQQ,<span class="string">&quot;随机姓名_enzh&quot;</span>)</span><br><span class="line">        <span class="comment">-- 剩下一律包含en</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(health==<span class="number">1</span>) <span class="keyword">then</span> </span><br><span class="line">            healthu,apperu = <span class="string">&quot;你很健康呢！\n&quot;</span>,<span class="string">&quot;&quot;</span></span><br><span class="line">            <span class="keyword">local</span> start = ranint(<span class="number">1</span>,#apper//<span class="number">2</span>)</span><br><span class="line">                <span class="keyword">for</span> i=start,ranint(start+<span class="number">1</span>,#apper) <span class="keyword">do</span></span><br><span class="line">                    apperu = apperu..apper[i]</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">        <span class="comment">-- 健康描述</span></span><br><span class="line">            parent_good = parent_good_tab[ranint(<span class="number">1</span>,#parent_good_tab)]</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        </span><br><span class="line">            healthu = <span class="string">&quot;你并不是一个健康的孩子:\n&quot;</span></span><br><span class="line">            </span><br><span class="line">                <span class="keyword">local</span> start = ranint(<span class="number">1</span>,#cardu//<span class="number">2</span>)</span><br><span class="line">                <span class="keyword">for</span> i=start,ranint(start+<span class="number">1</span>,#cardu) <span class="keyword">do</span></span><br><span class="line">                    card = card..cardu[i]</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">        <span class="comment">-- 病情描述</span></span><br><span class="line">                parent_bad = parent_bad_tab[ranint(<span class="number">1</span>,#parent_bad_tab)]</span><br><span class="line">                </span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&#123;nick&#125;投胎成功！\n你出生在&quot;</span>..country..<span class="string">&quot;，是&quot;</span>..sex..<span class="string">&quot;\n体重:&quot;</span>..weight..<span class="string">&quot;公斤 &quot;</span>..weightu..<span class="string">&quot;\n&quot;</span>..healthu..apperu..card..<span class="string">&quot;你的父母&quot;</span>.. parent_good..parent_bad..<span class="string">&quot;给你起名&quot;</span>..name</span><br><span class="line">        <span class="comment">-- 推起来输出</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">msg_order[<span class="string">&quot;reborn&quot;</span>]=<span class="string">&quot;born&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>技术</category>
        <category>Lua</category>
      </categories>
      <tags>
        <tag>Dice</tag>
      </tags>
  </entry>
  <entry>
    <title>unlimited-errors</title>
    <url>/2022/06/23/unlimited-errors/</url>
    <content><![CDATA[<details class="note "><summary><p>secondary</p>
</summary>
<p><strong>目前正在努力ing…</strong><br>利用 <code>error()</code>与 <code>pcall()</code>进行lua自定义报错</p>

</details>

<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote>
<p>使用《署名—非商业性使用—相同方式共享4.0 协议国际版》（CC BY-NC-SA 4.0）进行授权<span class="exturl" data-url="aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC9sZWdhbGNvZGUuemgtSGFucw==">https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode.zh-Hans<i class="fa fa-external-link-alt"></i></span><br>作者：简律纯<br>联系方式：qq:A2C29K9<br>更新日期：2022/5/28</p>
</blockquote>
<div class="note warning"><p><strong>WARNING ⚠️</strong><br>本帖是作为利用basicFunction自带的chat指令并结合修改chat指令内tryCatch部分的函数名来进行报错排查的示例帖。</p>
<blockquote>
<p>简言之让报错更好看一点，更容易理解一点。</p>
</blockquote>
</div>

<p>taboo前些日子（好久了）评论了<span class="exturl" data-url="aHR0cHM6Ly9mb3J1bS5rb2tvbmEudGVjaC9kLzExNDctemhpLWxpbmctamlhby1iZW4ta3VvLXpoYW4taGFuLXNodS1rdS1jaGkteHUtemhvdS1nZW5n">basicFunction<i class="fa fa-external-link-alt"></i></span> 的tryCatch函数，他说，</p>
<blockquote>
<p>骰娘自检可以安排到行程上了</p>
</blockquote>
<p>虽然和写tryCatch的初衷完全不一样，但是返校后在考试过程中突然发现这会是一个很不错的想法，于是单独写一篇帖子介绍它。</p>
<h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><h3 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1. 准备工作"></a>1. 准备工作</h3><p>首先我们在basicFunction的chat指令函数里的tryCatch部分写上这些代码，图片中的抓取报错函数示例是 <code>read_file()</code>函数，输入的参数是path，文件路径；返回值为文件内容。<br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-28/1653713607-498189-screenshot-2022-05-28-12-41-00-92.jpg"><br>这段代码的意思是如果报错信息里有nil这个字符串那返回自定义报错回复内容，否则返回read_file函数的返回内容。</p>
<h3 id="2-第一次测试"><a href="#2-第一次测试" class="headerlink" title="2.第一次测试"></a>2.第一次测试</h3><p>接着输入 <code>#basicFunction:tryCatch</code>，不带任何参数，它等效于 <code>#basicFunction:read_file</code>接着的确报错了，但是因为 <code>read_file()</code>函数的path参数为空，报错信息中有nil字符串，于是被替换成了预先写好的自定义报错回复内容。<br>接着我使用 <code>#basicFunction:read_file myDiary.txt</code> 查看了此文件，由于这个文件并不存在，于是krypton返回了read_file里写好的自定义回复。<br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-28/1653713518-807281-74092e56946e00a4.png"></p>
<h3 id="3-修改"><a href="#3-修改" class="headerlink" title="3.修改"></a>3.修改</h3><p>那么我们使用 <code>#basicFunction:write_file myDiary.txt [内容]</code>来创建这个文件并且写下点什么<del>烂人诅咒</del><br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-28/1653713557-476439-432aa460c37a0fe9.png"></p>
<h3 id="4-第二次测试"><a href="#4-第二次测试" class="headerlink" title="4.第二次测试"></a>4.第二次测试</h3><p>已经写好了此文件，我们再用 <code>#basicFunction:read_file myDiary.txt</code>查看一下，来确保有此文件并且写入了内容。<br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-28/1653713564-665112-3aa06a678e8679f3.png"></p>
<h3 id="5-第三次测试"><a href="#5-第三次测试" class="headerlink" title="5.第三次测试"></a>5.第三次测试</h3><p>一切顺利，这时候我们再输入正确的指令来试试抓取报错<br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-28/1653713588-190887-7b41211a21a97483.png"><br>因为这次输入了参数，即 <code>#basicFunction:tryCatch myDiary.txt</code>等效于 <code>#basicFunction:read_file myDiary.txt</code>，所以顺理成章的返回了里面的文本内容。</p>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>附上tryCatch函数的内容，如下:</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">-----------------------------------------------------[15]:</span></span><br><span class="line"><span class="comment">-- 功能：监听错误报告如有则反馈</span></span><br><span class="line"><span class="comment">-- 参数：函数名</span></span><br><span class="line"><span class="comment">-- 返回：错误信息</span></span><br><span class="line"><span class="comment">-- 说明：lua有两个函数可以捕获异常，分别是pcall(fun[,arg1,...])和xpcall(fun,errfun,[,arg1,...])，对比这两个函数,xpcall多了异常处理，这里仅采用pcall()做示例</span></span><br><span class="line">tryCatch = <span class="function"><span class="keyword">function</span><span class="params">(fun,arg1,arg2,arg3,arg4,arg5)</span></span></span><br><span class="line">  <span class="keyword">local</span> ret,errMessage=<span class="built_in">pcall</span>(fun,arg1,arg2,arg3,arg4,arg5);</span><br><span class="line">  wrong=ret <span class="keyword">and</span> <span class="string">&quot;false&quot;</span> <span class="keyword">or</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">  <span class="comment">--print(&quot;是否错误:\n&quot;..错误..&quot; \n\n出错信息:\n&quot; .. (errMessage or &quot;无&quot;));</span></span><br><span class="line">  <span class="keyword">if</span> wrong==<span class="string">&quot;true&quot;</span> <span class="keyword">then</span><span class="comment">--错误提示</span></span><br><span class="line">    <span class="keyword">local</span> ret,errMessage=<span class="built_in">pcall</span>(fun,arg1,arg2,arg3,arg4,arg5)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;\n错误详情：\n&quot;</span>..errMessage</span><br><span class="line">  <span class="keyword">else</span><span class="comment">--无错误正常执行</span></span><br><span class="line">    ret,back=<span class="built_in">pcall</span>(fun,arg1,arg2,arg3,arg4,arg5);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;没有错误发生，返回值如下:\n&quot;</span>..back</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>技术</category>
        <category>Lua</category>
      </categories>
      <tags>
        <tag>Dice</tag>
      </tags>
  </entry>
  <entry>
    <title>table-module</title>
    <url>/2022/08/15/table-module/</url>
    <content><![CDATA[<div class="note success"><p><strong>table module</strong></p>
<blockquote>
<p>对数组操作函数的拓展，利用这些函数可以更好的进行数据操作。</p>
</blockquote>
</div>

<h1 id="table-module-更多的数组操作"><a href="#table-module-更多的数组操作" class="headerlink" title="table-module:更多的数组操作"></a>table-module:更多的数组操作</h1><blockquote>
<p>使用《署名—禁止演绎 4.0 协议国际版》（CC BY-ND 4.0）进行授权。<br><span class="exturl" data-url="aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5kLzQuMC8=">https://creativecommons.org/licenses/by-nd/4.0/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<hr>
<blockquote>
<p>[ toc ] 更多操作，更多的可能<del>猝死</del>。</p>
</blockquote>
<hr>
<h2 id="一、基本信息"><a href="#一、基本信息" class="headerlink" title="一、基本信息"></a>一、基本信息</h2><ul>
<li><a href="">二次修改</a>作者： 简律纯</li>
<li>联系方式：qq:a2c29k9</li>
<li>版本：v1.0</li>
<li>更新日期：暂无</li>
<li>关键词：暂无</li>
<li>许可协议：CC BY-ND 4.0</li>
</ul>
<hr>
<table>
<thead>
<tr>
<th align="left">#</th>
<th align="center">函数名</th>
<th align="center">简单介绍</th>
</tr>
</thead>
<tbody><tr>
<td align="left">1</td>
<td align="center">table.nums</td>
<td align="center">计算表格包含的字段数量</td>
</tr>
<tr>
<td align="left">2</td>
<td align="center">table.keys</td>
<td align="center">返回指定表格中的所有键</td>
</tr>
<tr>
<td align="left">3</td>
<td align="center">table.values</td>
<td align="center">返回指定表格中的所有值</td>
</tr>
<tr>
<td align="left">4</td>
<td align="center">table.merge</td>
<td align="center">将来源表格中所有键及其值复制到目标表格对象中</td>
</tr>
<tr>
<td align="left">5</td>
<td align="center">table.indexof</td>
<td align="center">从表格中查找指定值，返回其索引</td>
</tr>
<tr>
<td align="left">6</td>
<td align="center">table.keyof</td>
<td align="center">从表格中查找指定值，返回其 key</td>
</tr>
<tr>
<td align="left">7</td>
<td align="center">table.removebyvalue</td>
<td align="center">从表格中删除指定值，返回删除的值的个数</td>
</tr>
<tr>
<td align="left">8</td>
<td align="center">table.map</td>
<td align="center">对表格中每一个值执行一次指定的函数，并用函数返回值更新表格内容</td>
</tr>
<tr>
<td align="left">9</td>
<td align="center">table.walk</td>
<td align="center">对表格中每一个值执行一次指定的函数，但不改变表格内容</td>
</tr>
<tr>
<td align="left">10</td>
<td align="center">table.filter</td>
<td align="center">对表格中每一个值执行一次指定的函数</td>
</tr>
<tr>
<td align="left">11</td>
<td align="center">table.unique</td>
<td align="center">遍历表格，确保其中的值唯一</td>
</tr>
</tbody></table>
<h2 id="二、详细介绍"><a href="#二、详细介绍" class="headerlink" title="二、详细介绍"></a>二、详细介绍</h2><h3 id="1-table-nums-t"><a href="#1-table-nums-t" class="headerlink" title="1.table.nums(t)"></a>1.table.nums(t)</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 计算表格包含的字段数量</span></span><br><span class="line"><span class="comment">-- @function [parent=#table] nums</span></span><br><span class="line"><span class="comment">-- @param table t 要检查的表格</span></span><br><span class="line"><span class="comment">-- @return integer#integer </span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- 计算表格包含的字段数量</span></span><br><span class="line"><span class="comment">-- Lua table 的 &quot;#&quot; 操作只对依次排序的数值下标数组有效，</span></span><br><span class="line"><span class="comment">-- table.nums() 则计算 table 中所有不为 nil 的值的个数。</span></span><br></pre></td></tr></table></figure>

<h3 id="2-table-keys-hashtable"><a href="#2-table-keys-hashtable" class="headerlink" title="2.table.keys(hashtable)"></a>2.table.keys(hashtable)</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 返回指定表格中的所有键</span></span><br><span class="line"><span class="comment">-- @function [parent=#table] keys</span></span><br><span class="line"><span class="comment">-- @param table hashtable 要检查的表格</span></span><br><span class="line"><span class="comment">-- @return table#table </span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- 返回指定表格中的所有键</span></span><br><span class="line"><span class="keyword">local</span> hashtable = &#123;a = <span class="number">1</span>, b = <span class="number">2</span>, c = <span class="number">3</span>&#125;</span><br><span class="line"><span class="keyword">local</span> keys = <span class="built_in">table</span>.keys(hashtable)</span><br><span class="line"><span class="comment">-- keys = &#123;&quot;a&quot;, &quot;b&quot;, &quot;c&quot;&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-table-values-hashtable"><a href="#3-table-values-hashtable" class="headerlink" title="3.table.values(hashtable)"></a>3.table.values(hashtable)</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 返回指定表格中的所有值</span></span><br><span class="line"><span class="comment">-- @function [parent=#table] values</span></span><br><span class="line"><span class="comment">-- @param table hashtable 要检查的表格</span></span><br><span class="line"><span class="comment">-- @return table#table </span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- 返回指定表格中的所有值</span></span><br><span class="line"><span class="keyword">local</span> hashtable = &#123;a = <span class="number">1</span>, b = <span class="number">2</span>, c = <span class="number">3</span>&#125;</span><br><span class="line"><span class="keyword">local</span> values = <span class="built_in">table</span>.values(hashtable)</span><br><span class="line"><span class="comment">-- values = &#123;1, 2, 3&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="4-table-merge-dest-src"><a href="#4-table-merge-dest-src" class="headerlink" title="4.table.merge(dest, src)"></a>4.table.merge(dest, src)</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 将来源表格中所有键及其值复制到目标表格对象中，如果存在同名键，则覆盖其值</span></span><br><span class="line"><span class="comment">-- @function [parent=#table] merge</span></span><br><span class="line"><span class="comment">-- @param table dest 目标表格</span></span><br><span class="line"><span class="comment">-- @param table src 来源表格</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- 将来源表格中所有键及其值复制到目标表格对象中，如果存在同名键，则覆盖其值</span></span><br><span class="line"><span class="keyword">local</span> dest = &#123;a = <span class="number">1</span>, b = <span class="number">2</span>&#125;</span><br><span class="line"><span class="keyword">local</span> src  = &#123;c = <span class="number">3</span>, d = <span class="number">4</span>&#125;</span><br><span class="line"><span class="built_in">table</span>.merge(dest, src)</span><br><span class="line"><span class="comment">-- dest = &#123;a = 1, b = 2, c = 3, d = 4&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="5-table-indexof-array-value-begin"><a href="#5-table-indexof-array-value-begin" class="headerlink" title="5.table.indexof(array, value, begin)"></a>5.table.indexof(array, value, begin)</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 从表格中查找指定值，返回其索引，如果没找到返回 false</span></span><br><span class="line"><span class="comment">-- @function [parent=#table] indexof</span></span><br><span class="line"><span class="comment">-- @param table array 表格</span></span><br><span class="line"><span class="comment">-- @param mixed value 要查找的值</span></span><br><span class="line"><span class="comment">-- @param integer begin 起始索引值</span></span><br><span class="line"><span class="comment">-- @return integer#integer </span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- 从表格中查找指定值，返回其索引，如果没找到返回 false</span></span><br><span class="line"><span class="keyword">local</span> array = &#123;<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">table</span>.indexof(array, <span class="string">&quot;b&quot;</span>)) <span class="comment">-- 输出 2</span></span><br></pre></td></tr></table></figure>

<h3 id="6-table-keyof-hashtable-value"><a href="#6-table-keyof-hashtable-value" class="headerlink" title="6.table.keyof(hashtable, value)"></a>6.table.keyof(hashtable, value)</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 从表格中查找指定值，返回其 key，如果没找到返回 nil</span></span><br><span class="line"><span class="comment">-- @function [parent=#table] keyof</span></span><br><span class="line"><span class="comment">-- @param table hashtable 表格</span></span><br><span class="line"><span class="comment">-- @param mixed value 要查找的值</span></span><br><span class="line"><span class="comment">-- @return string#string  该值对应的 key</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- 从表格中查找指定值，返回其 key，如果没找到返回 nil</span></span><br><span class="line"><span class="keyword">local</span> hashtable = &#123;name = <span class="string">&quot;dualface&quot;</span>, comp = <span class="string">&quot;chukong&quot;</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">table</span>.keyof(hashtable, <span class="string">&quot;chukong&quot;</span>)) <span class="comment">-- 输出 comp</span></span><br></pre></td></tr></table></figure>

<h3 id="7-table-removebyvalue-array-value-removeall"><a href="#7-table-removebyvalue-array-value-removeall" class="headerlink" title="7.table.removebyvalue(array, value, removeall)"></a>7.table.removebyvalue(array, value, removeall)</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 从表格中删除指定值，返回删除的值的个数</span></span><br><span class="line"><span class="comment">-- @function [parent=#table] removebyvalue</span></span><br><span class="line"><span class="comment">-- @param table array 表格</span></span><br><span class="line"><span class="comment">-- @param mixed value 要删除的值</span></span><br><span class="line"><span class="comment">-- @param boolean removeall 是否删除所有相同的值</span></span><br><span class="line"><span class="comment">-- @return integer#integer </span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- 从表格中删除指定值，返回删除的值的个数</span></span><br><span class="line"><span class="keyword">local</span> array = &#123;<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;c&quot;</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">table</span>.removebyvalue(array, <span class="string">&quot;c&quot;</span>, <span class="literal">true</span>)) <span class="comment">-- 输出 2</span></span><br></pre></td></tr></table></figure>

<h3 id="8-table-map-t-fn"><a href="#8-table-map-t-fn" class="headerlink" title="8.table.map(t, fn)"></a>8.table.map(t, fn)</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 对表格中每一个值执行一次指定的函数，并用函数返回值更新表格内容</span></span><br><span class="line"><span class="comment">-- @function [parent=#table] map</span></span><br><span class="line"><span class="comment">-- @param table t 表格</span></span><br><span class="line"><span class="comment">-- @param function fn 函数</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- 对表格中每一个值执行一次指定的函数，并用函数返回值更新表格内容</span></span><br><span class="line"><span class="keyword">local</span> t = &#123;name = <span class="string">&quot;dualface&quot;</span>, comp = <span class="string">&quot;chukong&quot;</span>&#125;</span><br><span class="line"><span class="built_in">table</span>.map(t, <span class="function"><span class="keyword">function</span><span class="params">(v, k)</span></span></span><br><span class="line">    <span class="comment">-- 在每一个值前后添加括号</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;[&quot;</span> .. v .. <span class="string">&quot;]&quot;</span></span><br><span class="line"><span class="keyword">end</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 输出修改后的表格内容</span></span><br><span class="line"><span class="keyword">for</span> k, v <span class="keyword">in</span> <span class="built_in">pairs</span>(t) <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">print</span>(k, v)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">-- 输出</span></span><br><span class="line"><span class="comment">-- name [dualface]</span></span><br><span class="line"><span class="comment">-- comp [chukong]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- fn 参数指定的函数具有两个参数，并且返回一个值。原型如下：</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">map_function</span><span class="params">(value, key)</span></span></span><br><span class="line">    <span class="keyword">return</span> value</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<h3 id="9-table-walk-t-fn"><a href="#9-table-walk-t-fn" class="headerlink" title="9.table.walk(t, fn)"></a>9.table.walk(t, fn)</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 对表格中每一个值执行一次指定的函数，但不改变表格内容</span></span><br><span class="line"><span class="comment">-- @function [parent=#table] walk</span></span><br><span class="line"><span class="comment">-- @param table t 表格</span></span><br><span class="line"><span class="comment">-- @param function fn 函数</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- 对表格中每一个值执行一次指定的函数，但不改变表格内容</span></span><br><span class="line"><span class="keyword">local</span> t = &#123;name = <span class="string">&quot;dualface&quot;</span>, comp = <span class="string">&quot;chukong&quot;</span>&#125;</span><br><span class="line"><span class="built_in">table</span>.walk(t, <span class="function"><span class="keyword">function</span><span class="params">(v, k)</span></span></span><br><span class="line">    <span class="comment">-- 输出每一个值</span></span><br><span class="line">    <span class="built_in">print</span>(v)</span><br><span class="line"><span class="keyword">end</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- fn 参数指定的函数具有两个参数，没有返回值。原型如下：</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">map_function</span><span class="params">(value, key)</span></span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<h3 id="10-table-filter-t-fn"><a href="#10-table-filter-t-fn" class="headerlink" title="10.table.filter(t, fn)"></a>10.table.filter(t, fn)</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 对表格中每一个值执行一次指定的函数，如果该函数返回 false，则对应的值会从表格中删除</span></span><br><span class="line"><span class="comment">-- @function [parent=#table] filter</span></span><br><span class="line"><span class="comment">-- @param table t 表格</span></span><br><span class="line"><span class="comment">-- @param function fn 函数</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- 对表格中每一个值执行一次指定的函数，如果该函数返回 false，则对应的值会从表格中删除</span></span><br><span class="line"><span class="keyword">local</span> t = &#123;name = <span class="string">&quot;dualface&quot;</span>, comp = <span class="string">&quot;chukong&quot;</span>&#125;</span><br><span class="line"><span class="built_in">table</span>.filter(t, <span class="function"><span class="keyword">function</span><span class="params">(v, k)</span></span></span><br><span class="line">    <span class="keyword">return</span> v ~= <span class="string">&quot;dualface&quot;</span> <span class="comment">-- 当值等于 dualface 时过滤掉该值</span></span><br><span class="line"><span class="keyword">end</span>)</span><br><span class="line"><span class="comment">-- 输出修改后的表格内容</span></span><br><span class="line"><span class="keyword">for</span> k, v <span class="keyword">in</span> <span class="built_in">pairs</span>(t) <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">print</span>(k, v)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">-- 输出</span></span><br><span class="line"><span class="comment">-- comp chukong</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- fn 参数指定的函数具有两个参数，并且返回一个 boolean 值。原型如下：</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">map_function</span><span class="params">(value, key)</span></span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span> <span class="keyword">or</span> <span class="literal">false</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<h3 id="11-table-unique-array"><a href="#11-table-unique-array" class="headerlink" title="11.table.unique(array)"></a>11.table.unique(array)</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 遍历表格，确保其中的值唯一</span></span><br><span class="line"><span class="comment">-- @function [parent=#table] unique</span></span><br><span class="line"><span class="comment">-- @param table array 数组</span></span><br><span class="line"><span class="comment">-- @return table#table  包含所有唯一值的新表格</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- 遍历表格，确保其中的值唯一</span></span><br><span class="line"><span class="keyword">local</span> t = &#123;<span class="string">&quot;a&quot;</span>, <span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>&#125; <span class="comment">-- 重复的 a 会被过滤掉</span></span><br><span class="line"><span class="keyword">local</span> n = <span class="built_in">table</span>.unique(t)</span><br><span class="line"><span class="keyword">for</span> k, v <span class="keyword">in</span> <span class="built_in">pairs</span>(n) <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">print</span>(v)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">-- 输出</span></span><br><span class="line"><span class="comment">-- a</span></span><br><span class="line"><span class="comment">-- b</span></span><br><span class="line"><span class="comment">-- c</span></span><br></pre></td></tr></table></figure>

<hr>
<h2 id="三、下载"><a href="#三、下载" class="headerlink" title="三、下载"></a>三、下载</h2><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2N5cHJlc3MwNTIyL2N5cHJlc3MwNTIyLmdpdGh1Yi5pby9yZWxlYXNlcy9kb3dubG9hZC9tb2R1bGUvdGFibGVfbW9kdWxlLnppcA==">table-module.zip<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>技术</category>
        <category>Lua</category>
      </categories>
      <tags>
        <tag>Dice</tag>
      </tags>
  </entry>
  <entry>
    <title>wiki of Midido</title>
    <url>/2022/10/03/wiki-of-Midido/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="12624351a205358836d51aebbf77cbde2e53c21da396fa2165cff3482651b10f">05ac19fd104070e24be3e2964beba5618cd36cd01cf45c00ec588fc26869c10c5b2f8787bd5914ba7ec9b74050229cc735d61538a35a6b5cad357b28cac9ae2ab98c95f9996cb0ef816d21ff7413314bb03f09cecc2bf8fa59161e4e2dea79e991d10fb5d04ac87e8e733b35e8e00b9b48e6698900f36d51f0164d532d007ec70713c210db8b90c0024a0e13ecf6cb899ec2cb4b61df8acab6c31b8789a1b43bd7414bb2c80a11e5b737c1f10f95efe056cc86d633c8b78d68f55831522e1fe5c76c879f1b332f16273a50ee90c1ef1648926c9a6fd3c10260334ab7c001116b5bc6a210590f1302d8c4f9c8a521abf4f6565e301e1c53dee28ea4fe50e884c605c78c0fad1b94b1e65f033e7d6a4b035c0ed9f167ce0e32ac43687804dd6f7af35bf7dfd4180ecf4e6c036aa714609284dff0e60793733b2878a88eef7ff2aac764ff86d27235bbd0ca4716199c18bf3d2ddebb687754ae5f9b403bc6d004e0c2098bebf70ddcfb74f77e52762ee48e53813b5768d067fec194ef5b535ac16672976f86627578d61fb1fde7d8fc9a97b3de88fad67d890a4e34ace0a71cc30dd440d61b1f88067ba472de06e623f46e31bdf84815e2edf08b8874b13f74c4299dc36668ab5b05af368e5b106bf84fd0753b6dea30f957e35b2f65a140a5298498a0b140880a78c131de032a7279058975b907ad6fd98fd60336218e797f20ecc20e86dae2850e892eb93a93698b666e88a1b97d4eb44b612b5c773cbe878e4dac5b100095351d8f07457672c6f27b4a69b2912dfaa087f40a4334452ac99511966c89401ff58793ce6c566fcba4cb868912dd20bc9627c2133b0e02cc14a8ef7579e43690581d1b63e0fb644a1e1ee2f4600562c85a549ca1a98a0759c737bb7942e3a0b440b6855b5943b1a5f23ae13d7a961dac7fc45ddf7670ec46b0075f10f7cde46b264d9f7a45f66636d298ab1bc2e97a4c0aaef5092a3c06014a256551f4a1bcf88f0443e3e6dd677b51cb761c884296204b19a3247059e6a108fa5541d42d42ee0221e97cf1002d50d3381b0599ea34b12e43ecbb38dbf18912a630d03937da2594901b9e6ddb88dadd59319ef500b72f918801ee460fbfaa27f8e5ced4e559ffa6a9fc706a6492d81f4d8f85d523e2b05570ec857f8f7caa2827f73e1f31effedcfcd674a0ff18d069398dc0752953552b0a6c7bf2e798337841851daa617c259d8fa8ac17a3684e68b55b53f9118b4bf396382a844a59ec82986b4a9dd234f99f8e9364f0e088363d0339bc2971bf0643c00c45a9f7440900d63801eb26982dd7a492dc77830094864ff958d58217941f58e4024891f7701181038e62a87084a2edfe80ee041b595ff5a4a8aa59b95e1c8a480d9c5eee752ced67a8abc8e040a1ca7339e2afa6350bab692ef30f6c4f7adab98f6af5fcca1fc6b6ebbb3e995f922322b714b26041d317e74589ada794cdb8676a0d1974d42048fdc37ef58226b3e16cb44d1b9b74a7b2f06a678072dd452ade119895483d5f41a267eee5caf2708f8aaafa0a41055aee3bd6f7b0a082213a4e08abe6dfa0c046b5430aabd0b9c8240f54ae753d4fb64df82aa6bd11d8b4c3b972a3c486507ddf8e6600b7463d6358b9c5da12d60029189a6695b58379485ae53a0c01c6c40f79f1ac4e6a5a5cb36bad4332b81f682bcb233a3a7a7cc937cbe7f9179519838ec0640c112b2330bb6c797b80f99808d84c2c307f1937650f400b3fa8a099f00956aa2b4217e3de45701aae5774049e4eb3cf06026be59e8f9143fc316d8a2030aba4677ede69e95c275dcf9a0052d6b4610ee31dede2e08d75ce1d247ea378374c0af18bf07f4082f7f0c5cbf294542490a9b4ec78f544360911534a9b7fb2c10a7eae9098f9335d8df1a7b80d9dcb5e60d495b9ae1fd0ece77fa006e2a8464bf65e6354a357a5250fb1d4169c61ea61a508ee543e6539ae63869890024dab32215ea1f53ed9e71793d37b23a03cc60598d5a001d8104b0e586a58043f2a370da4aeb911449ea4d773af09b0a58946d5330bc8a29c8f1adb16fa95a79e7e452292d1cc44f507b112f2c7e8322357a5ffbdc4f494f91a40b0a36d54eb66e125a36c9f40635d680e596d215a7667ff9e261ec3e62821adc178d109fa28e7009661596411339abf14a0c8c2ab115a9b4c38e1b4e4e2fc7cc7846e2dd0ae26e8fbae10f310e65149b8bb15e65eb0e83ca1683f623dfd005ecf01ba2db4590b50785e9e6f917789224d6bdbc8c04f0c3f657f02d239c5068cf1ede250284b63b47ec1db95d73679c6bf14d8743c9e50a580133e751a76ac30b6b88d410961a870a5f0e9a1b8ceb922c9437e3145509d2c81ff0f5bc41fd3ac5b28c861f3d3f8c0f7e0931587f845ccf3a639994eb81abc68b3b9ca37df132f3729a19fe458eed2a57d3f6e6a83cee5a8d60977bfe08f8150646f86fdbfc71ef8c8e3c4c4a08956f0ad6ff3866c27cc1824187f78fd9ee495ee716cff3ac43c88d0e25e04c91bccec0f653971ef5a5c71fb0e66b32a474b836420bfd6bcfb1d99f7f0852f273ce360924ea33cd5892ab1fe00a9790d8e448f05ace5cf58d4441a71bfab7ab093bce5a19acefd7a50d9798de15cde70b9b72106ab4f201d1d3937c2c790d616e853178e5ed4a3e6c6b63296c696ccbe3457e64bf5468ed884ddbedc9f346828dddf53e2c9e6d38f2d8074b0bccd6ec732394aaafd10c4740356a5af86b29e85ccebac880a00b647a683683193a3d8c42e55e0b3c3b3c5dfa1eceba52842b085bd5d7ffd9f3ebbeffddc79cc289cd3eb9927bad2c7b7e95c5a34dcf5dce6ab31efb765b55c2c6322e6580573203896d53ca35310eda947c880b39dca76258df1bd1cc46edbf3441309331746e985819ca0c937d1fbcc8ca909ecabf2d848988db597f0abcbb913d912d509546e48a80aba3646aaf0912253b45869b5c14f6d358fbf290418aa67f985eebc62f6855054968ff7de36123aefd93a6580637d5c257fe00526e6ebfbf326cfb046ae3832d8e8581aad48aa83fdfbe65f5f6f2fd8d51ca920d84e67477094950b465f9c847f550cd2778a5d4c512088280474e6b232a99f5b8f998eafddcdd1ca92ba1f24615c0c877fecc209d0a007b4c349001743e52e2bd70b74b3536a79a46a43287f1179f0e554bc37fd7befcc08065fcfa73b12dc97b96f69e221a4d0df5c02de72344694d6e291add11f298fc215e83e4d22c86b058a95f98eb70fca68f37ac69c13c9968b5c86a983a3587c05ad78e67bd8b5b8dd096ac22153bcce01d8953e047226c72c7c6096c5cfcc524c9f19cb025f15ff5cd8dabaabe46089c34222bf35c20646255002150d602b3c695733e6eda8e827b5c9f8ad3749897211f1ddcb1a3faf0e40d7e20d8f9d7df296e99625a649491d1250303b6528023defc3f66a4441d75d6340bfea967d82dfaf6b6a9e313c8e54a3e2b48781f726863bdaf7d7824cec560db71987ae2e635958f077091fc2fe605ce8ba85d791d5bb1ec53cf42fec4b84b68cdc2bf16162bfec64e4c89078e1f6717ab4ae6d14d1ffca238c61f9ad3bf470542a61280c13dcd3617c32895095aa4e6523d3bd41e1b18ffac904cb3fbff882839cc1d7a7e0cf783ca2a2617ce959e12ce78efd77a7da5b19a010b80e70415b209ca4c1bdc946a83e64ce651a94a9898bd7aea74fdd0f0045a3e42470031570a50766acb28e44b124b313533350a821d488c0c6edaf9b598dbf39ff0d65c791220215b81acccce0344618292dc1883ef26da3c16d32724efd210eceb47acd58a67eb286f66f3579ad86d9dd30ede7e8cd4426278bd4274cc39488fa5a8821c496acd5e3d9821c097a976a576172545f32ef12ad71a077788fbaafd65428d3b8dfb7ee503b4df3c79135bfbc926ea71027c6efbc5b3ba7011901ab860abea278cb736752e2ebb030a17d099032e82ac36fa65beed35c14b7c5a56c18f37182a3c8ba00a6b44e48ca9b3d46c498620c82759cbee9ab1d9c4b33f46fa6924f48150fd6d6281e07863186ed7f4880e3b040db3d8d57a4db38bcacf933db567f466cdd1351332ea13e46b0b2b5d563a88070b7f826ad7fc9fdb7b23daabf1622e9c754bfda4483fbd59d3736f3ce9ba4d5769d03132cb7201b4b5b2ea11152c9b5fdd01b040cd4ec45a48650e00db56ea20755299ecbcd507fbcb0a61cbe484d3cd11f6a5a58979d28b6fa9597975995843d10a72963996f107c70464f058ee6be1b0ae3ad1368ba2875592f949cf3204a6cc332497d2738a7787be4fc480986cafdb6e75fbf874e90397442526c02a22c166e6511e247c66e90393a521e2dd21b3f92205f71c180cbd10358a283f7f952b85f4eefc1cfea4742406d812d30df8c1af350491d58e8d8c06edca4e5e2467f58e07bee547e856c11bd88fcdf3d3b519a64e795e2a98baf3e202fcb130e7b62dffed63d238b95095069d6aaab5e7b88931c450ef6fce38b2e21450b8f2b55b30d1531c6ea6783c88ae208e0c0c392ca24ee65e502bc0f50700c348f84ad23090bb0a9eedbfe79ea28cdc28462c12e5cbff28b98612da98868bd318cafad18082fbb3b0d073b63a1bf4342b249ae348ff3462490820ed93b3a5c63d4bc14095ef01c994bb85c1f1aeb7adc4285f867fc2335cc7bbbaf9770c02b78a9aed83e1cdc639c14ae093b25cf3008a6c09a7bed3f76540da07cbb1b00964e6d735a6f14c781f397be681038b518beb3393f561b9862bd7330e66c4a71e3255fbf32ffb1b2d21814f8e5bde7aa640bfe2bd6a0a6a5da613ebe7d7d709c7d7ce824c10aee9e366aaa4553e0e076d567d31af0ce406b1b56f5cce1cd0b0218432dea609f259ada1d650c5b2df501354d7728d5c833b1989ea70ed2f639b725482ea63a6ac3a6543806fdde7d8ebfb3beb5ddee6a37c148895a7d27ec7232ea75e8089dca53cb31d20e607d6b8fffad6bbbc7ba2c2dfdc2afef480cc3c1fcaf678f93d81a9fc93488595aef2bcd1c1ab0f42f5380fd00adcf8b602a92cdc0664d388ad734e279a4ad3a3487646d762fc6d27fc4b5eb05516f2e43d4e76b9ba05ef6587351f0ee707802f4a930599c1a3ed7a7e0b660aa7ff0143823197e0c9c506bf072ce639c2c6923aec2cb0bfa0c05d82a78a27b2b75bc1368c0079281471aacf7374d1e21d52e9c25a1ae66673c87cb705da1fa4a19305f02e123fbf9d1935c4c82c28ee948a02a79cd0c71ba361c955eafcb9e4bf3c96ecd5762af7d38a991ca43ec961658d0cb8d9b3a9efe0973c1698873f5d06d34776acb86776dd41e500be33964ac762fbfa87c9aa3bcdb72cfb70f324f9478c473fa91193f63e20aa8bf23710c6ac3b7348d7f4bcbc1ec398b698ebd4c45bb8780918b9e5ab527813e2e21c197ac5181335f0d712af04d1c781c6c6c419214d4443dc07433457df12506460790f79ec6ed51cc57b040213c2fb8851501a21e5788ad807b452130e033de3c707ccfeb610175fa163ff471e6cf5fe5db9c53eba141044d1debefb8038413ac511fd7f91529b8f865d0cdab94dab6a4c4bb6922b45512d7c4584768396a5862667c6dafd350563ee7b014044729df742ee6ddb77e006c45b1d828cda9b2892e004922a77265e43a592ac8ce78399b1f4219838601fc53c8f5454263e40879544d24fddca4e8433db7a8aec245d03de9db5ba7d16a00af7e9d4cf10adc2e0265920dc91ecc33ed83dffd2412c6f8174f423ec8101405451805d16dbd6ecacd1165c30112a2e8affad07173a84d068b7862ef6ea7ebc4ab703ab75b0493c71666c1b87763670480487a656d53045c9f57052e9ecdee95092348767458eb556271a934751a7bfb298a1e2b10b091683534c667ec37ed70068dae7e7f1c02807133ca374a8743658a1fe86b92b1c8ca9b94c4652cd0b461e5fdff326f2d4aae6d90b84c49023ce3c433cb23d9762da2944096d25e171b573f8d08890eaced78415844251a8ad4db291d5b3c19f0a99bc4e5b29680191fc5b1092b1018d45fbd950244e1e451475a4b476aa5461f06917cc1027218f9d2768823260408f397e61e745a4ff1fee614963383afc9814b7235ffaf5bfbd00442e068880c3b9d2784a0cf504f39bba64d48977ff2d5a24b52b3e1e5f1ac69d2f7925a62c5f7705bf39338fca5c22d0079826b641e98857450a58d69c5a537c08200271ae2c7d3529626deade7206d64494998c4b695c047e47c81f9ba411fc1e220c866c6ca0d646b5b69e65144e9ca84f69f9f668067289aa1f618f4366d137fdf796fd326ef2a861dc1a1be3d3a5cba7cc6b79c5ae6c9a0749d1e797bb19daf0e33db4c04e680e3467aeb7cbe7caf76fd03745279f3d3dcc1cd44e03243d5616c0d70dced82f33dda9457a9222070968032d0387ab1e15f865e40493a8da3844dc7db71e1228836e5eb0d3dea2b0f8cffe947b4a0716fdcaaa2c4cd9cc023fab2e4466c0720abdb5e8ae44e1138b9b5d11844f7a2cc09bbbb1a9c60f9a8370c73b758ffb0757fc059ba67bcafbfb06989dc7873b7bc5c04e379d74478cdedb9b412e94f6247d6a10de8297d4153d6caea845b1a40dd9ebf3266ba4b404fc178b97d8d9da9e9b954976f4a2ca53e633e4973d006d8e61294847bcae6344d8467e96cf705580a45ceebcd44794c14498967eb02d935fd38954592d410013d5715609bfdb83cbd6d4f22847576f5f831d3382fc4791829e3533b07bd039c27cfe9a01058f1c62abbb88c1eba1f73cf500ac4df5a10efa55e0452d2790f2660b1b5d0c88eaf88d6a05a57df69458d301ea50c980835617e899b6a23c408a6e353abe41c15e1d473f711c654f066a9592511b6e8ef717d12725dae80febf5abd988f60ea4774522e4f61be20e96097de095bbfc2d6acda750acafe1e014a912e56f277c69421b8b250ae9109f6853176b09031ed88e9663ca5071e7be7593f60ae377a727a9f174d2777a26afdabfdbad890a979efda2ac4157296c85d09bbcec49ff7bbecdf2b8319d957aed85aa43ce5509ca760dddafe3b0d24cc5fbeab50b6f077dd1103eadc14970bab58bd3169bf6ddad6c36f5b3b73fd4725d9747f344980023ff574d740cc61525933d923b9c3f56b0aedc3362d2ede24d85080ad3f318cecaed34c4bfbc4945afcc8ac0af80bf4c1c426a9be0e4d62f4c3ea71701be4cdc44aa8483ba2c0eeeeaad2f4dcc879c38027fb450682c922098bc7cedfacaf8527e88fda332cba36d1d1e07febbd9358742856060d2d0bd8521ce85d5587aade7cec38992b132f93303b8ceaae85590773245fc8a3d80f7a307a69ee2f685b3909de74f262565e4be83e18b67ab7634e8fe8d29774ae72f5a8925d60a7b8bb15e761d287ca1080e0462b7a304302b8f092bf5fca21195d217b81c744d7888b4eb8c1757c1c062a3e12991b015ebe16bd4928db1be09d7bea86a8639d93b6ac753e6599d419dc19a50750478503862cde72df5e5f0284cc69b2a686d4b28569152fa5f8294d61726219f24c288c4fb106503bd92889ad20c11d7d7d76cac3fc60dfe7787f26424c838a14f10fdc01913546312d067f491e2025f681853c6d44968598276cc765212c0fee7558c9540176d9a467631863cb2b4b827ffd6c84bc6fe6c27dbcaf252635fc106616d79ddf66a083196e13311732463f80de919c857ea462dbb463698c69b44a683a9586e2c660a00b94d500848ef3403afd597b9a505ff690d3cdd35bd941d4df502e0c3729835a160a93a1e069195fe24ada52b3c159a52bc27ebb252cceb52bdafef3189fa895cf8d3a21cab8763fe2b58e1fd282d38a5a467b6ebf54b13eac277ea40497b705ac1582d8cbc3c4ab563887d70440da4aa5fdbe086fafac6bf55f7fc03ce3973eee56a5434487d5ba4271848bc056da1231992a8528f259415edf0e841438b524c95ca129f4ae7d774bcb9445bf173f114c9bc0455ef4cd08400405ee389064596d67ea62e61082f0e4a9abe58dcf6ad714db1c8c6bc8040c45d77e8c6f23782aca9cc18124ef912a72cfdd1da609b99fe97f2b7de71811aacddccaa5aac63161bf8dd1d5c45ee19f66bb3eb8d59db1e893abf5847252231892842b8eb0d224de477d4a5b8c2346b353c9adff42d6085bf2471e23975167d1b09a4f73cac0bb51d36f18a37a69cf1858eebc5c9db8bfcd27cf43cff43d2ef1d890031f9ab9e8fef319e908e23f9e8b3e97d6add09579cf0e1cb56d10a8d8332abfc043e5ff0e8b567063377d76e8f5a2b4a19429a959bdbe71fb16d202b9bf5d73a690d9f4915a22ccb8d6c0177cd125a3cb4e65e8d432249e0a9fd68ef79fcebc0fcecc3cd88063349e520d2b43cc7ca2b7a0b71aa7e852abba96583d690dca74dfbfa2e309284a85afc75074550a368c3cca1a4beec69fdb1f34854f2e24217fb85bb1dd6714d35c07719061fb80ef06971dd814c9753ca4bf2fc4554fb6bea0532cb26a9c3901941cff87d63bd6d548e3bdd400fc7eaa923ce1dba427078de124e09cd98fa83cff5a312c7c6a910ed9bf98e77988022fb355298593b3acf85d5a1eae11f8b7b0073567bf3c8858b7a570a188de92bbbc41780704303e3a2230e075faa9533407e65a21e5c0bfb1c99cb39a5a130cf8cca7525ac91cf824f2d3f3d09f24642d435e9140a46c0b37e3194c219c718cc78dcdde3b6d16441095101e22bba64372fbbae9e2a37193cb25f3970c15ee8e99fdb726edae82d15e6dc162181c4bd3b4f2c1c6d8633c087ed934efdd1e549437b1bd8f3cb912893d129689b784e0cb2af17a9a79c0ca03769589366492db7806d1cb9e14bc22639c1c0de10aab94f4a3bc02bf6d9ecffc6cdcc49f33108c87f3a9e68cb7a6e0be356bca7b1b7cf6ef044371bf91e7203dd4a7dcdba8b59b7473e5310f95e36e8123232377ecf214888622e22696f06c4249c1785a9bb843dff422d5861e0fc0004fefc9d8f4c7321dc86300396d8e1ad3d90676478a261a582f7bb0e4a467988c289ac5ef8e62f11f2aae51a1c18bbc3c5e959131cba142a150c09b72bbc9b87f45874c1506094d180f1fbc1b89d473997c0421769ed4951f52bce0691189811df754e9ef69d546a687f543a77a012d90115ac80b6ba1ebcfa2f46d1935bf1d46a684eb075636d1e35fb96a044806ead93b3bfaa812cf3cb18f161781908cfa65bb725b004673b7aa27b1324d483b93c6d22278f5d96953d9ac3199a8b6f4df05295434dc0fe96169d3706a709cc8aefd564b0648febafb8143e48947e2790a610978fbb0d25d3ddc262297ca1f383fec45e49b74097f1e90ddb7a651ffa365ba140a7efe100b9615a92ad177acd4ac0a57645581d020b9d468cc3295c959f88e89be9e97a893b19b36b46dbaf79535baeaa334999961a1111744686008b49d03b0fb2328a160c89473b7910826e41d39b4859e72d592700066687181419791f1a9139ee8348ed10d644e06a26d6060f97277a9b9eb14ae29dbb84f6ddf2a36ae52d96787c44e2516ef965f0bb66b4808405d16aaaa46dd165599c0436b3c0111c23fd12fadb9201169dfd754dee8b99f29e956ce901ee015e7ad802e1add1cb75d7213eb016a51c43af20768d2c1c3d7c9ec0475e6af40fb13f5560bc6ed6e2120d2f7576661a91e21b539c2317d658fc81c0216af7827489e2681a38d3b015a8dad82dc3f9684cdaab9ddc9d4de58a47d75bf8099fa3fea0a136d35e18f48c713fb7f4aaacb2398dab6831b47b31dca8442df8c90dc5d751b113a2ded9a7bef68e0efbb57a191c4f0973bd1caecb9a02883f2ada971c14d25baec1cd8239cbb4a10a6bb4c76ef8f087d2f15068c2d4c3929c6dac0693c9b89d8e62ec19c641ea7b73934456fcc91a9889750c4ce2edec30d4d1bcd22276c839f29ea1169276d8b55bcdc2341322eb506f87f77fe1f8a32c132f7ec8c17eb404e0928a7a196239873682482ed453f8d3d380819c5c00b361b09ec87f22277b4d30895a7177e63a60da4b5a4d44812c04a1be6d01b9e98cacc0476dc6d163eb46f75978df437d563c6269c7955119725f1b17b0fcb904ca1150d565f755a41b9cf21ea11a740c0df960744861d9c0dcbb67346cb1a0a42a3cedcce3395adf2ca6da7c20dd1bda4a95e631520557d9e32fab20d3adeb75f04ddf44c89cba3ddc64fd8ece7e94d8d8d5ed067a46de0c98ae8bde89964212a709165da57ad4c76e932b75598a744c4826440bc430508167ce6b074ed528901bcd822d6b8a965cf3c070228a1174fce56ca03971c6200709e403c4a83ce476b63da036cae728df8cd60700d60da66484a7157a1cf2131870b75c86809975eda95b44d7e82609e90ab281732c48904c6e80f689f4dc06ffd2c16e3fcf9eda9c10a0646cf9b08893114286c6d57cdbd7676e449654715a09a7b18e7d9672129b7d1cbd98e87d5d2d4435c01c2e7ef5efe493b1bbfd2bfec00476d6c10ccf954debdb382600b1dd69d77c891a52a92e09b528bab8899eed9eddbb10e72d2f87eff039d6643be8b5e3406b2f4b1146c71c9f67a918b9d9c4fa696a7c109487aaea1fe1311efa60faad0c9e8109858e704b4b12d7915bf0d11949ae8cb2fba94b885b148abe79f18c89d7356be5c3f06bf975dd6fe71c9a87a2b4193807f04b78b844d84b8f9c874a621e0f875c41d46736f5b4572bee732c0a8393e3c88069cb746323dcabd01558481fe611d741ba7fcccdfcc27d76a9096492e2e4e2fa22a1dc4dd38334a66350a2e27b5b5c8f7e7d54da7d1b7871dd7120f68e1a1596af7e39dc190d88325d64066f4eceaed44b4133c5406b7fab4767f142b919ace85ed0e4e3787dfea766a5c0dc363916c991bdd0250e71719858550b9a25be2f274fc839b96f3a69629bd4257d8af54f25b9558a9e4c2a927cbc4b1215f89946fa0ea532b667c6179a85779c44cb1f3551f59a99700c042cab745a2d4dc330d5541e996d5d5d3ae76dea46b2257fd21948a60ae42f374e83a7c0145372cd8e814e2a7959cef97295ad83d3c1faf1c1b2c5caa212261cade2f82e2d20395a96a18b9fa7dbc6ff621f2090f58b0dc3322d9269b399a3b4dd696cda7b86f72872a6daa63d9036cc10f025a399b85028ee8ae99cac253c802728c64ca1ef1ffcaa3f48e7e6b8c814d939c4c881ebcd85e8d73263a8455c3d61376fe680357de25fb1c3a2a429737c64b066e4fa8e63c56f6b7bd6765fa52d5164d45742d43314b0cbabce5d4df32c326902b88160f563ebafdea5e35460790972950d615d94afb18d72f7f5c7310438fff1dc3314bb0ccf66a9c1c1ee1d2cf2fd014d7491e9c9eeed73b589626b9e1290305ea5a270d308a840b79830e7f75b14c8a21f730b24a468c45bc22e1bf8bc099d1042f7599efdfafc110c1c1da41199b266e1edb2a785350b5b5cba98a4f7a5258b4dbd8f2cd0a62c9a5a39982cbd0b3692594d4beb2995ab6c6e6248895953c96a764ef76be3bd9b372764b28a80555f72f43ac46a63deaf601b1b81ffb3b25fff0847abe583f956edeea63a97bbc7629a3ed9c99cbb91fd8dfe9899b5bbcc182824a633aa7c7b94a6039941555ab27d881685d233f5601c70ddcf5f85f8c8ca29745b89d96626ccb6fa12a0493b805faeba5526001899c1f8963c4c20571ddeabe6f8750b196f03bec384ad5ac52973cb7e73db79f062e714c5d234f33f3b571a810b8da124a3a04d992692f4f16f10da57144edf636c20c7bb3dda98ede414a8060d7b324b3552a7e9101c58b0f67c24e171486cc8f498d8dd83e45b4fa698f28078305e3ec5ef5055ecaff28bb5f4a485486c19619d2101c699607b31c84d23f4257ed4461a0e07b55603d1b49ba97c578cb42bcb6dbe257d2be011a4a597187204ce704e54168b9d635e215332cd760184a715315ff49a7c3208a33e833558714e26c62809f7f26eda9ce439ffc78813023c99d769594dab67e7ae85272ad4ea60cafd9276ff314d1365938ceb1d97df5b4b8ef061a6c5d7b2d43ae6243b026b7cf5807bd0d8789baf1151a449c591106fe34384b943ffcebab28ca01e3914e47196e0dae8756e15ddf93897c69a587f702f9f64ea197bddc5a31239583fdce8d2d938f8dbbfde7592dd2c65a33d38469ed0fbf1a6bd5a91d1c4d489e848e00bcc6a560e3580204a226deafd772a524e8f9537560cc7cc4265f6e9f0b33fbee4380734551666e5df02cadb886b2c018b359bdabdf147090d9c1370442de0b28e51f13901b8fc37406370536427d77fe8e5291a20cca0b28f7147b8127c6cc38c135a624378bc4ff06991fc655f44b9e3e04e0aa0d9270cc59e0a879689e6eaf1d2d09015f38e9c0bcee3e1a92d3ce4e0501557ea6383f7800de7e47675b1b4300658c68d7154d3f7a273b00eda67e703d42a41d1dab4058d4d3dafcadd8488306e384d147b062ed283682986f6a74ae20256dde762944a7e11210cce18ab1b277de039cc6f00e8b377ff50643df6de4e3c69517c70610f98f0712bd98ee3c05c90a5af6a59a239ef4ae380ccb864cd9a261670d5010fc50a43425f51617f67496219b9c9e553b9fe66668c1bc8e78801a34b5ca54ba29cde1aec589dfca2c1ba074635aff9575f74f48f7b8cbb83223c646bb06f0289fb205401d20b41abac337a50d9536309396b4dc2878876a08b0d2466bae63b4b44ff3f776e9e9289e8aee1696f5a9682b7f1571d7cb8105666fc5d9aff3d5879e86cb8b7415d71f146ed3ea87429f42c2af95f6f9eb7fc44ecf736c17b764c3bc41ff84646cec929a5efa4220791f0450e99b38143757b1fc04dbddc386d7477aa8e40ece5d37ae8191d9efe13f20aa115438e71aa5f05a15e2e2961fb2a289118125d556c9946961a0e221dd0a390793c12ae108b6ed95261ee44be341d538c67eddb2071be52db96a9f9e127875c8cd7394ace0e72ad44d899351873cfdf1f6483cfcabc4a596c2ad53902c43c86fe275d12927d402ff6015d0734035d8faa156484fe7b9d0035440c44d7a3eb2e3b56cbc11b39ab75962caa05bea70638d0dbf4f9465b8d861a0de8e035a76a6d03e0974d552e8b83fae91967ba56fbb4f19578477384da0911a03d1f3fec76fa2a6587c6c58868711113e74b3c2ef2f4c6a50ba262a367264324b76fb54bcdf3df1e5bed415e88d30283b23bbe648f3f978c17b269fc480b64fa43bb032c5a79177fc276bd175ef3428aea9b2269938f52c8fa062b8e86882c650d0239d33eeb70714a5da15b1e603d3076fae3bc3553d8ccb8710d23b81a3c0ac4da2f0fb4181146f5497e8cc9f101043ffd63005fd118d6444029e137612099f8ab9f67910211f7e1fc353b17e633e675318eb211f38ac12fbb6b7c8f8768e3238bbf42411074326e5507dc4d131d2e4a321a5b9fa034d892c29c0637adc6b8365c4e8dd0ea6b1526fcb9430c20904a7ffcc1b2f7c0ef8b62d74d4fd0bde9d6d913574f464efc885a27e425a4ce0bc871d178ed5e71a96f2c99855334afc4b71859a6f965939b35bd67d21991c2323904718292cfdbf1718e032b52a851bddc4ff38625077c11ad4d6a5ea1319df9933132ea5907cac123bc657b81a6d7996854115c580af2309449fec3459bbb184ccacf5ef1d8bfba53894cbc1cbd3c01dd563468552b784d5fcaff78050defebba91a480ff5bee48dafa8e92353dd7dd8860db2d29716854c129c44a195b1e1d6567e1670290b4126797c54fac1c4b4627ae01b1705ec440a4f267833bd79d216f55428d27fa019dbc287f7227e4e9ac072b421ea38a47aeb769c8ff44fe4f7f7deb49708f5ea00232bf5839cbe38b99e1d8b1a93b1e0291a5283095491344318c07ce976055d628b71439387eb452e62769ea31ebacff2f665c258f307155a097474849501d41050c1036c2e560663cec891d02a02d75f835dff552571d8719703b015eb529c7580e8a35811643876eda1a9953c655e9fbe4c3e33125458acac9bdf473c822809017b2861871a75cfd2d796afbba6b5e6e188a77a6e4748adf3b7660b6f18368b2b7f37a2b0300179d5772ab11bcbcb522034d916f286da93cb5178523ac122fb9f1a829a1326e3e506f3e5712e98ed180cd7cbd191db4e60d6e7ee42177d7dd6730ecafbd2f6f7678ef771371d568a675e396673924d9f674f376a0a399f480f21481dbe954bd9ca9c6c1d423c5c3100df30220078a8b4bb18c84e6c51c874cb862363cb3be20555ff22ef9af2919fc497ad9747936636ef90a5a7d43ba55121de7a7156546530b2727fb981e269dbfb9230459cf344633d50b68853ffe7437973dc15311fa6e52115a559ae4c0eba43e01659dd4b7214e54781495db2293c724f3aa02348eeeb79beff2d17397830b10e8d53366eded9fcc4f7d90e649fa7dcecc71232f0a6825733b47dd9eed9ddf99baf26530b5fa422e14111aa5bc9f25fc70e5237a3504d9be14d58d44e090c39be16da0dcba4e8bcfe1af59da47280d3335c228ff778bd03543fe3ad7b06fd00de631efc187a6d580b539eeb4e884170915eed257f185948c5c3c8830c2b212054682d79f3488b9a38d84dc433ebed8458286db8034efa4682cc072ee46565dc77b775936efe2f0fca1d27b098eca7c52429e8d410b7fa12338e28b32b1109ac68a6de5439b9c61e08f3dea7bfc7345ac99769a4d8e7fb9dcb63e7afa212528f0a9dc78acbc219ea56860a1a205f370697d41558a6202978f82a64ac74f950290eafbcfbc5d525a9482bd94f8dde457001c73235812414ca7a305828d98e42eca183a9216ef7b9a5e8e84d303aa68cfa3a0d9f249131058c3c307014414593538e3926311d6576a7fa580f888cf6ed25366734b18774bee9eb4ea03d8ba03167b201317e2d227f4bf1ccb6ccc7f52d56a12f5da32b7e9f5a7ff92878024c04e2234bdd6c83a9e677e4915852fc7bdc21ce44c164503a4db545c503712c2de6511d5415b0ea97f1138b1416d4b1271d374a763a328f146ff92f1a269ce406d82da55e96218e02cb9705e41c9a0d314aa070c9732f9d5321bf2a59a90208ced06c17923020c67b68f921b9d822de24e6dc5555065b9f502e8fb319759520f161c44b2485d6b3a1b5759af2b9dadbdefb865aad6828e70ae585f82a1f25b5bf696d7504016b7debbcef54dd074b2c85a6e36a114466273b7a525397da297e6e9874ede1770da2ce3247f04288fcc8fd5f064325d2322ed2de75ea79f6417719fb7e324da1bdfa980dd857164a7ae2a4157bb99eacc244f775187d3198732e30e6caf0b6e8f5fdaa37545a66158f54c110589970b5f87dc2eafcc96eb093a45ae5b77775283abd043481fbff482e26151460c6849f0fa5bfbbca43868ce882bc16573a1c4e5b6d22a5e38790baee6653804f96f4dc38953fa7eeaef8c73b61f39ff4189b7f09534d6e0036ea63fa5a6e43ace5f6c766c09e0af045f56c13a7a03874d93016f2bf5b339ea7f58d20c60474486c88b225ac1c1384db68e45f33f56a0167c763a2a4bc97f1d68214fd5a34f3ab0b112048b01370cb147c64843aea71389e628391bd0f6be95e17730b5f2c2640d3b2717cf64e22998884354ed724d35de806e1a9bd51e620544c4bf7521806a4baaedd28ca5f1ca135f951e5d0c223a3b1b4be26d97db2863263ca890744edd21d18cc1598ab0c1341f56f8ff44d41843ea2f9931cde6d134cb457228f6744ab4dd3e72851487ee3cc8e7c8a30c471b593c3b9b1478dc4486d9a8208448974f2a2712c9591ee6cb5a01e408ae9308f1492d865c0ff932e0fde02b215d26a26997656e19e799632b664d3f282db213a2f76c70d1bd63b4d2b685fe6583358a906d8cc62079c3c3148817b3f64d8bcc6745d73a9688811a02f9d2a3b3619e9d06d5d40eec9bac0fe58b7f15058571b0daa201fe78ff5a6800cd7230ffc6068c59e6b802f5b83014f9568ff3faacbd25aa07bf292dd94ea6dc0e14734231bb9640fc1abc1c9cd5e59e2ef909d9854c31fdd01a61860be6f82d3f2e67e21fc00b1ac083e0f036aabdded60e5d6e6901a3a0aa6f28b1afee27f2b10bb6eee4de3b0fd9ac494bd2ea9e96ebbdd37f5fb077c78f90db76c2f141fccd76bfa1f5a910c8a2732b6ccac3137499ccf661fda6555735f8327e10539bfc53405b7f31518f78b881426a95b62c44c78fe81a9cb59fb7a166ff35a46dbecc15de8f4ca5910bcf0d1c6c37abd00fdab57edd4346d2fb1bbf8949391126e0f893b9812ad80772962680d71e24c20b49c857221fbc118adcbe5168727c839cb67e95d944f56344ac8e4baf6dc78d194e2c008b3620cabc82704b3bcc144179ee64cf0aaf47976d2a58127f25389c6a85bb93e63a73bfe733b1fe44b9a9a384f4043a0830f3d487926989cf070f8779fb1f6e24d8d7e1082a68221f3deebb663fac9f611448d135f2acdb9df42d8ac23e4495c84e976dd3e6492834f7fc0ee93506db0ad88502b40813cd08e065761161adefe73d214d715bb272fc734e928660e87959a4399fdc2487313b55a3d20cef03da15d04eab657a02edf747059be49ea1e6554f0662a14ef687a23f512bc7f329b12b0f3e28c40217ee8a3947543e8886f10172a69e85ed47379315e644ac5437bae3a2afadd4ba13b46efdaa4c8cab97ed14b6d95a67fb4f12c7d3b2f7e9b78dd4a7c98432d1c2ff2d1ecf4d29f3b619118ef51a864bce91b2f6e88b36143b3bb56fee9e562073de1353104021ab32222a80338bbecbe136f036e76a88675de78711ad81fcf9c31d1572f11ed9d6aa3d9e094bf0eae703e58a4c08f66d2dacad78902d2409efb7e98dfa5b8b49900f37cd8a9a75cc02840c90d4093661ba11f0c00d2ff982f79c17825b1955eb63cbc0af2d8ac429c82b6a60965184b0acc0362a46a99e98f6ae4654eb7be5718c89e66d2d3bf9465ca5457459effe446a990ee95244b98c686e794d31c83ef32120b6ad11d1c1781ffa117a450530f2a448f43070a37177ab4279c5627431699c7b288f1b7ffe4b2c60960d2adc8ca759d0d8ca1a95784fa4c0d327a91328587acb5959a9d9638630fa52ccf27a34c23871748ab9947ce54031647ad480df4d835145ee2d43413c62bf3e10d61fb794c19a6e81f39603330dcae3201de50f400f207a5a5c0484fe23cf94e2df05e5273f22563503b54ddf23c9d9c9fdc0764b8f91b88ceac1a6fb229ecd1e5739abf5791716c2dafbddbfeb59657919cf41af420ad2d3125850eb78dc77e4f3d0a879f17c68e48d386173169a301d52efbaf437dcaffb65f5f81a7e3c1285e342de329ddd3dcc5d5de691b332d06fdd3f1a24eae7addf086015e70e49bc315889eb764e862e4fca36d2d9d5e6fd065c9ddb83f9cd7081ccf6e509c09eb927ec6b9851bcce4f5e7060ea207fedbb94698f9bcdbfd7a6c48e8604640a5a19fbac7250c30884a906e3515fd330c42590012088260b2b766f34a83ca73acc471c0db024798414a8280e96a7a0d864e338a75858648cc1cbb02d56a1ef9236d1366623c235677ee5a06b523415fa8dfb33e8acecd98a6604c51dd4905cc3eb425563c5159d72678ee6776153e8c7fe58d34e9b9c490b152d17a0c568c47e3df7e34ee2725bb0fcee1bd5d091e5e80899c087882c8c91c9b2d420a48daa77c07620d8000ce01be76684422c64c3d841f273e8b746f445375d8632e1a29a18364a6441410e6e6d750d90ab80f19149d4659ad95a37eeeb49561e77d33d4356339b4b7046d8ea9c0bca699effe549e2b394c480bb6b1cc0e8345f86045234edd9297114884524f6cddc773cd758b060f1c3515eb4ae508c4de03f0819068a01946dadaaf7cc3257e01b3806305ebfddb170538baf766bf88b9c92b77edc12fad7f071f88ef916bd96793400da800155840242f1cb78cc4fe49cfc67193fb22637254ebb8974d241fd511b66d24f2e9c331e86c1b6814a3a1a4c276159b475ce5c93619dfadda33714a3542a955de5b3b4298db2363c43dc5d53dc3326b7b5009b373cd5ee2d25281f783417a86dabd3a26734c15f72f2ff90501eb6534f81eafd135271d824e50fa2ed62325abb7b061b6f0d5c2cc22b79ed4a2a56e9e5070fad1b975653c390d9a82550936114e38b0ffc0f9b9860b6a22788ce725f039367faa25db62dc97bf1825dff48def1d2559bafc5881e801af308f14737dfdaf91bac8e1e7ee27240e9444840b74b71fab898b1ac1d833abfbb8d1c3151ea11d8a8d4af112c70e0afdc4a1adbeca5277b93bb2749db54f6c7e62988803e5dfa22a8ae58a780025b085145c6283c7b27a44b670a612752885b784ed91901e0734f6a84dc3f5df04f4c50d03aa175e4b323233a528d0ecb9796812e982754c081e8ee873e643c82aff4d00b34c20cc43f3ba8b73a82200be05d8b77e99e4f02f678d00398964c58236fe8170b2833ae49d99deef9dea15d8442b95fc3b61ec2d670ab3d23b3c662fe9f3e97969fc8b2bee2d9da1bddba4112419dc6fb20c6217cc93d7f117f74372b58821e122e589e3f56956246353dddab4472d8d84d31c65b060a13b55a050b0efcf3fd2557d7a435236b67b200e1b6528a01a82583edf75c1c9b902fe296aa5f3fd9bdfa56e52c9e9431b460a03c3d393ccb9569e575fd1172750916d7b797bb73fc5debfbdf2cd446ae0e77481e161d4986a87fcc912804003254c5a58b8f639ee82a4435eee1d0b1dc9cf09d8015a21e77fc547f282d62e06ca139d675372018208181801f2e22f24738182a7daf55d77c00777d8f90b5eb03a4b26547f8a114c9cf88d24c6aec6d0f4b35d88ea376483f5c8979bb96e2545a9a8342c1619b0738c0d60250bd31a6fd43df67cd4cb7755850d7b5db3f6dd3206e9436a7f7db97e249520dfef2e3b34d9e5a4f70d3a81398f6f2dbf39817b9bc26ed79ee7e094b539ac44fdd9262ffd94e8c31da7ac8a8c26c6af1167f431e5772aa597abfcf444d0db40ae3f066a0f5d940199d23029f4abde8f5954bd3d5bb6ae32a7a0367bf9e9f6b8b911e10e15b925a0f0489f6e6a8d664a18a809350065f3fea6172fc9ebf677bd8c0328b48b15dd67577ccb07c2319095703e11babfe4903376c6fe2a3cef8d638201252fd754291799e0e816c5cbad0c2a776ea660de670b5e8f1e74dafb3327037b19ab56277ba595efe47457e5b3cd8227e27149aa1b2ca8a58bdda3c73bfc149aba0de9b09399409e3e3eb1ba422fd0111b11a64ae84f069d7cc95dc556fa737440cefb28183522890c71848401b6fe83c0be79aa3778bb595c7fcea7e79b06c5215c84a92788d29bdd6c5eb68c4cf93ffbb6a071cda3d3333f901056a7b41f9c69cca06ea334dccadbd31598048d78c7683a31d62735343ad56cd2972c414f695f3c8082eb319ed2a9054b40995998f56489ddc22b3ac2d280f1b73b6556f251c61a0f4c90c03c65b4d709fc591f2e14f78642c0e8af9b0653d8e521b0dca43e1dd98acd92c59de7fabf22543ee3f5ef9ac9466abdd730d3f1dc85e36925bb93dc198537bb76d0a178e65d5325afdbbcd2c16c4707c7b109aa13abf3108222bd49a8beb16d74fcbe3fbfa67b724389c4f61f4dba1cba48f946c558c76f971f9c6d634144850f1efbe0302fa9952d2bb0c4a6a8ffae2cf24ca2e013f37c87ab849725e01ec6ebc461858ed43112bd27d26463367171b9d1c4a92d517cf2b6874a1090b227a629acca6c772f30b9917fcad07b36e7824fb5f3eb4c34234c632a6d7955e0fba0743562e6c4961f072bf6eb3e19310be1f0bd2eca3159f04c9056d14b4a5db21d71e432105aa565b7d445917e7b35c57d9830b9b6bc4654e99425888bd63f13efcb229c2b4dbf9904d3797acda74c7cd000d6827d3cb6f0995e4d8c21d1d7a66e97489ad6e0a65acc03c6c52c8a3522dc191d2b3b7e61bf432aaf4b150239c5adeb262cb3782208d67319f4808b63165c124af6a9a8f4f45969e0feedc7bb3570b62d4bb4a1bc481d2d4dcc3156e269947e9775659d1bc3855e2c6dd7bdc58dc3b1bde3028c218ae20449be12e3fcc06e7ab49d97035b98c4dec2a786246b95fa4e3f5025e35caf45aa94b772cfb15e01157e9d5eae2fdb2f437cfcb2a0a3295a33633e686291f5f9190a0791ad6560186f799ba714501aa6a4d02d5788f6c8017affad9d5961cbdad89d33996402e00ae33497f95fbc14121fcb95c613a2fade81750e5fead747ae611032d716dba4fc21b8011ad4d530c64b63b282893de75c10e80cbe5e4b764f401f7e24e2a4a69b104513f74f1aaa11baff373a75399d9af9aedd59d808d946e32f3197d44c9b005d116aa8b36405f5402fcb23d602c0224744da9c58fcccb50640184cca61a13bd6555ebd5e12c7453d16e0f6711e158d9abb41f4b487e4384904f6e803f080ca28dbde1a1ca7fb7092d6cd42ed8d372169be59123d716e8b8c2d0df5aae80a770df206043812fa768dd88a52d7d8c895c188e5e9e0dbcbb07ef6df8b735556a25e2829e368b47ce333e5121fcd375f6902936f4d4a7071ef1f8afc84248b8dfcd2faa83375f1008d0ed1d6e0f327e23b7ec864f540a44d5bfedfaa7c59f49000f71ce14fc92684421c3d3512160f8b12b03b61a2cdd55cdbb5c464f35f23247757d85612d1a1dabcc62b6f3699064ea25d0e202dc9c2bc38d322f8a1be0615b947c1ba823bb775aae6dbf5eacde9dd43096cdd7762b98d1ff50403556533efe1d1d586c524d803a1f1aa1ef9e42edbe16ee3ca8d2505e6dff99f4554347a1240aa21191524090e5409af3434f0c5c0ceed7e8704e8c9c6bf0424a1cfed2a6614898dd6ca50fca1a8f3afbb9824a9376ad6f20bc8fd75180c5505f784f22891f0931e176911733e8e1f6f4d22bcaafdb2e559c47939f80fa7f2bc5eb4387cda550266c96f34fa5e268f142062dc12233fd8602a28fe06b007457786ba27d2d16bd36a738864da72d2b12f89c67763634825e5d483f015ea6e4d1853eead18c550877aaabac5eb4d64e7c1d1773069bbf5aa24f8725ff30285b936ed4fd2a85a7064dc4d70c54fdb3da2f0273a49277bc2caa22767de2fa92631cac11aa693c5ddafffe73f73129e1b7e485a704efc3f2412ef8e1256cd3866293fc09aaa45d82a5a185fb2f0041312aab2a30ed32d67dedec58d1dad132854e60fc2c71c459429337ba47e74bcf106763c1bf912bce5162368a6e8edf3891ecfd522b872915335a55d9b8d953e6b6e35dcd058dc8197d663f48d64896f84079d03fdb3c466ca16c1b09d8bd20790a9938ed3c80edc719e764fbfefa088211eec6fae6a5725c1568a208ec016bddf3cb24a7fd907e70861703fc908d5d44af1e6cee0567fd6857aa569a322baf80fcb842ac1a2fb44d97fe69fbe50c51319fd755cbb73d3bddea8bf56cc116baa41f9e269592c05bab05b7c616b8b7e9af69978cf077d2b6ad92ff2ab49b342364d8035f1ba2d32cb7772d24f819b37c21db63124457312970f3776f2de0b23e004e955a0c61e3f1e738d46a292f48030d03b2e6d55a80751590ac37fd265ba2990655d55953f913f1284e4b2c59109484140cdebb0e136c6e0925f360e9e2b0ec136818e230cd4ac5d0d4ea45e0d62f6072ceacf68ad2bc7c9cb4923478dad774b5474c719dbb79dc39d88b1caed4f3746c591b2569395c3457390d682d23059962dbffbfbd556f463a1c35269eaba6b6414e8d4eb78a4215b56ad8f84fd07900e79a906d43ab276a27a63b0ad5bdf1fe7e8bc1dedabbdc5bdc709524413ff43373dbf13481c1bdcbf896e1953d16fe22352455d89926142971344242d42d08ddb9e31e7ab42b9d413c0f98dba58751a923980711ffcbe15741404c63e2ad33dc962972b9f4dcbadac52f5bd5d44422ad5bb749f8ac87cf0ebea7be49d38fdf097083fd78187ca238bfe722acbf90fce04db6a463cc6456936867f1206bc6e89812ad84474c7ceb00252fb60c70609d25db2377fa7b26aeb7cf64426897777726873230aa6185ba5ed541f58ba062d3b48139aa36fc39357bc1d374a7f8b3cc62997cc684a26af8da84c772825bc2df2ae6759f9c741305397e0d57472aefbb4393a51c0a7a59c6ae654296e60ee350c8ecf23c9988bfdf72729cf2e49459d72a79f174cc7ea418bbacb513223d5eea35cf4d87c1c34ac064741dcfc8dd1001d917be6ce2e4499b56c7af15ec717d12f6fa8ef0392ba4d9a3a8b91be9bc88b4cd814a8d72ef4f38bf7bac291884e9c0f27bd790af181bd11eb9da89aed4a2d90af809b6217eedf5029a9aee0bb4c123fe1e74f5f9d316a720156483e9beb556c24d36e339bbbb27d8bebbaf56672708dd9def8261ca6502ef7bab42991b2c389f13429d70bed2e9dafdf7dbe1fa53b69a1cb0b7e79b49099e83b3b65288dcb16e32bad26cd6e8641b24bd9d87920d28011598d1ad0b36cfaed674706b10f9bb699937715ec8f27755bd8f26e78801a47fccb166165c1f3ccb1c16370c706424642e4bb0ba7e697a88243a7cb1c07a3b7ff9d489f05cda49f32198461a805d6e3470b3fa1b13bdf72d46fc3a98a6de2ef8df148800205c2b3ac8dc3956615a894fe0c926cfe10e55a9ea4080d5c59893175f7ef253cbe4338379fcc5f85fcb48c91f0d5d0d4d610fef67f76240304fe752e804cb37029531e7ec16d039e049be4fafdc5c5fda60d1fe471c1ed72db8c9e1217fbb716196a25c5997468a586ee13645cb9435bdbe67b1ab9ed7dfc3eeb6cb1803d7ed6ff947cfe6332554f5def09d6fd9e9e17c9e478a46192f67cf48468fad55a7460bc5b66c84466fd550912595ec009d47d09a911f5b5cf8f6860d3c2e35912679e71f79f740772d8659ba2737066639a23ab4a837bc2a5fafd1dce2b745bb6b47b58c96c07ef4eb8b7bf93d3e84549fd7413144bbb6695638cb2c38a3981a3ee3607399df504fd00a676cf5eafa37001083eca7e38f4d51ee67c26972693d1cfd5739aef448acadb0c42b8b74cfe7e826c6354134eeaf7e7ed3d0a889f0de4ab6e4f9c9b9fd51c2bac6e3ae196899481047e864686eab38fcba7af57828a6b8e228a4b5591893b266292c9958b4f0ec00b780d2134dc467dae479fc36262f8099bbba30b1a899db318a6f365e1fab0d5c29349c9ad2e4a248a6a4a1fdb25a131f87f8e48368cb8db4ec1749b939876b0b25648570bd5ba628b08ec4489e125884a74ba260a4dd47d7b2fbe2da9591ee5e7177b2297d903556b4b79088cf814d1c9863da2c373c1d5c5663c735034b3a2b978e572a3d300dd940171f3b562d3cfaeb297c75a6ae9a3c91be9cac1e3bb30401fd25e755f1889ecb3c97c9466a5b9930fd510fdffbd1a472a6ef04a7176cc772c510d41b7108a1b14bdcfde10e6a7a81fabbcd3091c1d58ed08eb41906f4418996637168db9e890abfdce257ea1d9a7bda2d2bdcd045b24cafe05e22c28607b269be756a732fa16c2427e696fe079a6c9e1159b8ed20affafaddfcb52ec5b818a44cf773e230065a740c703367104ee1ebcae144ca221c5670d4b7ed8b8e533be30dbe88db3170c7322401d5bfd70ee8adcab6d88ba97d926cd2edaf7d83b266a2c0f14689180c867cb35e9dfc36b8f9eb998fc7a288cae0727630ebff397b8265959712812a03d97b4f4f980878c643cce4e2d95577dbf81ddb28a3be18f8907cbed558ec7cfeb65088bbaa13028f5f0ec3079726b789a44d224030e72be0b7431ee4e981ce5f9f37528305cc9e9f09d085d1413893504137f6cf804d4647a3975a39f3418d54c6a8063fce305e685b69befe84e430934b14468595f594e37bbcbbe4e1a725c05caa1d07be0a785543d80e1940484c295926af42ac69914ce382ce19634bbc5af92a8c7b0d4abdc3f49d88dd8edf83fbba1d8aa3646b160a0c9db841fb4615a40961225179476adc1912e9a45a3566f0843cb9fb8266ded0280b77f7b104da759a8ab8670c70875d74b679f76b623cfaad00e129dc7b71bf7bcbf3a3b208a5906db8ea263a7da98fdbb1763ce13792b9cb288aa6408822b9beb3c50b6c28dcc6d17a9eb14abcdbfa0141a6b573b81f0d9251ce76db52735f33272f8348c1cfd3ec0cc5e0ecfd0fb52b4c301f04b5c082ca81a0f9f56af6294cbc78888f0bff5485e65b229be8138ea86e9c83de48c599b583211862d58aabb608044404ccd545b44513ab7600878cc47ceee624b76da4212c1e04d1411b05580b87a40fd935143677342ce7085af18e5185f5e18c136db09f61ec61402e9147bb95a71f457897a6e4106c47bc9bacf0fc548b5f6d5833242e13b41ae87121ec8047df87c33837bbb8f92a2debaf539d28aeae54a606faec3868efd4de3776f649a72b0b8483ebf09692f7462ee4931cccdd2b95decce54624c4c66f850251297570a23efb4b63f653ef1f6bb4687a57de5a9d56c378340f8b4934b4368906f1e8b9406f93d78064ae8b484ba94a8392d401d8b3748cd2a11ff4e128f3f7c0a0a66c854a20c5050a0cc5e52aa85eab20f02e0c611ff775b57e0829c45b7d7136e7cda2473fb856eb4a99676788b764fe96f7b02f45acd28b805dbab8bd89a35e11a163d39c47894dde94eb9618bd67e4c7255e72760f4c5f3c5a44db81c2ee6b4f892dfa755f4e51b4eb7e0e4580c987436e8f6d72a3bcd9450ec93fae17fcb1db920425e2d2bc5639a013db676c68ba6f009baed3c6ce4072962b482c23071dd8aea98343dfa93bb63a5687f63cbe7275c1bc1c235ca3c0c9c8c5fd298497808ecf37db94f3f5836e8ca1ece68ec18b91c588ab6d3184fa7681d3711c39ae7bc2a7cb29075664dbab59a338b1806a1cbc6c4e0c12326c6e19b67de4254c71f306da1792a4fdd21e3843c5fbed8fc78c16d0c4f1ad805b6d572e0be04a935346203f459f3817dedcf2c6dabda058729ae8a565632f9bc876a8d75cc37595ad2228ae3c37689520fafeec791045c9923f167d58f5aaa8db5d6d79f6f2ac0538b972d61d59e08e5e0286c74b32a0f8b4956dde331858a0d5d81fc8aa785cf57c26c06e23dc957282528b7ec991d5b39de5d06b77640c64037265da6f5d4445891562cbd909f134546e1f12ae38e42e03986e3d5bbf04d15b48089a66e7830c981b8f1d698f7b545086562b3a137f709555bb6c8006811ac5af3526d07e2afe5492e22e4c7d44a4bd9c8058216ac913ca094750fe9eefaa1e47697c13edd090699d9409068b5e312742527251fe4e024dbedd128d67fc65d097744cc814334cf8917e80e676233622ef5b5174cfe223c40199608e51b551d8c3ef11b2c1be39d9be4033cdfb96aa87d846c38fa192c64531246d2e23607cb6f5733cee0e71adcd2f307023c7baa1022c40ebea72f0728bc96e66c80b54e05fc3913ad6b0178f671694c74eb4047daad5bdd14348b43c25b48b3d8bb6399dea65f99309d39c328860fe8b6b774d6a3cefadebad206bffc16989df7411b777f9c12629f6a0e6e64924fb140e42e37da94c0623abc6c4c777fbc9bdddf575d4664707a4831a102bfed60fc71dbf9e301554510dc028b7fefa503d0a05fdfdf523a41b338e20e1aada60e44854b58916da0df0b7185c3fae022b7403ec83ac5f1f035a4971db858c66b9bd26a15157297fc7c7a6599b6b86358bb8dcacbf3ecfe52d7ddbc4db7c2a718027a8a564488180c63872e3ef58ea41d9f7639af2744df306fbbdbed0218788da120216e8cb8d282486a2c1b4e442ddb26691ae14ac09152f33c24d83f73bc0f3d565ed91ae0d446bc844057049ebcf10f767d77ab5105a644854a7a1fc0f6931da7449a0f9e8d4778fa897db97cbea138e50a7d1e6263ac09c4b3281df2d733b62c62927ca8671c1b394225eccf26e5eee7e25245a903100fcbc346c779898abef92aad714bcbebb0f0a7b669fd9b246ec5d2901fef4e71ccb964ab54c599814ee1d379a26da21936ffd6a5a351d2bfadebf103e9849ee998f79b0fdf58caae597abe3406b60b57a9dadd8232dd44721ff555e1321594475533251a579d1292fc1465da790d44868ddcd808e5ed7ff937d4516704716a1cd54b7b2d8bff16ed740b9d699332fb2e91aca951767dfbfe7af66dd042afa83edd4397e3967704aab75f52c36582d6523ff115c8e3d97eb1625bb0cccb5aec8c98f52bf2f77d3957a8d9861d1a850cf6a327988346ffe4caafc10a95b17e1410dc74993ebc5a21cac1237415181f603b40c7209faf580039caa75e1ca04eeecfe6bdcf5ed7282ebd2c85738cd636a5bcfa2fd042608352f9534ad7839722877a9c33f6d1d63d52ff06869ae5f20ce39ab9e0ffaafb2271ce3f298764bb74ac8e4550a196d31378d5f1d0445f980f65995dc6d7cde110a07d5c01f54437dd24ad3d2c291392e2d6b2aa73d3f29fdf45184c724b296aa93145ab009bb877c5132c92b1c18795d8616a5ad064330d1ab9e892de1b8fc2a3ae067a3ba6b1e53bd3ce46dc88b879aec047a321d3a8331a650b3e2e2a72fbb61614c0d1bb7e91d2ac63ec7373c64992aef80860771ae03e5da56cb672aff4b3daa62ef0c4f4af956529c55f26ffbde0636b822e61594dde192bc99d6b5c92dc8590b8a57163dd49a95fe17aa73cca72b26d1710ffd6768c46ed26e9b9171d2e7bb0ceab56e098a4b76830a6a99d5e29d8a2f7445eb3313f82b7b79a25d7b361d74e4f28092e081daa3ad4ec7c1146f6d195c1e9d79a1823228ea52221f90c353794af647613f8f9e2aaf481b52b4661bae014253dd4325c834862ae6e993ee6e3b90d91511709ff10fb886bfcea0b5746193a3688059b86736a98700170294848580956badd35cffa2a853e5ae9b0c176ac2d8ca332171ecada126caa44f59997f00156529d283faaf1aa53c810b298b28f86bc5ddba8ccec89ba32da57f483de1fe01d9cd67a93997a99ff973864ca1b5d3d6cc4da80fd4d033b2b869033375e04778f66c3353afc1f933bf5dd3b6d716d407689196e3fb6558d8d9455527145bdf9999bd4beeb202ee1849e5c13d8b9e8a6e02a4d78080a36a3a8245f0bc1c2c796bd6f1d7f15e96a080ac7207dbdb27abfaab93508e3dc15c5e7d2eff426447646c9d0253ecd49ab856f1b64c46340575bb5cf67c71b05fe3690e75932e9dc5ec1aa94dc64f31590ae096d12345a6c5858f7cd392acfac3f930b4e574a129d3a16b27cd3c1daaefaecd2cce7d215aca9fa33e8a1ba51c54a8794e1c688f21f64daaef7629582a81efe646c15d19b966ebce0a55dc570b6b7619b88066452df17e18260b03dce232eff7e76d3dc3eaf15762d61f97a854c0fdfb9291be206cdff82d066a52120e38e90ed3c429c1c4078bba799425dee64d98b516170e36156361c03efdb364169f3e81b052c2399032629a14f58593c0d54078f3c05fc9e0e09e4bca59d3eaad297f7a7b9df6f3fadd9e6321c2d5d6fdf139c8c2e3f9c685d994f2422ab13466bdb6d459739a074c0a159239a3375dd9b224f40563fb343b896df5d81ca2d1d6d96d85adc904e1f7bf023a9081ea8fe0ee816ffffa5582c3e4d93345905304bc73790655ea5b565e7ab63e7e39fef815c87cecced8ae8a9ce3ae8ece757611fdf2dd159d2b714acb6733959a493a33dea1a5932703146e0137fa18d3f6652d9524ab09bb646b5b0b69bec8475e3610f7477221cb8092da5d418e76638ef7f4e225540c33588a2a57a9ee69390c0ba611c896179d8f82da4faa47169989e41a7a834efc9a28a80998db67e8fb02bf1b4f35f5b7c6724993f3a3ec59055f433ed3f633c9d195230705a7610122fdabbfa90e2634f174f227140490945cb65c191f4ee3a72eb61b8e9727e331dfa4ad47a49314e4da061d8aff8512e59c43f5d0028e1fd99da33f26d7177199ebcc3b2bcd9ca64efaff031e14112dfc77b779f556e7404b6e327e8205292a37c029c941178cc3a84aa9b306f408a6b75519a1c2049c7ca4e69212db7e688961da43400bbcfd8e9a09f03d39d384953ba12acd29e0bd464a9a1f3b414e6c63bc08f408f8438343b00a6124959a41d9ea5f1ebf7af46296d593495940dbeb0f7b256cd484878f0dd479de61847af11a7d82ba8dd5c1d72394d496ed160a404c478d39d30db5f4b0bf42525ff3181098330938cbfae2445072412d96b21d860e97372e76a5c7b66b19625fd1653b18336a928a3897ad1213e32a4ff89da3d13fc85a7b3683c14f85816b6d73d83391622a36362052046812a9752cb69302330d7ec31b3d63e90cf19e92711d04e71ef41d99153caacf33adbef7c776c45860447c773e7a2a2393091bfdf7e568e78379857f5ed2d997b86a3fde4547e62285b8b05bdc772baff587a83b66e699f12f527d4a9b4a20e43b7527215f298976f2613310511a3e8669853a6b8ea10a65d6561a8edc44d1c05d893cd14bd78d210eba91220e400565d96a63722675f5170394e063655e51f5c6e5a9925cb10e76959e254bfbfb76eaba9585744aca14c6e5e9ca77ced4f004530dc0c74314b82724d0ca94f4173ab3052fd32c2ec89d3a9fb41854fb5eb96742b9cfaf5ebeec03d958b27cbf95394e667e3159215f1a1d76c035dad57d4bf292d66449b904a2fff862605aabff622a83acfbb0ccc512553127dd8632e029b2d4eef9c9e33ce0c2df931d00d6354a59da71a768e92f9e786245c4368c696bce7525754085fc429fd64af923fc043640d9b9a6441a2607cee7591007310a2db708c9cbf144527d4b3a9a28e42f45f20a52bc7c48b9dfb5f9b198e5912c7f3c2e4d00e33d984baa865b1764cc92cadb9f287ac3e94dfdf8cdc89acdea672612a2f9520e999520791db01a9d6b8959541e46167cfc1e6c42136a74a2e0b6318f2764e39ac6658f57b758fc3b03bda70db664f06dc742ca079420248adfb254093d1fe57d16b0128b7590eb1916feecc6d8b448801a5335b6bc3e05a1c2856859e80e8fccbea72fef18eafd58c52f6bdd6bbb780e50c5ed126c7290ea3d080f4f61a45cda0df24f1d283e67f5f1143faa8fccf512bb13522c0eb7d7f4947c00419317ea41354dd156f605e43a842969a1086e0d5360717dd0ba9a2f20588064da0096fe9c77d6798867febee866c96e0cdd81c5b5064706d2e73b73ac89fe43b5e128ea47a0658d8c3dffec838157d44fa224c20e1e2095feb751ce7381c62855e567c631af80ad69b588b489e574632b04d6712629bcd2655f2742bee2f04548aee9c0ee65ef59e9f79470e823ad22cfe95462d0db9df9406c16d07af7d36c457d3df4d23eeed75d5d8a6daaa1e88c5f65818deb917047e721172556d06150d68c80ca3312f565eb70989e8948dd19d88e33d9f60f35861b975bcd180a5fae2e86a681ca79e53d6412cae6ed553f4fa25a52e75e4cbe55af7eda0e096b8ec36e715613989180941e3200c9a68f90faf12708328185d522f5c8e5e12aeee49203971b576ca2653ece2738908996ed8ee5525469f1ee5455ecfab07027db95fb08efc3cf63fb54c77f71214c903e875888dd064e6074faf23ce959c3edb9548d8abec20f1d2466adfd3c435b1caf3093183a636b7aab1328b038cab028788ffc1c94456ca8faf8219ee1a0dedf6abffcc692d173d3dd78c1668b737ad5fd77e2ef727d6c05566940bb0dad88513e6020a0c2e1f6cf91ffa4ae90b88ea1ae8911e3769a23b5bb1fd52eb321fabd94f95a4c562ac5528d3c38b6b0a17858933c0da7fde6b66dddf9bdbb6da5ce44c5b36d599a6b38a90eb9daca0ce96e63c716534d2a3aeefa74bb4345f8d6d56e6eb86f4f30c0f0dc832ed2e7f6a7b5d4610e7c1114cba620737fdefdbd83b9a64c820cbf08410de233bec578b7a79fd685bcad561179a356fbcb04ce8afeb9bbc1006a13f55ee97e7c38b7e6a304a50c95e993608ac596882783341718ed256038d7d2b0e0785a15ff0d6cf3f3f22e59af10afe4e45f933cb549c4dc7fc4cfffbe064efe7856a5238fe0005e3210c9d8673f342f6cf3933df9f16e679227925a15efa0abada57931fa17b2147dba530a7fabfbb9a7c0be3fe355df477a067136671aabcfba63a4fc15479f456555fb6026cdf64532fe244bc1c20836e0dd73a7a5a5eada56aca68057e65b6fc8ab5439ee5ab7d98f7769157f7c794af477426970e546395346fa51ac1874ec5a9f795a623efdd32263af065db65b3256ec63a241fe87d384d07dce97fba704109e7b98550534d26c7729e925a2f0824965f187bf5036a00ea9e31f45b80506b7ef3c00b936535bd8b16687aec8164f05f12977d6b5b9eb634a713159d4cfe9422319485f7ed36bbfe0ce5d5ca65b124daee9b9a2079111062e4555a10e7c7885bdff1762ae4c6c4570d3fac7e4a09ce6ce81d1c14ad975f6730b878438755b1b4e2061bb40629a06fef77ff7e18662bf4e352679682d788cadab23e9c6177e8f1673abae2d7ffd509d67b022a7825dd53e16935dee9ac4f23ac82362baae2912d7d37cff2de329c55950c05460e02832b64c28986d0833490628703fe888a9200ee6acf54299dd6f3349c693b51cd7a82c198f0c9f7d6ca8efe7d36be2f877ae33957b88892ff75bc653749f6e6e8155513dcac62c786b650e32145d2fe42bc498b6a3786e146ee974f41e5872523e2637921c002df0ef3c5fd374a5482ef8f15a104801eeff777d3fc266ed2cb2ff4cc24e4b566e51b196ab7fc6abb7b494ab6f2ba36940d98ecd66c82fecf4e56760f4827e837bad4097aa25ee8de45318ae949cce75385eab77f318e04ca0d3308c83af8f9936f6abacf35035034520bd8647faae38b7f47f4260830f8562cb4fea868697f531833b4e5c14b4a1094a715822b2f54e58fccf9ff7260c0c2ffe50f3ab68f1692a60427794dfe344fac4ec74e5a209700a2358f8dc33ec62b69ccf05b8b9457a48a0f522df5732dd09083fd16902205be8a4111029282b433bd5f034747f440c9311db9d6e3c1d081525226956478ebc092a41535361b23d8b073706306a9ba66b8e917e5650922140de5a42e60eb58ae69378c896c8f73896917bab6eff083a4de039fc19737fb23b2cd58022464847bf7557ba88dee1d13e120e560a204480ef90cb97889014d0755f7cd9b9859f6e2d4d9dc35c04d27ce6af283b986754a4fd975438a9b14073b335a3c54e45b6c61a50d014b32e9a52a81b3955dba4d29923f187df23f6dc49d23d6502445c7e094917554e0fdbe5f1dca98f3a3f189911f41f708db28e396773c04ac6a41beadca9e3f4d906882f57f37f67d34890a73108d1e6b70e276f82e1b02988e2f85243ab6b9d053ac46397f4aa0c7103e935f2004f212bf224bd03e07b3b17eb180e6ce15dc1cd4e4b9fba147457329f7ef05d12853a6689da2dd5ad45b7077f9fbade05bf88476c9dc93405821ac215c7aca7a42c3ab6a12bcf90592d75d022a80c84e98a18f42e7f2db4c6e7d384c7e3d84dd84f9881ee750d735fbe69f4206d7c8f729d782a44a88ea6005cf382eb8391672e5614c878df01992535947c452fa71297ede85af61bfe11ee903021c46a40c6c7b5f3f77bbcc031f7570df8895d9e245e45aba0f8f2bb728e0f41aae8004ae740d0458cc08afe998399484bfa96269c67f59ada243195220adaa39163bf279d1c1beeae2a426cd3edbfc45c35a32b8f980cb0bd8e277e5c7553b4052845ed25ab7b0ce2cf67fab9b968d98d41a44b898b2e3890576bf699d72647ddb3c1387b622cba307719d4caea690c471dab03e5cfa7a6d1ea658d94d562d5617c15e91b1a2fdcf1dd24181441e5c002b15b34c3564e557b519836b3b9becb1b86847c90a5083a0fb22043af79e01568d25480b825f7bfb164157750e1669328e305bc012f72a374d1d2c0dff5fb8bf85d5807a4a4e7d8a5bfe8cf0901ef550defb8b19d42791d5af1a2e5c734cd701133ee660dde8ccabed78da12fa01338a0763e946acec6471d34c3040cade201b0599</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码，查看文章</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>技术</category>
        <category>Lua</category>
      </categories>
      <tags>
        <tag>Dice</tag>
      </tags>
  </entry>
  <entry>
    <title>yaml2table yaml转lua table</title>
    <url>/2022/08/04/yaml2table/</url>
    <content><![CDATA[<div class="note success"><p><strong>yaml2table</strong><br>简单实现读取yaml转为table,</p>
<blockquote>
<p>暂时不支持读取注释.</p>
</blockquote>
</div>


<h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">-------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">-- tinyyaml - YAML subset parser</span></span><br><span class="line"><span class="comment">-------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="built_in">table</span> = <span class="built_in">table</span></span><br><span class="line"><span class="keyword">local</span> <span class="built_in">string</span> = <span class="built_in">string</span></span><br><span class="line"><span class="keyword">local</span> schar = <span class="built_in">string</span>.<span class="built_in">char</span></span><br><span class="line"><span class="keyword">local</span> ssub, <span class="built_in">gsub</span> = <span class="built_in">string</span>.<span class="built_in">sub</span>, <span class="built_in">string</span>.<span class="built_in">gsub</span></span><br><span class="line"><span class="keyword">local</span> sfind, smatch = <span class="built_in">string</span>.<span class="built_in">find</span>, <span class="built_in">string</span>.<span class="built_in">match</span></span><br><span class="line"><span class="keyword">local</span> tinsert, tremove = <span class="built_in">table</span>.<span class="built_in">insert</span>, <span class="built_in">table</span>.<span class="built_in">remove</span></span><br><span class="line"><span class="keyword">local</span> <span class="built_in">setmetatable</span> = <span class="built_in">setmetatable</span></span><br><span class="line"><span class="keyword">local</span> <span class="built_in">pairs</span> = <span class="built_in">pairs</span></span><br><span class="line"><span class="keyword">local</span> <span class="built_in">type</span> = <span class="built_in">type</span></span><br><span class="line"><span class="keyword">local</span> <span class="built_in">tonumber</span> = <span class="built_in">tonumber</span></span><br><span class="line"><span class="keyword">local</span> <span class="built_in">math</span> = <span class="built_in">math</span></span><br><span class="line"><span class="keyword">local</span> <span class="built_in">getmetatable</span> = <span class="built_in">getmetatable</span></span><br><span class="line"><span class="keyword">local</span> <span class="built_in">error</span> = <span class="built_in">error</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> UNESCAPES = &#123;</span><br><span class="line">  [<span class="string">&#x27;0&#x27;</span>] = <span class="string">&quot;\x00&quot;</span>, z = <span class="string">&quot;\x00&quot;</span>, N    = <span class="string">&quot;\x85&quot;</span>,</span><br><span class="line">  a = <span class="string">&quot;\x07&quot;</span>,     b = <span class="string">&quot;\x08&quot;</span>, t    = <span class="string">&quot;\x09&quot;</span>,</span><br><span class="line">  n = <span class="string">&quot;\x0a&quot;</span>,     v = <span class="string">&quot;\x0b&quot;</span>, f    = <span class="string">&quot;\x0c&quot;</span>,</span><br><span class="line">  r = <span class="string">&quot;\x0d&quot;</span>,     e = <span class="string">&quot;\x1b&quot;</span>, [<span class="string">&#x27;\\&#x27;</span>] = <span class="string">&#x27;\\&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">-------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">-- utils</span></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">select</span><span class="params">(list, pred)</span></span></span><br><span class="line">  <span class="keyword">local</span> selected = &#123;&#125;</span><br><span class="line">  <span class="keyword">for</span> i = <span class="number">0</span>, #list <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">local</span> v = list[i]</span><br><span class="line">    <span class="keyword">if</span> v <span class="keyword">and</span> pred(v, i) <span class="keyword">then</span></span><br><span class="line">      tinsert(selected, v)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">return</span> selected</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">startswith</span><span class="params">(haystack, needle)</span></span></span><br><span class="line">  <span class="keyword">return</span> ssub(haystack, <span class="number">1</span>, #needle) == needle</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">ltrim</span><span class="params">(str)</span></span></span><br><span class="line">  <span class="keyword">return</span> smatch(str, <span class="string">&quot;^%s*(.-)$&quot;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">rtrim</span><span class="params">(str)</span></span></span><br><span class="line">  <span class="keyword">return</span> smatch(str, <span class="string">&quot;^(.-)%s*$&quot;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">-- Implementation.</span></span><br><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="keyword">local</span> class = &#123;__meta=&#123;&#125;&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">class.__meta.__call</span><span class="params">(cls, ...)</span></span></span><br><span class="line">  <span class="keyword">local</span> <span class="built_in">self</span> = <span class="built_in">setmetatable</span>(&#123;&#125;, cls)</span><br><span class="line">  <span class="keyword">if</span> cls.__init <span class="keyword">then</span></span><br><span class="line">    cls.__init(<span class="built_in">self</span>, ...)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">self</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">class.def</span><span class="params">(base, typ, cls)</span></span></span><br><span class="line">  base = base <span class="keyword">or</span> class</span><br><span class="line">  <span class="keyword">local</span> mt = &#123;<span class="built_in">__metatable</span>=base, <span class="built_in">__index</span>=base&#125;</span><br><span class="line">  <span class="keyword">for</span> k, v <span class="keyword">in</span> <span class="built_in">pairs</span>(base.__meta) <span class="keyword">do</span> mt[k] = v <span class="keyword">end</span></span><br><span class="line">  cls = <span class="built_in">setmetatable</span>(cls <span class="keyword">or</span> &#123;&#125;, mt)</span><br><span class="line">  cls.<span class="built_in">__index</span> = cls</span><br><span class="line">  cls.<span class="built_in">__metatable</span> = cls</span><br><span class="line">  cls.__type = typ</span><br><span class="line">  cls.__meta = mt</span><br><span class="line">  <span class="keyword">return</span> cls</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> types = &#123;</span><br><span class="line">  null = class:def(<span class="string">&#x27;null&#x27;</span>),</span><br><span class="line">  map = class:def(<span class="string">&#x27;map&#x27;</span>),</span><br><span class="line">  omap = class:def(<span class="string">&#x27;omap&#x27;</span>),</span><br><span class="line">  <span class="built_in">pairs</span> = class:def(<span class="string">&#x27;pairs&#x27;</span>),</span><br><span class="line">  set = class:def(<span class="string">&#x27;set&#x27;</span>),</span><br><span class="line">  seq = class:def(<span class="string">&#x27;seq&#x27;</span>),</span><br><span class="line">  timestamp = class:def(<span class="string">&#x27;timestamp&#x27;</span>),</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> Null = types.null</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Null.__tostring</span><span class="params">()</span></span> <span class="keyword">return</span> <span class="string">&#x27;yaml.null&#x27;</span> <span class="keyword">end</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Null.isnull</span><span class="params">(v)</span></span></span><br><span class="line">  <span class="keyword">if</span> v == <span class="literal">nil</span> <span class="keyword">then</span> <span class="keyword">return</span> <span class="literal">true</span> <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">type</span>(v) == <span class="string">&#x27;table&#x27;</span> <span class="keyword">and</span> <span class="built_in">getmetatable</span>(v) == Null <span class="keyword">then</span> <span class="keyword">return</span> <span class="literal">true</span> <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">local</span> null = Null()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">types.timestamp:__init</span><span class="params">(y, m, d, h, i, s, f, z)</span></span></span><br><span class="line">  <span class="built_in">self</span>.year = <span class="built_in">tonumber</span>(y)</span><br><span class="line">  <span class="built_in">self</span>.month = <span class="built_in">tonumber</span>(m)</span><br><span class="line">  <span class="built_in">self</span>.day = <span class="built_in">tonumber</span>(d)</span><br><span class="line">  <span class="built_in">self</span>.hour = <span class="built_in">tonumber</span>(h <span class="keyword">or</span> <span class="number">0</span>)</span><br><span class="line">  <span class="built_in">self</span>.minute = <span class="built_in">tonumber</span>(i <span class="keyword">or</span> <span class="number">0</span>)</span><br><span class="line">  <span class="built_in">self</span>.second = <span class="built_in">tonumber</span>(s <span class="keyword">or</span> <span class="number">0</span>)</span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">type</span>(f) == <span class="string">&#x27;string&#x27;</span> <span class="keyword">and</span> sfind(f, <span class="string">&#x27;^%d+$&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">self</span>.fraction = <span class="built_in">tonumber</span>(f) * <span class="built_in">math</span>.<span class="built_in">pow</span>(<span class="number">10</span>, <span class="number">3</span> - #f)</span><br><span class="line">  <span class="keyword">elseif</span> f <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">self</span>.fraction = f</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">self</span>.fraction = <span class="number">0</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="built_in">self</span>.timezone = z</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">types.timestamp:__tostring</span><span class="params">()</span></span></span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">string</span>.<span class="built_in">format</span>(</span><br><span class="line">    <span class="string">&#x27;%04d-%02d-%02dT%02d:%02d:%02d.%03d%s&#x27;</span>,</span><br><span class="line">    <span class="built_in">self</span>.year, <span class="built_in">self</span>.month, <span class="built_in">self</span>.day,</span><br><span class="line">    <span class="built_in">self</span>.hour, <span class="built_in">self</span>.minute, <span class="built_in">self</span>.second, <span class="built_in">self</span>.fraction,</span><br><span class="line">    <span class="built_in">self</span>:gettz())</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">types.timestamp:gettz</span><span class="params">()</span></span></span><br><span class="line">  <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">self</span>.timezone <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">self</span>.timezone == <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Z&#x27;</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">local</span> sign = <span class="built_in">self</span>.timezone &gt; <span class="number">0</span></span><br><span class="line">  <span class="keyword">local</span> z = sign <span class="keyword">and</span> <span class="built_in">self</span>.timezone <span class="keyword">or</span> -<span class="built_in">self</span>.timezone</span><br><span class="line">  <span class="keyword">local</span> zh = <span class="built_in">math</span>.<span class="built_in">floor</span>(z)</span><br><span class="line">  <span class="keyword">local</span> zi = (z - zh) * <span class="number">60</span></span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">string</span>.<span class="built_in">format</span>(</span><br><span class="line">    <span class="string">&#x27;%s%02d:%02d&#x27;</span>, sign <span class="keyword">and</span> <span class="string">&#x27;+&#x27;</span> <span class="keyword">or</span> <span class="string">&#x27;-&#x27;</span>, zh, zi)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">countindent</span><span class="params">(line)</span></span></span><br><span class="line">  <span class="keyword">local</span> _, j = sfind(line, <span class="string">&#x27;^%s+&#x27;</span>)</span><br><span class="line">  <span class="keyword">if</span> <span class="keyword">not</span> j <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>, line</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">return</span> j, ssub(line, j+<span class="number">1</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">parsestring</span><span class="params">(line, stopper)</span></span></span><br><span class="line">  stopper = stopper <span class="keyword">or</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="keyword">local</span> q = ssub(line, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">  <span class="keyword">if</span> q == <span class="string">&#x27; &#x27;</span> <span class="keyword">or</span> q == <span class="string">&#x27;\t&#x27;</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> parsestring(ssub(line, <span class="number">2</span>))</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">if</span> q == <span class="string">&quot;&#x27;&quot;</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">local</span> i = sfind(line, <span class="string">&quot;&#x27;&quot;</span>, <span class="number">2</span>, <span class="literal">true</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> i <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nil</span>, line</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> ssub(line, <span class="number">2</span>, i<span class="number">-1</span>), ssub(line, i+<span class="number">1</span>)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">if</span> q == <span class="string">&#x27;&quot;&#x27;</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">local</span> i, buf = <span class="number">2</span>, <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">while</span> i &lt; #line <span class="keyword">do</span></span><br><span class="line">      <span class="keyword">local</span> c = ssub(line, i, i)</span><br><span class="line">      <span class="keyword">if</span> c == <span class="string">&#x27;\\&#x27;</span> <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">local</span> n = ssub(line, i+<span class="number">1</span>, i+<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> UNESCAPES[n] ~= <span class="literal">nil</span> <span class="keyword">then</span></span><br><span class="line">          buf = buf..UNESCAPES[n]</span><br><span class="line">        <span class="keyword">elseif</span> n == <span class="string">&#x27;x&#x27;</span> <span class="keyword">then</span></span><br><span class="line">          <span class="keyword">local</span> h = ssub(i+<span class="number">2</span>,i+<span class="number">3</span>)</span><br><span class="line">          <span class="keyword">if</span> sfind(h, <span class="string">&#x27;^[0-9a-fA-F]$&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">            buf = buf..schar(<span class="built_in">tonumber</span>(h, <span class="number">16</span>))</span><br><span class="line">            i = i + <span class="number">2</span></span><br><span class="line">          <span class="keyword">else</span></span><br><span class="line">            buf = buf..<span class="string">&#x27;x&#x27;</span></span><br><span class="line">          <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          buf = buf..n</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        i = i + <span class="number">1</span></span><br><span class="line">      <span class="keyword">elseif</span> c == q <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        buf = buf..c</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      i = i + <span class="number">1</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> buf, ssub(line, i+<span class="number">1</span>)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">if</span> q == <span class="string">&#x27;&#123;&#x27;</span> <span class="keyword">or</span> q == <span class="string">&#x27;[&#x27;</span> <span class="keyword">then</span>  <span class="comment">-- flow style</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span>, line</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">if</span> q == <span class="string">&#x27;|&#x27;</span> <span class="keyword">or</span> q == <span class="string">&#x27;&gt;&#x27;</span> <span class="keyword">then</span>  <span class="comment">-- block</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span>, line</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">if</span> q == <span class="string">&#x27;-&#x27;</span> <span class="keyword">or</span> q == <span class="string">&#x27;:&#x27;</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">if</span> ssub(line, <span class="number">2</span>, <span class="number">2</span>) == <span class="string">&#x27; &#x27;</span> <span class="keyword">or</span> #line == <span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nil</span>, line</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">local</span> buf = <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="keyword">while</span> #line &gt; <span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">local</span> c = ssub(line, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">if</span> sfind(stopper, c, <span class="number">1</span>, <span class="literal">true</span>) <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">elseif</span> c == <span class="string">&#x27;:&#x27;</span> <span class="keyword">and</span> (ssub(line, <span class="number">2</span>, <span class="number">2</span>) == <span class="string">&#x27; &#x27;</span> <span class="keyword">or</span> #line == <span class="number">1</span>) <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">elseif</span> c == <span class="string">&#x27;#&#x27;</span> <span class="keyword">and</span> (ssub(buf, #buf, #buf) == <span class="string">&#x27; &#x27;</span>) <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      buf = buf..c</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    line = ssub(line, <span class="number">2</span>)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">return</span> rtrim(buf), line</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">isemptyline</span><span class="params">(line)</span></span></span><br><span class="line">  <span class="keyword">return</span> line == <span class="string">&#x27;&#x27;</span> <span class="keyword">or</span> sfind(line, <span class="string">&#x27;^%s*$&#x27;</span>) <span class="keyword">or</span> sfind(line, <span class="string">&#x27;^%s*#&#x27;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">equalsline</span><span class="params">(line, needle)</span></span></span><br><span class="line">  <span class="keyword">return</span> startswith(line, needle) <span class="keyword">and</span> isemptyline(ssub(line, #needle+<span class="number">1</span>))</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">checkdupekey</span><span class="params">(map, key)</span></span></span><br><span class="line">  <span class="keyword">if</span> map[key] ~= <span class="literal">nil</span> <span class="keyword">then</span></span><br><span class="line">    <span class="comment">-- print(&quot;found a duplicate key &#x27;&quot;..key..&quot;&#x27; in line: &quot;..line)</span></span><br><span class="line">    <span class="keyword">local</span> suffix = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> map[key..<span class="string">&#x27;_&#x27;</span>..suffix] <span class="keyword">do</span></span><br><span class="line">      suffix = suffix + <span class="number">1</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    key = key ..<span class="string">&#x27;_&#x27;</span>..suffix</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">return</span> key</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">parseflowstyle</span><span class="params">(line, lines)</span></span></span><br><span class="line">  <span class="keyword">local</span> stack = &#123;&#125;</span><br><span class="line">  <span class="keyword">while</span> <span class="literal">true</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> #line == <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">if</span> #<span class="built_in">lines</span> == <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        line = tremove(<span class="built_in">lines</span>, <span class="number">1</span>)</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">local</span> c = ssub(line, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">if</span> c == <span class="string">&#x27;#&#x27;</span> <span class="keyword">then</span></span><br><span class="line">      line = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">elseif</span> c == <span class="string">&#x27; &#x27;</span> <span class="keyword">or</span> c == <span class="string">&#x27;\t&#x27;</span> <span class="keyword">or</span> c == <span class="string">&#x27;\r&#x27;</span> <span class="keyword">or</span> c == <span class="string">&#x27;\n&#x27;</span> <span class="keyword">then</span></span><br><span class="line">      line = ssub(line, <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">elseif</span> c == <span class="string">&#x27;&#123;&#x27;</span> <span class="keyword">or</span> c == <span class="string">&#x27;[&#x27;</span> <span class="keyword">then</span></span><br><span class="line">      tinsert(stack, &#123;v=&#123;&#125;,t=c&#125;)</span><br><span class="line">      line = ssub(line, <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">elseif</span> c == <span class="string">&#x27;:&#x27;</span> <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">local</span> s = tremove(stack)</span><br><span class="line">      tinsert(stack, &#123;v=s.v, t=<span class="string">&#x27;:&#x27;</span>&#125;)</span><br><span class="line">      line = ssub(line, <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">elseif</span> c == <span class="string">&#x27;,&#x27;</span> <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">local</span> value = tremove(stack)</span><br><span class="line">      <span class="keyword">if</span> value.t == <span class="string">&#x27;:&#x27;</span> <span class="keyword">or</span> value.t == <span class="string">&#x27;&#123;&#x27;</span> <span class="keyword">or</span> value.t == <span class="string">&#x27;[&#x27;</span> <span class="keyword">then</span> <span class="built_in">error</span>() <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">if</span> stack[#stack].t == <span class="string">&#x27;:&#x27;</span> <span class="keyword">then</span></span><br><span class="line">        <span class="comment">-- map</span></span><br><span class="line">        <span class="keyword">local</span> key = tremove(stack)</span><br><span class="line">        key.v = checkdupekey(stack[#stack].v, key.v)</span><br><span class="line">        stack[#stack].v[key.v] = value.v</span><br><span class="line">      <span class="keyword">elseif</span> stack[#stack].t == <span class="string">&#x27;&#123;&#x27;</span> <span class="keyword">then</span></span><br><span class="line">        <span class="comment">-- set</span></span><br><span class="line">        stack[#stack].v[value.v] = <span class="literal">true</span></span><br><span class="line">      <span class="keyword">elseif</span> stack[#stack].t == <span class="string">&#x27;[&#x27;</span> <span class="keyword">then</span></span><br><span class="line">        <span class="comment">-- seq</span></span><br><span class="line">        tinsert(stack[#stack].v, value.v)</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      line = ssub(line, <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">elseif</span> c == <span class="string">&#x27;&#125;&#x27;</span> <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">if</span> stack[#stack].t == <span class="string">&#x27;&#123;&#x27;</span> <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">if</span> #stack == <span class="number">1</span> <span class="keyword">then</span> <span class="keyword">break</span> <span class="keyword">end</span></span><br><span class="line">        stack[#stack].t = <span class="string">&#x27;&#125;&#x27;</span></span><br><span class="line">        line = ssub(line, <span class="number">2</span>)</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        line = <span class="string">&#x27;,&#x27;</span>..line</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">elseif</span> c == <span class="string">&#x27;]&#x27;</span> <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">if</span> stack[#stack].t == <span class="string">&#x27;[&#x27;</span> <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">if</span> #stack == <span class="number">1</span> <span class="keyword">then</span> <span class="keyword">break</span> <span class="keyword">end</span></span><br><span class="line">        stack[#stack].t = <span class="string">&#x27;]&#x27;</span></span><br><span class="line">        line = ssub(line, <span class="number">2</span>)</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        line = <span class="string">&#x27;,&#x27;</span>..line</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="keyword">local</span> s, rest = parsestring(line, <span class="string">&#x27;,&#123;&#125;[]&#x27;</span>)</span><br><span class="line">      <span class="keyword">if</span> <span class="keyword">not</span> s <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">error</span>(<span class="string">&#x27;invalid flowstyle line: &#x27;</span>..line)</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      tinsert(stack, &#123;v=s, t=<span class="string">&#x27;s&#x27;</span>&#125;)</span><br><span class="line">      line = rest</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">return</span> stack[<span class="number">1</span>].v, line</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">parseblockstylestring</span><span class="params">(line, lines, indent)</span></span></span><br><span class="line">  <span class="keyword">if</span> #<span class="built_in">lines</span> == <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">error</span>(<span class="string">&quot;failed to find multi-line scalar content&quot;</span>)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">local</span> s = &#123;&#125;</span><br><span class="line">  <span class="keyword">local</span> firstindent = <span class="number">-1</span></span><br><span class="line">  <span class="keyword">local</span> endline = <span class="number">-1</span></span><br><span class="line">  <span class="keyword">for</span> i = <span class="number">1</span>, #<span class="built_in">lines</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">local</span> ln = <span class="built_in">lines</span>[i]</span><br><span class="line">    <span class="keyword">local</span> idt = countindent(ln)</span><br><span class="line">    <span class="keyword">if</span> idt &lt;= indent <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">if</span> ln == <span class="string">&#x27;&#x27;</span> <span class="keyword">then</span></span><br><span class="line">      tinsert(s, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="keyword">if</span> firstindent == <span class="number">-1</span> <span class="keyword">then</span></span><br><span class="line">        firstindent = idt</span><br><span class="line">      <span class="keyword">elseif</span> idt &lt; firstindent <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      tinsert(s, ssub(ln, firstindent + <span class="number">1</span>))</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    endline = i</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">local</span> striptrailing = <span class="literal">true</span></span><br><span class="line">  <span class="keyword">local</span> sep = <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">  <span class="keyword">local</span> newlineatend = <span class="literal">true</span></span><br><span class="line">  <span class="keyword">if</span> line == <span class="string">&#x27;|&#x27;</span> <span class="keyword">then</span></span><br><span class="line">    striptrailing = <span class="literal">true</span></span><br><span class="line">    sep = <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">    newlineatend = <span class="literal">true</span></span><br><span class="line">  <span class="keyword">elseif</span> line == <span class="string">&#x27;|+&#x27;</span> <span class="keyword">then</span></span><br><span class="line">    striptrailing = <span class="literal">false</span></span><br><span class="line">    sep = <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">    newlineatend = <span class="literal">true</span></span><br><span class="line">  <span class="keyword">elseif</span> line == <span class="string">&#x27;|-&#x27;</span> <span class="keyword">then</span></span><br><span class="line">    striptrailing = <span class="literal">true</span></span><br><span class="line">    sep = <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">    newlineatend = <span class="literal">false</span></span><br><span class="line">  <span class="keyword">elseif</span> line == <span class="string">&#x27;&gt;&#x27;</span> <span class="keyword">then</span></span><br><span class="line">    striptrailing = <span class="literal">true</span></span><br><span class="line">    sep = <span class="string">&#x27; &#x27;</span></span><br><span class="line">    newlineatend = <span class="literal">true</span></span><br><span class="line">  <span class="keyword">elseif</span> line == <span class="string">&#x27;&gt;+&#x27;</span> <span class="keyword">then</span></span><br><span class="line">    striptrailing = <span class="literal">false</span></span><br><span class="line">    sep = <span class="string">&#x27; &#x27;</span></span><br><span class="line">    newlineatend = <span class="literal">true</span></span><br><span class="line">  <span class="keyword">elseif</span> line == <span class="string">&#x27;&gt;-&#x27;</span> <span class="keyword">then</span></span><br><span class="line">    striptrailing = <span class="literal">true</span></span><br><span class="line">    sep = <span class="string">&#x27; &#x27;</span></span><br><span class="line">    newlineatend = <span class="literal">false</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">error</span>(<span class="string">&#x27;invalid blockstyle string:&#x27;</span>..line)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">local</span> eonl = <span class="number">0</span></span><br><span class="line">  <span class="keyword">for</span> i = #s, <span class="number">1</span>, <span class="number">-1</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> s[i] == <span class="string">&#x27;&#x27;</span> <span class="keyword">then</span></span><br><span class="line">      tremove(s, i)</span><br><span class="line">      eonl = eonl + <span class="number">1</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">if</span> striptrailing <span class="keyword">then</span></span><br><span class="line">    eonl = <span class="number">0</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">if</span> newlineatend <span class="keyword">then</span></span><br><span class="line">    eonl = eonl + <span class="number">1</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">for</span> i = endline, <span class="number">1</span>, <span class="number">-1</span> <span class="keyword">do</span></span><br><span class="line">    tremove(<span class="built_in">lines</span>, i)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">table</span>.<span class="built_in">concat</span>(s, sep)..<span class="built_in">string</span>.<span class="built_in">rep</span>(<span class="string">&#x27;\n&#x27;</span>, eonl)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">parsetimestamp</span><span class="params">(line)</span></span></span><br><span class="line">  <span class="keyword">local</span> _, p1, y, m, d = sfind(line, <span class="string">&#x27;^(%d%d%d%d)%-(%d%d)%-(%d%d)&#x27;</span>)</span><br><span class="line">  <span class="keyword">if</span> <span class="keyword">not</span> p1 <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span>, line</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">if</span> p1 == #line <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> types.timestamp(y, m, d), <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">local</span> _, p2, h, i, s = sfind(line, <span class="string">&#x27;^[Tt ](%d+):(%d+):(%d+)&#x27;</span>, p1+<span class="number">1</span>)</span><br><span class="line">  <span class="keyword">if</span> <span class="keyword">not</span> p2 <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> types.timestamp(y, m, d), ssub(line, p1+<span class="number">1</span>)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">if</span> p2 == #line <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> types.timestamp(y, m, d, h, i, s), <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">local</span> _, p3, f = sfind(line, <span class="string">&#x27;^%.(%d+)&#x27;</span>, p2+<span class="number">1</span>)</span><br><span class="line">  <span class="keyword">if</span> <span class="keyword">not</span> p3 <span class="keyword">then</span></span><br><span class="line">    p3 = p2</span><br><span class="line">    f = <span class="number">0</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">local</span> zc = ssub(line, p3+<span class="number">1</span>, p3+<span class="number">1</span>)</span><br><span class="line">  <span class="keyword">local</span> _, p4, zs, z = sfind(line, <span class="string">&#x27;^ ?([%+%-])(%d+)&#x27;</span>, p3+<span class="number">1</span>)</span><br><span class="line">  <span class="keyword">if</span> p4 <span class="keyword">then</span></span><br><span class="line">    z = <span class="built_in">tonumber</span>(z)</span><br><span class="line">    <span class="keyword">local</span> _, p5, zi = sfind(line, <span class="string">&#x27;^:(%d+)&#x27;</span>, p4+<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">if</span> p5 <span class="keyword">then</span></span><br><span class="line">      z = z + <span class="built_in">tonumber</span>(zi) / <span class="number">60</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    z = zs == <span class="string">&#x27;-&#x27;</span> <span class="keyword">and</span> -<span class="built_in">tonumber</span>(z) <span class="keyword">or</span> <span class="built_in">tonumber</span>(z)</span><br><span class="line">  <span class="keyword">elseif</span> zc == <span class="string">&#x27;Z&#x27;</span> <span class="keyword">then</span></span><br><span class="line">    p4 = p3 + <span class="number">1</span></span><br><span class="line">    z = <span class="number">0</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    p4 = p3</span><br><span class="line">    z = <span class="literal">false</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">return</span> types.timestamp(y, m, d, h, i, s, f, z), ssub(line, p4+<span class="number">1</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">parsescalar</span><span class="params">(line, lines, indent)</span></span></span><br><span class="line">  line = ltrim(line)</span><br><span class="line">  line = <span class="built_in">gsub</span>(line, <span class="string">&#x27;^%s*#.*$&#x27;</span>, <span class="string">&#x27;&#x27;</span>)  <span class="comment">-- comment only -&gt; &#x27;&#x27;</span></span><br><span class="line">  line = <span class="built_in">gsub</span>(line, <span class="string">&#x27;^%s*&#x27;</span>, <span class="string">&#x27;&#x27;</span>)  <span class="comment">-- trim head spaces</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> line == <span class="string">&#x27;&#x27;</span> <span class="keyword">or</span> line == <span class="string">&#x27;~&#x27;</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> null</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">local</span> ts, _ = parsetimestamp(line)</span><br><span class="line">  <span class="keyword">if</span> ts <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> ts</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">local</span> s, _ = parsestring(line)</span><br><span class="line">  <span class="comment">-- startswith quote ... string</span></span><br><span class="line">  <span class="comment">-- not startswith quote ... maybe string</span></span><br><span class="line">  <span class="keyword">if</span> s <span class="keyword">and</span> (startswith(line, <span class="string">&#x27;&quot;&#x27;</span>) <span class="keyword">or</span> startswith(line, <span class="string">&quot;&#x27;&quot;</span>)) <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> startswith(<span class="string">&#x27;!&#x27;</span>, line) <span class="keyword">then</span>  <span class="comment">-- unexpected tagchar</span></span><br><span class="line">    <span class="built_in">error</span>(<span class="string">&#x27;unsupported line: &#x27;</span>..line)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> equalsline(line, <span class="string">&#x27;&#123;&#125;&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> &#123;&#125;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">if</span> equalsline(line, <span class="string">&#x27;[]&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> &#123;&#125;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> startswith(line, <span class="string">&#x27;&#123;&#x27;</span>) <span class="keyword">or</span> startswith(line, <span class="string">&#x27;[&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> parseflowstyle(line, <span class="built_in">lines</span>)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> startswith(line, <span class="string">&#x27;|&#x27;</span>) <span class="keyword">or</span> startswith(line, <span class="string">&#x27;&gt;&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> parseblockstylestring(line, <span class="built_in">lines</span>, indent)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">-- Regular unquoted string</span></span><br><span class="line">  line = <span class="built_in">gsub</span>(line, <span class="string">&#x27;%s*#.*$&#x27;</span>, <span class="string">&#x27;&#x27;</span>)  <span class="comment">-- trim tail comment</span></span><br><span class="line">  <span class="keyword">local</span> v = line</span><br><span class="line">  <span class="keyword">if</span> v == <span class="string">&#x27;null&#x27;</span> <span class="keyword">or</span> v == <span class="string">&#x27;Null&#x27;</span> <span class="keyword">or</span> v == <span class="string">&#x27;NULL&#x27;</span><span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> null</span><br><span class="line">  <span class="keyword">elseif</span> v == <span class="string">&#x27;true&#x27;</span> <span class="keyword">or</span> v == <span class="string">&#x27;True&#x27;</span> <span class="keyword">or</span> v == <span class="string">&#x27;TRUE&#x27;</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">  <span class="keyword">elseif</span> v == <span class="string">&#x27;false&#x27;</span> <span class="keyword">or</span> v == <span class="string">&#x27;False&#x27;</span> <span class="keyword">or</span> v == <span class="string">&#x27;FALSE&#x27;</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">  <span class="keyword">elseif</span> v == <span class="string">&#x27;.inf&#x27;</span> <span class="keyword">or</span> v == <span class="string">&#x27;.Inf&#x27;</span> <span class="keyword">or</span> v == <span class="string">&#x27;.INF&#x27;</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">math</span>.<span class="built_in">huge</span></span><br><span class="line">  <span class="keyword">elseif</span> v == <span class="string">&#x27;+.inf&#x27;</span> <span class="keyword">or</span> v == <span class="string">&#x27;+.Inf&#x27;</span> <span class="keyword">or</span> v == <span class="string">&#x27;+.INF&#x27;</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">math</span>.<span class="built_in">huge</span></span><br><span class="line">  <span class="keyword">elseif</span> v == <span class="string">&#x27;-.inf&#x27;</span> <span class="keyword">or</span> v == <span class="string">&#x27;-.Inf&#x27;</span> <span class="keyword">or</span> v == <span class="string">&#x27;-.INF&#x27;</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> -<span class="built_in">math</span>.<span class="built_in">huge</span></span><br><span class="line">  <span class="keyword">elseif</span> v == <span class="string">&#x27;.nan&#x27;</span> <span class="keyword">or</span> v == <span class="string">&#x27;.NaN&#x27;</span> <span class="keyword">or</span> v == <span class="string">&#x27;.NAN&#x27;</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> / <span class="number">0</span></span><br><span class="line">  <span class="keyword">elseif</span> sfind(v, <span class="string">&#x27;^[%+%-]?[0-9]+$&#x27;</span>) <span class="keyword">or</span> sfind(v, <span class="string">&#x27;^[%+%-]?[0-9]+%.$&#x27;</span>)<span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">tonumber</span>(v)  <span class="comment">-- : int</span></span><br><span class="line">  <span class="keyword">elseif</span> sfind(v, <span class="string">&#x27;^[%+%-]?[0-9]+%.[0-9]+$&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">tonumber</span>(v)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">return</span> s <span class="keyword">or</span> v</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> parsemap;  <span class="comment">-- : func</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">parseseq</span><span class="params">(line, lines, indent)</span></span></span><br><span class="line">  <span class="keyword">local</span> seq = <span class="built_in">setmetatable</span>(&#123;&#125;, types.seq)</span><br><span class="line">  <span class="keyword">if</span> line ~= <span class="string">&#x27;&#x27;</span> <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">error</span>()</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">while</span> #<span class="built_in">lines</span> &gt; <span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">    <span class="comment">-- Check for a new document</span></span><br><span class="line">    line = <span class="built_in">lines</span>[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> startswith(line, <span class="string">&#x27;---&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">while</span> #<span class="built_in">lines</span> &gt; <span class="number">0</span> <span class="keyword">and</span> <span class="keyword">not</span> startswith(<span class="built_in">lines</span>, <span class="string">&#x27;---&#x27;</span>) <span class="keyword">do</span></span><br><span class="line">        tremove(<span class="built_in">lines</span>, <span class="number">1</span>)</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">return</span> seq</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">-- Check the indent level</span></span><br><span class="line">    <span class="keyword">local</span> level = countindent(line)</span><br><span class="line">    <span class="keyword">if</span> level &lt; indent <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">return</span> seq</span><br><span class="line">    <span class="keyword">elseif</span> level &gt; indent <span class="keyword">then</span></span><br><span class="line">      <span class="built_in">error</span>(<span class="string">&quot;found bad indenting in line: &quot;</span>.. line)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> i, j = sfind(line, <span class="string">&#x27;%-%s+&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> i <span class="keyword">then</span></span><br><span class="line">      i, j = sfind(line, <span class="string">&#x27;%-$&#x27;</span>)</span><br><span class="line">      <span class="keyword">if</span> <span class="keyword">not</span> i <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">return</span> seq</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">local</span> rest = ssub(line, j+<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> sfind(rest, <span class="string">&#x27;^[^\&#x27;\&quot;%s]*:&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">      <span class="comment">-- Inline nested hash</span></span><br><span class="line">      <span class="keyword">local</span> indent2 = j</span><br><span class="line">      <span class="built_in">lines</span>[<span class="number">1</span>] = <span class="built_in">string</span>.<span class="built_in">rep</span>(<span class="string">&#x27; &#x27;</span>, indent2)..rest</span><br><span class="line">      tinsert(seq, parsemap(<span class="string">&#x27;&#x27;</span>, <span class="built_in">lines</span>, indent2))</span><br><span class="line">    <span class="keyword">elseif</span> sfind(rest, <span class="string">&#x27;^%-%s+&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">      <span class="comment">-- Inline nested seq</span></span><br><span class="line">      <span class="keyword">local</span> indent2 = j</span><br><span class="line">      <span class="built_in">lines</span>[<span class="number">1</span>] = <span class="built_in">string</span>.<span class="built_in">rep</span>(<span class="string">&#x27; &#x27;</span>, indent2)..rest</span><br><span class="line">      tinsert(seq, parseseq(<span class="string">&#x27;&#x27;</span>, <span class="built_in">lines</span>, indent2))</span><br><span class="line">    <span class="keyword">elseif</span> isemptyline(rest) <span class="keyword">then</span></span><br><span class="line">      tremove(<span class="built_in">lines</span>, <span class="number">1</span>)</span><br><span class="line">      <span class="keyword">if</span> #<span class="built_in">lines</span> == <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">        tinsert(seq, null)</span><br><span class="line">        <span class="keyword">return</span> seq</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">if</span> sfind(<span class="built_in">lines</span>[<span class="number">1</span>], <span class="string">&#x27;^%s*%-&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">local</span> nextline = <span class="built_in">lines</span>[<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">local</span> indent2 = countindent(nextline)</span><br><span class="line">        <span class="keyword">if</span> indent2 == indent <span class="keyword">then</span></span><br><span class="line">          <span class="comment">-- Null seqay entry</span></span><br><span class="line">          tinsert(seq, null)</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          tinsert(seq, parseseq(<span class="string">&#x27;&#x27;</span>, <span class="built_in">lines</span>, indent2))</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        <span class="comment">-- - # comment</span></span><br><span class="line">        <span class="comment">--   key: value</span></span><br><span class="line">        <span class="keyword">local</span> nextline = <span class="built_in">lines</span>[<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">local</span> indent2 = countindent(nextline)</span><br><span class="line">        tinsert(seq, parsemap(<span class="string">&#x27;&#x27;</span>, <span class="built_in">lines</span>, indent2))</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">elseif</span> rest <span class="keyword">then</span></span><br><span class="line">      <span class="comment">-- Array entry with a value</span></span><br><span class="line">      tremove(<span class="built_in">lines</span>, <span class="number">1</span>)</span><br><span class="line">      tinsert(seq, parsescalar(rest, <span class="built_in">lines</span>))</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">return</span> seq</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">parseset</span><span class="params">(line, lines, indent)</span></span></span><br><span class="line">  <span class="keyword">if</span> <span class="keyword">not</span> isemptyline(line) <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">error</span>(<span class="string">&#x27;not seq line: &#x27;</span>..line)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">local</span> set = <span class="built_in">setmetatable</span>(&#123;&#125;, types.set)</span><br><span class="line">  <span class="keyword">while</span> #<span class="built_in">lines</span> &gt; <span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">    <span class="comment">-- Check for a new document</span></span><br><span class="line">    line = <span class="built_in">lines</span>[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> startswith(line, <span class="string">&#x27;---&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">while</span> #<span class="built_in">lines</span> &gt; <span class="number">0</span> <span class="keyword">and</span> <span class="keyword">not</span> startswith(<span class="built_in">lines</span>, <span class="string">&#x27;---&#x27;</span>) <span class="keyword">do</span></span><br><span class="line">        tremove(<span class="built_in">lines</span>, <span class="number">1</span>)</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">return</span> set</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">-- Check the indent level</span></span><br><span class="line">    <span class="keyword">local</span> level = countindent(line)</span><br><span class="line">    <span class="keyword">if</span> level &lt; indent <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">return</span> set</span><br><span class="line">    <span class="keyword">elseif</span> level &gt; indent <span class="keyword">then</span></span><br><span class="line">      <span class="built_in">error</span>(<span class="string">&quot;found bad indenting in line: &quot;</span>.. line)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> i, j = sfind(line, <span class="string">&#x27;%?%s+&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> i <span class="keyword">then</span></span><br><span class="line">      i, j = sfind(line, <span class="string">&#x27;%?$&#x27;</span>)</span><br><span class="line">      <span class="keyword">if</span> <span class="keyword">not</span> i <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">return</span> set</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">local</span> rest = ssub(line, j+<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> sfind(rest, <span class="string">&#x27;^[^\&#x27;\&quot;%s]*:&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">      <span class="comment">-- Inline nested hash</span></span><br><span class="line">      <span class="keyword">local</span> indent2 = j</span><br><span class="line">      <span class="built_in">lines</span>[<span class="number">1</span>] = <span class="built_in">string</span>.<span class="built_in">rep</span>(<span class="string">&#x27; &#x27;</span>, indent2)..rest</span><br><span class="line">      set[parsemap(<span class="string">&#x27;&#x27;</span>, <span class="built_in">lines</span>, indent2)] = <span class="literal">true</span></span><br><span class="line">    <span class="keyword">elseif</span> sfind(rest, <span class="string">&#x27;^%s+$&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">      tremove(<span class="built_in">lines</span>, <span class="number">1</span>)</span><br><span class="line">      <span class="keyword">if</span> #<span class="built_in">lines</span> == <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">        tinsert(set, null)</span><br><span class="line">        <span class="keyword">return</span> set</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">if</span> sfind(<span class="built_in">lines</span>[<span class="number">1</span>], <span class="string">&#x27;^%s*%?&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">local</span> indent2 = countindent(<span class="built_in">lines</span>[<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">if</span> indent2 == indent <span class="keyword">then</span></span><br><span class="line">          <span class="comment">-- Null array entry</span></span><br><span class="line">          set[null] = <span class="literal">true</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          set[parseseq(<span class="string">&#x27;&#x27;</span>, <span class="built_in">lines</span>, indent2)] = <span class="literal">true</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">elseif</span> rest <span class="keyword">then</span></span><br><span class="line">      tremove(<span class="built_in">lines</span>, <span class="number">1</span>)</span><br><span class="line">      set[parsescalar(rest, <span class="built_in">lines</span>)] = <span class="literal">true</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="built_in">error</span>(<span class="string">&quot;failed to classify line: &quot;</span>..line)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">return</span> set</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">parsemap</span><span class="params">(line, lines, indent)</span></span></span><br><span class="line">  <span class="keyword">if</span> <span class="keyword">not</span> isemptyline(line) <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">error</span>(<span class="string">&#x27;not map line: &#x27;</span>..line)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">local</span> map = <span class="built_in">setmetatable</span>(&#123;&#125;, types.map)</span><br><span class="line">  <span class="keyword">while</span> #<span class="built_in">lines</span> &gt; <span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">    <span class="comment">-- Check for a new document</span></span><br><span class="line">    line = <span class="built_in">lines</span>[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> startswith(line, <span class="string">&#x27;---&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">while</span> #<span class="built_in">lines</span> &gt; <span class="number">0</span> <span class="keyword">and</span> <span class="keyword">not</span> startswith(<span class="built_in">lines</span>, <span class="string">&#x27;---&#x27;</span>) <span class="keyword">do</span></span><br><span class="line">        tremove(<span class="built_in">lines</span>, <span class="number">1</span>)</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">return</span> map</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">-- Check the indent level</span></span><br><span class="line">    <span class="keyword">local</span> level, _ = countindent(line)</span><br><span class="line">    <span class="keyword">if</span> level &lt; indent <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">return</span> map</span><br><span class="line">    <span class="keyword">elseif</span> level &gt; indent <span class="keyword">then</span></span><br><span class="line">      <span class="built_in">error</span>(<span class="string">&quot;found bad indenting in line: &quot;</span>.. line)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">-- Find the key</span></span><br><span class="line">    <span class="keyword">local</span> key</span><br><span class="line">    <span class="keyword">local</span> s, rest = parsestring(line)</span><br><span class="line"></span><br><span class="line">    <span class="comment">-- Quoted keys</span></span><br><span class="line">    <span class="keyword">if</span> s <span class="keyword">and</span> startswith(rest, <span class="string">&#x27;:&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">local</span> sc = parsescalar(s, &#123;&#125;, <span class="number">0</span>)</span><br><span class="line">      <span class="keyword">if</span> sc <span class="keyword">and</span> <span class="built_in">type</span>(sc) ~= <span class="string">&#x27;string&#x27;</span> <span class="keyword">then</span></span><br><span class="line">        key = sc</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        key = s</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      line = ssub(rest, <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="built_in">error</span>(<span class="string">&quot;failed to classify line: &quot;</span>..line)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    key = checkdupekey(map, key)</span><br><span class="line">    line = ltrim(line)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ssub(line, <span class="number">1</span>, <span class="number">1</span>) == <span class="string">&#x27;!&#x27;</span> <span class="keyword">then</span></span><br><span class="line">      <span class="comment">-- ignore type</span></span><br><span class="line">      <span class="keyword">local</span> rh = ltrim(ssub(line, <span class="number">3</span>))</span><br><span class="line">      <span class="keyword">local</span> typename = smatch(rh, <span class="string">&#x27;^!?[^%s]+&#x27;</span>)</span><br><span class="line">      line = ltrim(ssub(rh, #typename+<span class="number">1</span>))</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> isemptyline(line) <span class="keyword">then</span></span><br><span class="line">      tremove(<span class="built_in">lines</span>, <span class="number">1</span>)</span><br><span class="line">      line = ltrim(line)</span><br><span class="line">      map[key] = parsescalar(line, <span class="built_in">lines</span>, indent)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="comment">-- An indent</span></span><br><span class="line">      tremove(<span class="built_in">lines</span>, <span class="number">1</span>)</span><br><span class="line">      <span class="keyword">if</span> #<span class="built_in">lines</span> == <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">        map[key] = null</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">if</span> sfind(<span class="built_in">lines</span>[<span class="number">1</span>], <span class="string">&#x27;^%s*%-&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">local</span> indent2 = countindent(<span class="built_in">lines</span>[<span class="number">1</span>])</span><br><span class="line">        map[key] = parseseq(<span class="string">&#x27;&#x27;</span>, <span class="built_in">lines</span>, indent2)</span><br><span class="line">      <span class="keyword">elseif</span> sfind(<span class="built_in">lines</span>[<span class="number">1</span>], <span class="string">&#x27;^%s*%?&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">local</span> indent2 = countindent(<span class="built_in">lines</span>[<span class="number">1</span>])</span><br><span class="line">        map[key] = parseset(<span class="string">&#x27;&#x27;</span>, <span class="built_in">lines</span>, indent2)</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">local</span> indent2 = countindent(<span class="built_in">lines</span>[<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">if</span> indent &gt;= indent2 <span class="keyword">then</span></span><br><span class="line">          <span class="comment">-- Null hash entry</span></span><br><span class="line">          map[key] = null</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          map[key] = parsemap(<span class="string">&#x27;&#x27;</span>, <span class="built_in">lines</span>, indent2)</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">return</span> map</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- : (list&lt;str&gt;)-&gt;dict</span></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">parsedocuments</span><span class="params">(lines)</span></span></span><br><span class="line">  <span class="built_in">lines</span> = <span class="built_in">select</span>(<span class="built_in">lines</span>, <span class="function"><span class="keyword">function</span><span class="params">(s)</span></span> <span class="keyword">return</span> <span class="keyword">not</span> isemptyline(s) <span class="keyword">end</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> sfind(<span class="built_in">lines</span>[<span class="number">1</span>], <span class="string">&#x27;^%%YAML&#x27;</span>) <span class="keyword">then</span> tremove(<span class="built_in">lines</span>, <span class="number">1</span>) <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">local</span> root = &#123;&#125;</span><br><span class="line">  <span class="keyword">local</span> in_document = <span class="literal">false</span></span><br><span class="line">  <span class="keyword">while</span> #<span class="built_in">lines</span> &gt; <span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">local</span> line = <span class="built_in">lines</span>[<span class="number">1</span>]</span><br><span class="line">    <span class="comment">-- Do we have a document header?</span></span><br><span class="line">    <span class="keyword">local</span> docright;</span><br><span class="line">    <span class="keyword">if</span> sfind(line, <span class="string">&#x27;^%-%-%-&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">      <span class="comment">-- Handle scalar documents</span></span><br><span class="line">      docright = ssub(line, <span class="number">4</span>)</span><br><span class="line">      tremove(<span class="built_in">lines</span>, <span class="number">1</span>)</span><br><span class="line">      in_document = <span class="literal">true</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">if</span> docright <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">not</span> sfind(docright, <span class="string">&#x27;^%s+$&#x27;</span>) <span class="keyword">and</span></span><br><span class="line">          <span class="keyword">not</span> sfind(docright, <span class="string">&#x27;^%s+#&#x27;</span>)) <span class="keyword">then</span></span><br><span class="line">        tinsert(root, parsescalar(docright, <span class="built_in">lines</span>))</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">elseif</span> #<span class="built_in">lines</span> == <span class="number">0</span> <span class="keyword">or</span> startswith(line, <span class="string">&#x27;---&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">      <span class="comment">-- A naked document</span></span><br><span class="line">      tinsert(root, null)</span><br><span class="line">      <span class="keyword">while</span> #<span class="built_in">lines</span> &gt; <span class="number">0</span> <span class="keyword">and</span> <span class="keyword">not</span> sfind(<span class="built_in">lines</span>[<span class="number">1</span>], <span class="string">&#x27;---&#x27;</span>) <span class="keyword">do</span></span><br><span class="line">        tremove(<span class="built_in">lines</span>, <span class="number">1</span>)</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      in_document = <span class="literal">false</span></span><br><span class="line">    <span class="comment">-- XXX The final &#x27;-+$&#x27; is to look for -- which ends up being an</span></span><br><span class="line">    <span class="comment">-- error later.</span></span><br><span class="line">    <span class="keyword">elseif</span> <span class="keyword">not</span> in_document <span class="keyword">and</span> #root &gt; <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">      <span class="comment">-- only the first document can be explicit</span></span><br><span class="line">      <span class="built_in">error</span>(<span class="string">&#x27;parse error: &#x27;</span>..line)</span><br><span class="line">    <span class="keyword">elseif</span> sfind(line, <span class="string">&#x27;^%s*%-&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">      <span class="comment">-- An array at the root</span></span><br><span class="line">      tinsert(root, parseseq(<span class="string">&#x27;&#x27;</span>, <span class="built_in">lines</span>, <span class="number">0</span>))</span><br><span class="line">    <span class="keyword">elseif</span> sfind(line, <span class="string">&#x27;^%s*[^%s]&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">      <span class="comment">-- A hash at the root</span></span><br><span class="line">      <span class="keyword">local</span> level = countindent(line)</span><br><span class="line">      tinsert(root, parsemap(<span class="string">&#x27;&#x27;</span>, <span class="built_in">lines</span>, level))</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="comment">-- Shouldn&#x27;t get here.  @lines have whitespace-only lines</span></span><br><span class="line">      <span class="comment">-- stripped, and previous match is a line with any</span></span><br><span class="line">      <span class="comment">-- non-whitespace.  So this clause should only be reachable via</span></span><br><span class="line">      <span class="comment">-- a perlbug where \s is not symmetric with \S</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">-- uncoverable statement</span></span><br><span class="line">      <span class="built_in">error</span>(<span class="string">&#x27;parse error: &#x27;</span>..line)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">if</span> #root &gt; <span class="number">1</span> <span class="keyword">and</span> Null.isnull(root[<span class="number">1</span>]) <span class="keyword">then</span></span><br><span class="line">    tremove(root, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> root</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">return</span> root</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--- Parse yaml string into table.</span></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">parse</span><span class="params">(source)</span></span></span><br><span class="line">  <span class="keyword">local</span> <span class="built_in">lines</span> = &#123;&#125;</span><br><span class="line">  <span class="keyword">for</span> line <span class="keyword">in</span> <span class="built_in">string</span>.<span class="built_in">gmatch</span>(source .. <span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;(.-)\r?\n&#x27;</span>) <span class="keyword">do</span></span><br><span class="line">    tinsert(<span class="built_in">lines</span>, line)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">local</span> docs = parsedocuments(<span class="built_in">lines</span>)</span><br><span class="line">  <span class="keyword">if</span> #docs == <span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> docs[<span class="number">1</span>]</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> docs</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> &#123;</span><br><span class="line">  version = <span class="number">0.1</span>,</span><br><span class="line">  parse = parse,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>技术</category>
        <category>Lua</category>
      </categories>
      <tags>
        <tag>Dice</tag>
      </tags>
  </entry>
</search>
