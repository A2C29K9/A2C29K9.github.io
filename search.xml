<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>listen2me</title>
    <url>/2022/11/20/listen2me/</url>
    <content><![CDATA[<div class="note success"><h1 id="listen2me"><a href="#listen2me" class="headerlink" title="listen2me"></a><strong>listen2me</strong></h1><p>使用mml作曲。</p>
</div>

<p><a href="https://github.com/A2C29K9/listen2me/commits/Windows-Version"><img src="https://img.shields.io/github/last-commit/A2C29K9/listen2me"></a><a href="https://github.com/A2C29K9/listen2me/issues"><img src="https://img.shields.io/github/issues/A2C29K9/listen2me"></a><a href="https://github.com/A2C29K9/listen2me/pulls"><img src="https://img.shields.io/github/issues-pr/A2C29K9/listen2me"></a><a href="https://github.com/A2C29K9/listen2me/releases"><img src="https://img.shields.io/github/v/release/A2C29K9/listen2me?include_prereleases"></a><a href="https://github.com/A2C29K9/listen2me/releases/download/v1.0.8/listen2me_v1.0.8.zip"><img src="https://img.shields.io/github/downloads/A2C29K9/listen2me/total.svg" alt="download"></a></p>
<p>此分支为Windows版本。</p>
<p>listen2me是为Dice!编写的Lua脚本，用于mml(Music Macro Language)作曲试听。</p>
<p>如果在使用过程中遇到了困难，欢迎到原仓库提交<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0EyQzI5SzkvbGlzdGVuMm1lL2lzc3Vlcy9uZXc=">issue<i class="fa fa-external-link-alt"></i></span>；如果在使用过程中修改出更有意思的玩法，也欢迎到原仓库提交<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0EyQzI5SzkvbGlzdGVuMm1lL3B1bGxz">PR<i class="fa fa-external-link-alt"></i></span>。</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;mod&quot;</span>:<span class="string">&quot;listen2me&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;author&quot;</span>:<span class="string">&quot;简律纯&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;ver&quot;</span>:<span class="string">&quot;2.1.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;dice_build&quot;</span>:<span class="number">612</span>,</span><br><span class="line">    <span class="attr">&quot;brief&quot;</span>:<span class="string">&quot;使用mml作曲&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;comment&quot;</span>:<span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;helpdoc&quot;</span>:&#123;</span><br><span class="line">        <span class="attr">&quot;listen2me&quot;</span>:<span class="string">&quot;【listen2me[Windows]】\n使用mml语言进行作曲\nhttps://github.com/A2C29K9/listen2me&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;loopstraining&quot;</span>:<span class="string">&quot;基于listen2me的听音训练娱乐模块&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><input checked="" disabled="" type="checkbox"> Windows 版本</li>
<li><input disabled="" type="checkbox"> Linux 版本</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ul>
<li><p>Dice版本2.6.5beta12(624+)以上安装方法:</p>
<ol>
<li>在 <code>./DiceQQ/conf/mod/source.list</code>文件内（没有mod文件夹和这文件就新建）输入 <code>https://ssjskfjdj.netlify.app/Module/</code>。</li>
<li>使用 <code>.system load</code>命令重载bot，这样做的目的是为了让步骤1里的远程地址生效。</li>
<li>对bot发送 <code>.mod get listen2me</code>命令，等待安装。</li>
<li>回到第二步，这样做的目的是为了让mod被加载。</li>
<li>Enjoy Your Self!</li>
</ol>
</li>
<li><p>Dice版本2.6.4b(612+)以上安装方法：</p>
<ol>
<li>浏览器访问 <code>https://github.com/ssJSKFJDJ/listen2me</code>并点击绿色按钮 <code>Code</code>下的 <code>Download Zip</code>按钮下载仓库压缩包。</li>
<li>解压压缩包，将里面的文件和文件夹全部丢进 <code>./DiceQQ/mod/</code>文件夹内。</li>
<li>使用 <code>.system load</code>命令重载。</li>
<li>Enjoy Your Self!</li>
</ol>
</li>
</ul>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p><a href="/script/mml2mid.lua">使用功能模块前先根据注释内容修改合适的配置</a></p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">--------------------settings---------------------</span></span><br><span class="line">Settings = &#123;</span><br><span class="line">    _FRAMWORK = <span class="string">&quot;Gocq&quot;</span>, <span class="comment">-- &quot;Mirai&quot;,</span></span><br><span class="line">    <span class="comment">-- 框架名称,必填,可选参数:&#x27;Mirai&#x27;或&#x27;Gocq&#x27;(默认).</span></span><br><span class="line"></span><br><span class="line">    _ONEFILE = <span class="string">&quot;xx&quot;</span>, <span class="comment">-- os.date(&quot;%A&quot;),</span></span><br><span class="line">    <span class="comment">-- 是否将每次的乐谱记录在同一个文件内.</span></span><br><span class="line"></span><br><span class="line">    _WARNING = <span class="number">18</span>,</span><br><span class="line">    <span class="comment">-- 音频文件过多报警上限,未填时默认18</span></span><br><span class="line"></span><br><span class="line">    _AUTOCLR = <span class="number">21</span>,</span><br><span class="line">    <span class="comment">-- 音频文件自动清理，未填时默认21</span></span><br><span class="line"></span><br><span class="line">    _SUBNAME = <span class="string">&quot;.mp3&quot;</span>, <span class="comment">-- &quot;.wav&quot;,</span></span><br><span class="line">    <span class="comment">-- 规定输出格式,填写mp3时需要安装ffmpeg.</span></span><br><span class="line"></span><br><span class="line">    _UPLOAD = <span class="literal">false</span>, <span class="comment">-- false,</span></span><br><span class="line">    <span class="comment">-- 是否在发出语音同时上传mid文件(仅限Gocq).</span></span><br><span class="line">    <span class="comment">-- 对应下参数_APIPORT.</span></span><br><span class="line"></span><br><span class="line">    _APIPORT = <span class="number">15700</span> <span class="comment">-- nil</span></span><br><span class="line">    <span class="comment">-- Gocq 本地 API 端口,填nil时将自动搜寻,若报错请自行填入.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h2><p>一般指令格式:<code>l2m&gt;[opt=clr|mml|...]</code></p>
<ul>
<li><p>清理缓存<br>成功执行一次mml命令后会在 <code>./project/</code>生成这几样东西:</p>
<ol>
<li>fileName.mid</li>
<li>fileName.mml</li>
<li>fileName.mp3|wav</li>
</ol>
<p>这些就是所谓的缓存，一次生成三个，因此才有了 <code>_WARNING</code>和 <code>_AUTOCLR</code>配置——但要注意的是，这些配置的存在只是为了那些不会主动的清理的人罢了，如果你比较勤快那么我想除了添加 <code>_ONEFILE</code>配置项外，你一定会经常使用 <code>l2m&gt;clr</code>指令去清理这些缓存的。</p>
</li>
<li><p>生成曲谱<br>指令格式:<code>l2m&gt;[mml]</code>，由于mml语法过于繁琐因此在这里不一一赘述，只是做几个示例，日后会写专门的文档系统介绍此功能模块的mml语法。</p>
<ol>
<li>单轨示例</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">l2m&gt;A cdefgab</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>多轨示例</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">l2m&gt;</span><br><span class="line">A l8d+&gt;d+d+d+d4&lt;a+4&gt;cc&lt;a+g+a+2d+&gt;d+d+d+d4.&lt;a+b+2g+4a+4d+&gt;d+d+fd4&lt;a+4&gt;cl16d+f8.d+&lt;a+4.&amp;a+gfl8d+&gt;d+d+gfd+dl16&lt;a+&gt;d+4.&amp;d+cdd+8dd+8.&lt;a+8&gt;fgf2gg8.fd+f8cd+4&amp;d+&lt;a+8&gt;gg8.fd+f8d+&lt;a+4.&amp;a+&gt;gg8.fd+f8cd+4d+d+8dd8.cc8.&lt;a+a+8.&gt;cd+g+8.g8.fd+f8cd+4&amp;d+&lt;a+8&gt;dd8d+8f&lt;a+8ga+8&gt;f8d+d+8.&lt;a+a+8g+gg+8&gt;d+d+2&lt;a+a+8g+gg+8&gt;ff4.&amp;fd+8d+8df8d+2.</span><br><span class="line"></span><br><span class="line">B &#x2F;*M 0  *&#x2F;  &lt;c8g8&gt;d+4&lt;&lt;g8&gt;d8a+4&#x2F;*M 1  *&#x2F;  &lt;g+8&gt;d+8&lt;a+4&gt;d+4d4&#x2F;*M 2  *&#x2F;  c8g8&gt;d+4&lt;&lt;g8&gt;d8a+4&#x2F;*M 3  *&#x2F;  &lt;g+8&gt;d+8&gt;c8&lt;d+8&lt;g+8&gt;d+8&lt;a+8b8&#x2F;*M 4  *&#x2F;  &gt;c8g8&gt;d+8&lt;g8&lt;g8&gt;d8a+8d8&#x2F;*M 5  *&#x2F;  &lt;g+8&gt;d+8&lt;a+4&gt;d+8a+8d4&#x2F;*M 6  *&#x2F;  c8g8&gt;d+8&lt;g8&lt;g8&gt;d8a+8d8&#x2F;*M 7  *&#x2F;  &lt;g+8&gt;d+8&gt;c8.&lt;&lt;a+16b4g+4&#x2F;*M 8  *&#x2F;  a+8&gt;f8a+4&lt;&lt;a+2&#x2F;*M 9  *&#x2F;  &gt;g+8&gt;d+8&gt;c8&lt;d+8&lt;g+8&gt;d8a+8d8&#x2F;*M 10 *&#x2F;  &lt;g8&gt;d+8a+8d+8c8g8&gt;d8d+8&#x2F;*M 11 *&#x2F;  &lt;&lt;f8&gt;g8&gt;d+8&lt;g+8&lt;a+8&gt;f8&gt;d8&lt;a+8&#x2F;*M 12 *&#x2F;  &lt;d+8a+8&gt;d+8&lt;a+8&gt;c+8&lt;a+8&gt;c+8&lt;&lt;a+8&#x2F;*M 13 *&#x2F;  &gt;g+8&gt;d+8&gt;c8&lt;d+8&lt;g+8&gt;d8a+8d8&#x2F;*M 14 *&#x2F;  &lt;g8&gt;d8.&lt;g8.&gt;c4&lt;d8d+8&#x2F;*M 15 *&#x2F;  f8&gt;c8g+8c8&lt;g8&gt;d+8a+8d+8&#x2F;*M 16 *&#x2F;  &lt;g+8&gt;d+8&gt;c8&lt;d+16.&lt;&lt;a+32o4d2&#x2F;*M 17 *&#x2F;  &lt;&lt;d+16a+16&gt;g16g+16a+8.&lt;d+4.&amp;d+16d+8</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="音源"><a href="#音源" class="headerlink" title="音源"></a>音源</h2><blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9tdXNlc2NvcmUub3JnL3poLWhhbnMvJWU3JTk0JWE4JWU2JTg4JWI3JWU2JTg5JThiJWU1JTg2JThjL3NvdW5kZm9udC0lZTklOWYlYjMlZTglODklYjIlZTUlYmElOTM=">Musescore<i class="fa fa-external-link-alt"></i></span> 提供的三个常见音色库</p>
</blockquote>
<ul>
<li>FluidR3_GM.sf2 (未压缩大小 141 MB)<br>下载 <span class="exturl" data-url="aHR0cDovL3d3dy5tdXNlc2NvcmUub3JnL2Rvd25sb2FkL2ZsdWlkLXNvdW5kZm9udC50YXIuZ3o=">Fluid-soundfont.tar.gz<i class="fa fa-external-link-alt"></i></span></li>
<li>GeneralUser_GS_1.44-MuseScore.sf2 (未压缩大小 29.8 MB)<br>下载 <span class="exturl" data-url="aHR0cDovL3d3dy5zY2hyaXN0aWFuY29sbGlucy5jb20vc291bmRmb250cy9HZW5lcmFsVXNlcl9HU18xLjQ0LU11c2VTY29yZS56aXA=">GeneralUser_GS_1.44-MuseScore.zip<i class="fa fa-external-link-alt"></i></span> (承蒙 S. Christian Collins 而提供)</li>
<li>TimGM6mb.sf2 (未压缩大小 5.7 MB)<br>下载 <span class="exturl" data-url="aHR0cDovL21zY29yZS5zdm4uc291cmNlZm9yZ2UubmV0L3ZpZXd2Yy9tc2NvcmUvdHJ1bmsvbXNjb3JlL3NoYXJlL3NvdW5kL1RpbUdNNm1iLnNmMg==">modified TimGM6mb.sf2<i class="fa fa-external-link-alt"></i></span> (承蒙 Tim Brechbill 而提供)</li>
</ul>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZsdWlkU3ludGgvZmx1aWRzeW50aC93aWtpL1NvdW5kRm9udA==">FluidSynth<i class="fa fa-external-link-alt"></i></span> 提供的音源下载网站</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cucG9seXBob25lLXNvdW5kZm9udHMuY29tL2Rvd25sb2FkLXNvdW5kZm9udHM=">Polyphone Soundfont Collection<i class="fa fa-external-link-alt"></i></span> - A collection of Soundfonts on the Polyphone website</li>
<li><span class="exturl" data-url="aHR0cDovL3d3dy5oYW1tZXJzb3VuZC5uZXQv">Hammersound<i class="fa fa-external-link-alt"></i></span> - A nice resource for downloading free SoundFont instrument files.</li>
<li><span class="exturl" data-url="aHR0cDovL3d3dy5wZXJzb25hbGNvcHkuY29tL3NmYXJrZm9udHMxLmh0bQ==">Magic Sound Font, version 2.0<i class="fa fa-external-link-alt"></i></span> (68 MB)</li>
<li><span class="exturl" data-url="aHR0cDovL3d3dy5hcmFjaG5vc29mdC5jb20vbWFpbi9kb3dubG9hZC5waHA/aWQ9c291bmRmb250LXNmMg==">Arachno SoundFont, version 1.0<i class="fa fa-external-link-alt"></i></span> (148MB)</li>
<li><span class="exturl" data-url="aHR0cDovL3NvdXJjZWZvcmdlLm5ldC9wL21zY29yZS9jb2RlL0hFQUQvdHJlZS90cnVuay9tc2NvcmUvc2hhcmUvc291bmQvVGltR002bWIuc2YyP2Zvcm1hdD1yYXc=">TimGM6mb<i class="fa fa-external-link-alt"></i></span> (6 MB)</li>
<li><span class="exturl" data-url="ZnRwOi8vZnRwLm9zdW9zbC5vcmcvcHViL211c2VzY29yZS9zb3VuZGZvbnQvTXVzZVNjb3JlX0dlbmVyYWwvTXVzZVNjb3JlX0dlbmVyYWwuc2Yy">MuseScore_General.sf2<i class="fa fa-external-link-alt"></i></span> (208 MB)</li>
<li><span class="exturl" data-url="aHR0cDovL21pZGthci5jb20vc291bmRmb250cy8=">Timbres Of Heaven GM_GS_XG_SFX V 3.4<i class="fa fa-external-link-alt"></i></span> (246 MB)</li>
<li><span class="exturl" data-url="aHR0cDovL2Z0cC5vc3Vvc2wub3JnL3B1Yi9tdXNlc2NvcmUvc291bmRmb250L1NvbmF0aW5hX1N5bXBob25pY19PcmNoZXN0cmFfU0YyLnppcA==">Sonatina Symphonic Orchestra<i class="fa fa-external-link-alt"></i></span> (503 MB uncompressed)</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9zaXRlcy5nb29nbGUuY29tL3ZpZXcvaGVkLXNvdW5kcy9hZWdlYW4tc3ltcGhvbmljLW9yY2hlc3RyYQ==">Aegean Symphonic Orchestra v2.5 universal<i class="fa fa-external-link-alt"></i></span> (350 MB)</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9zaXRlcy5nb29nbGUuY29tL3ZpZXcvaGVkLXNvdW5kcy9zYWxhbWFuZGVyLWM1LWxpZ2h0">Salamander C5 Light<i class="fa fa-external-link-alt"></i></span> (25 MB)</li>
</ul>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><span class="exturl" data-url="aHR0cDovL2hwYy5qcC9+bW1sMm1pZA==">http://hpc.jp/~mml2mid<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9tYW4uYXJjaGxpbnV4Lm9yZy9tYW4vdGltaWRpdHkuY2ZnLjU=">https://man.archlinux.org/man/timidity.cfg.5<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9tYW4uYXJjaGxpbnV4Lm9yZy9tYW4vY29tbXVuaXR5L3RpbWlkaXR5KysvdGltaWRpdHkuMS5lbg==">https://man.archlinux.org/man/community/timidity++/timidity.1.en<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h2 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h2><blockquote>
<p>此日志写的比工程文件要晚那么一点。</p>
</blockquote>
<hr>
<details>
<summary>2022年11月20日 开了一个新的坑——听音练习。</summary>
<h5>新增</h5>
1.<i>loopstraining</i>新增听音练习娱乐模块。
<h5>改动</h5>
1.<i>mml2mid.lua</i>将所有的局部变量名称首字母大写。
</details>


<details>
<summary>2022年10月29日 发现了几个bug，更新了readme。</summary>
<h5>issue</h5>
1.<i>mml2mid.lua</i><b>timidity</b>线程问题，速度过快会导致timidity错误。
<h5>新增</h5>
1.<i>readme.md</i>新增指令介绍。
</details>


<details>
<summary>2022年10月13日 完善Gocq上传群文件机制。</summary>
<h5>新增</h5>
1.<i>mml2mid.lua</i><b>_UPLOAD</b>与<b>_APIPORT</b>完善，预期功能已实现。
<h5>改动</h5>
1.<i>mml2mid.lua</i>原本注释的<b>_WARNING</b>配置项现已恢复原有功能。
<br/>
2.<i>mml2mid.lua</i>配置项<b>_AUTOCLR</b>默认上限提高。
</details>


<details>
<summary>2022年10月11日 新增配置项。</summary>
<h5>新增</h5>
1.<i>mml2mid.lua</i>新增<b>_UPLOAD</b>与<b>_APIPORT</b>配置，详细使用说明见脚本。
</details>


<details>
<summary>2022年10月9日 实现了timidity.cfg的自动写入。</summary>
<h5>新增</h5>
1. <i>mml2mid.lua</i> 新增了对<i>timidity</i>音源的检测。
<br/>
2.<i>mml2mid.lua</i> 新增<i>_FRAMWORK</i>配置项，判断框架类型。
<br/>
3.<i>mml2mid.lua</i> 新增mml语法报错检测和输出(如果你看得懂那会很有帮助就是了)。
<h5>修复</h5>
1. 修复了因<i>timidity.cfg</i>参数<b>dir</b>固定而无法输出有声音的音频问题。
</details>


<details>
<summary>2022年10月8日 初步框架版本编写完毕。</summary>
<h5>新增</h5>
1. <i>mml2mid.lua</i> 新增一些配置项。
<br/>
2. 新增了对 <i>timidity.cfg</i> 的查询功能。
<h5>删减</h5>
1. 改动了部分语法。
</details>


<details>
<summary>2022年10月2日 准备套壳，已经实现mml转mid，mid转wav，下一阶段将会编写脚本使其脚本化。</summary>
<h5>新增</h5>
1. 添加<i>timidity</i>，放弃了原本直接发送<i>midi</i>序列的方式(这样<i>Go-cqhttp</i>会发不出语音)，在发送语音前会对<i>*.mid</i>文件进行转码再发送。
<h5>修复</h5>
1. 修复了一些bug。
</details>


<p>2022年11月20日02点00分</p>
]]></content>
      <categories>
        <category>音乐</category>
        <category>技术</category>
        <category>Lua</category>
        <category>作曲</category>
      </categories>
      <tags>
        <tag>Dice</tag>
      </tags>
  </entry>
  <entry>
    <title>Lua原生函数load的继承性</title>
    <url>/2022/11/19/Lua%E5%8E%9F%E7%94%9F%E5%87%BD%E6%95%B0load%E7%9A%84%E7%BB%A7%E6%89%BF/</url>
    <content><![CDATA[<h2 id="Lua原生函数load的继承性"><a href="#Lua原生函数load的继承性" class="headerlink" title="Lua原生函数load的继承性"></a><strong>Lua原生函数load的继承性</strong></h2><p>这篇帖子是没有学习目标的，并且更适合有<strong>Lua编写基础</strong>的人观看。<br><del>今天就是想不明不白的开始。</del><br>关于 <code>load</code>，如果看过<span class="exturl" data-url="aHR0cHM6Ly9mb3J1bS5rb2tvbmEudGVjaC9kLzEzODY=">【指令脚本/抛砖引玉】Load: 在聊天窗口使用lua<i class="fa fa-external-link-alt"></i></span> 那么你或许会对它熟悉一些，此函数是 <code>lua 5.1</code>就有的东西，作用是加载一个数据块。下面是现今的<span class="exturl" data-url="aHR0cHM6Ly93d3cubHVhLm9yZy9tYW51YWwvNS4yL21hbnVhbC5odG1sI3BkZi1sb2Fk">官方5.2 manual<i class="fa fa-external-link-alt"></i></span>给出的关于它的介绍：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">load (ld [, source [, mode [, env]]])</span><br><span class="line">Loads a chunk.</span><br><span class="line"></span><br><span class="line">If is a string, the chunk is this string. If is a function, calls it repeatedly to get the chunk pieces. Each call to must return a string that concatenates with previous results. A return of an empty string, nil, or no value signals the end of the chunk. ldldloadld</span><br><span class="line"></span><br><span class="line">If there are no syntactic errors, returns the compiled chunk as a function; otherwise, returns nil plus the error message.</span><br><span class="line"></span><br><span class="line">If the resulting function has upvalues, the first upvalue is set to the value of , if that parameter is given, or to the value of the global environment. (When you load a main chunk, the resulting function will always have exactly one upvalue, the variable (see §2.2). When you load a binary chunk created from a function (see string.dump), the resulting function can have arbitrary upvalues.) env_ENV</span><br><span class="line"></span><br><span class="line">source is used as the source of the chunk for error messages and debug information (see §4.9). When absent, it defaults to , if is a string, or to &quot;&quot; otherwise. ldld&#x3D;(load)</span><br><span class="line"></span><br><span class="line">The string controls whether the chunk can be text or binary (that is, a precompiled chunk). It may be the string &quot;&quot; (only binary chunks), &quot;&quot; (only text chunks), or &quot;&quot; (both binary and text). The default is &quot;&quot;.modebtbtbt</span><br></pre></td></tr></table></figure>

<blockquote>
<p>什么意思？</p>
</blockquote>
<p>坦白来说，<strong>就是从字符串或者函数中加载一个代码块为方法并返回。</strong>——应该不难理解吧？</p>
<p>但你需要明白以下几点：</p>
<ol>
<li><code>load()</code>返回的是函数,需要调用的话,还需要加括号。</li>
<li>5.1.x版本 <code>load</code>方法为 <code>load(func[,chunkname])</code>从函数中加载，<code>loadstring(str[,chunkname])</code>从字符串中加载</li>
<li>5.3.x版本为 <code>load (chunk [, chunkname [, mode [, env]]])</code><br><code>chunk</code>为函数或字符串<br><code>mode</code>为加载模式:”t”文本样式,”b”二进制样式,”bt”二进制和文本模式.<br><code>env</code>代码块需要的参数</li>
</ol>
<p>你可以这样对自己的骰娘做个测试<del>（我称此方法为简式测试法）</del>：</p>
<ol>
<li>在 <code>DiceQQ\plugin\</code>下新建 <code>test.lua</code>。</li>
<li>在 <code>DiceQQ\plugin\test.lua</code>内写上如下代码：</li>
</ol>
<figure class="highlight lua"><figcaption><span>test.lua</span></figcaption><table><tr><td class="code"><pre><span class="line">msg_order=&#123;[<span class="string">&quot;@&quot;</span>]=<span class="string">&quot;main&quot;</span>&#125;</span><br><span class="line"><span class="keyword">local</span> main = <span class="function"><span class="keyword">function</span><span class="params">(msg)</span></span> <span class="keyword">return</span> <span class="built_in">load</span>(msg.fromMsg:<span class="built_in">sub</span>(<span class="number">2</span>))() <span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<ol>
<li>对骰娘发送 <code>.system load</code>命令重载。</li>
<li>对骰娘发送 <code>@return msg.fromQQ</code>，你将会收到自己的QQ。</li>
</ol>
<p>其实到这里就是<span class="exturl" data-url="aHR0cHM6Ly9mb3J1bS5rb2tvbmEudGVjaC9kLzEzODY=">【指令脚本/抛砖引玉】Load: 在聊天窗口使用lua<i class="fa fa-external-link-alt"></i></span> 的全部内容了。下面进入正题。<br>因为昨天，哦不，今天凌晨喝的有点多，又很奇怪的是我醒的特别早，我大概五点就醒了，然后开始敲代码，也许是酒精的作用吧，我对krypton进行了如下无厘头测试：</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">tbl=&#123;&#125;</span><br><span class="line">tbl[<span class="string">&#x27;第1层&#x27;</span>]=<span class="string">&quot;tbl[\&quot;tbl[&#x27;第2层&#x27;]\&quot;]&quot;</span></span><br><span class="line">tbl[<span class="string">&quot;tbl[&#x27;第2层&#x27;]&quot;</span>]=<span class="string">&quot;第3层&quot;</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">load</span>(<span class="string">&quot;return &quot;</span>..tbl[<span class="string">&#x27;第1层&#x27;</span>])()</span><br></pre></td></tr></table></figure>

<p>猜猜返回了什么？</p>
<p>我又进行了推导：</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">tbl=&#123;&#125;</span><br><span class="line">tbl[<span class="string">&#x27;第1层&#x27;</span>]=<span class="string">&quot;tbl[\&quot;tbl[&#x27;第2层&#x27;]\&quot;]&quot;</span></span><br><span class="line">tbl[<span class="string">&quot;tbl[&#x27;第2层&#x27;]&quot;</span>]=<span class="string">&quot;tbl[\&quot;tbl[&#x27;第3层&#x27;]\&quot;]&quot;</span></span><br><span class="line">tbl[<span class="string">&quot;tbl[\&quot;tbl[&#x27;第3层&#x27;]\&quot;]&quot;</span>]=<span class="string">&quot;第4层&quot;</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">load</span>(<span class="string">&quot;return &quot;</span>..tbl[<span class="string">&#x27;第1层&#x27;</span>])()</span><br></pre></td></tr></table></figure>

<p>又返回了什么？<br>希望能有人好好运用吧。<del>再不行就只能我自己写了()</del></p>
<center><b>教程结束。</b></center>
]]></content>
      <categories>
        <category>技术</category>
        <category>Lua</category>
      </categories>
      <tags>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>wiki of Midido</title>
    <url>/2022/10/03/wiki-of-Midido/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="2d26928378658bcb6da1072eeefed022687346ad54e942b163f6a17a516eb0fc"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码，查看文章</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>技术</category>
        <category>Lua</category>
      </categories>
      <tags>
        <tag>Dice</tag>
      </tags>
  </entry>
  <entry>
    <title>Colorful-Error-Repo</title>
    <url>/2022/08/17/Colorful-Error-Repo/</url>
    <content><![CDATA[<details class="note "><summary><p>secondary</p>
</summary>
<p><strong>Colorful-Error-Repo</strong></p>
<blockquote>
<p>简单的自定义报错回复模板.</p>
</blockquote>

</details>


<h1 id="❡Colorful-Error-Repo-来点不一样的报错吧"><a href="#❡Colorful-Error-Repo-来点不一样的报错吧" class="headerlink" title="❡Colorful-Error-Repo:来点不一样的报错吧"></a><a href="">❡</a>Colorful-Error-Repo:来点不一样的报错吧</h1><blockquote>
<p>使用《署名—禁止演绎 4.0 协议国际版》（CC BY-ND 4.0）进行授权。<br><span class="exturl" data-url="aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5kLzQuMC9sZWdhbGNvZGUuemgtSGFucw==">https://creativecommons.org/licenses/by-nd/4.0/legalcode.zh-Hans<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<blockquote>
<p>续之前的弦：<span class="exturl" data-url="aHR0cHM6Ly9mb3J1bS5rb2tvbmEudGVjaC9kLzExNjgtemhpLWxpbmctamlhby1iZW4tc2kteGlhbmctdG91LW5pYW5nLXppLWppYW4tZ2VuZy1sYW4tZGUtcGFuLWR1YW4tYmFvLWN1by1iaW5nLXppLWRpbmcteWktaHVpLWZ1">骰娘自检/判断报错并自定义回复<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<hr>
<h2 id="一、基本信息"><a href="#一、基本信息" class="headerlink" title="一、基本信息"></a>一、基本信息</h2><ul>
<li>作者： 简律纯</li>
<li>联系方式：qq:a2c29k9</li>
<li>版本：v1.0</li>
<li>更新日期：暂无</li>
<li>关键词：暂无</li>
<li>许可协议：CC BY-ND 4.0</li>
</ul>
<hr>
<h2 id="二-、需求"><a href="#二-、需求" class="headerlink" title="二 、需求"></a>二 、需求</h2><ul>
<li><input disabled="" type="checkbox"> 更多的lua报错类型列表</li>
<li><input disabled="" type="checkbox"> 更多时间</li>
</ul>
<hr>
<h2 id="三、准备"><a href="#三、准备" class="headerlink" title="三、准备"></a>三、准备</h2><p>1.暂时用了手册内色子整理的常见报错信息说明。</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="built_in">module</span> <span class="string">&#x27;%s&#x27;</span> <span class="keyword">not</span> found:</span><br><span class="line">	no field <span class="built_in">package</span>.<span class="built_in">preload</span>[<span class="string">&#x27;%s&#x27;</span>]</span><br><span class="line">	no file </span><br><span class="line"><span class="comment">-- 没有把被引用的lua或dll文件放在指定位置（多见于require与loadLua）</span></span><br><span class="line"><span class="comment">-- 解决方式：把所需文件放入Dice存档目录/plugin/或Diceki/lua/，dll文件或require对象必须置于后者</span></span><br><span class="line">attempt to call a <span class="literal">nil</span> value (global <span class="string">&#x27;%s&#x27;</span>)</span><br><span class="line"><span class="comment">-- 将空变量%s用作函数（global表示被调用的是全局变量，local表示本地变量，method表示索引方法）</span></span><br><span class="line">attempt to index a <span class="literal">nil</span> value (global <span class="string">&#x27;%s&#x27;</span>)</span><br><span class="line"><span class="comment">-- 对空变量%s使用索引（只有table等结构可以索引，形如msg.fromMsg）</span></span><br><span class="line">attempt to concatenate a <span class="literal">nil</span> value (<span class="keyword">local</span> <span class="string">&#x27;%s&#x27;</span>)</span><br><span class="line"><span class="comment">-- 使用..连接字符串时连接了一个空变量%s</span></span><br><span class="line">bad argument #<span class="number">1</span> to <span class="string">&#x27;%s&#x27;</span> (<span class="built_in">string</span> expected, got <span class="literal">nil</span>)</span><br><span class="line"><span class="comment">-- 函数%s的第1个参数类型错误，要求类型为string，但实际传入的参数为nil。特别地，got nil表示输入参数为nil或缺少参数</span></span><br><span class="line">value expected</span><br><span class="line"><span class="comment">-- 要求参数，但没有传入</span></span><br><span class="line">attempt to perform arithmetic on a <span class="literal">nil</span> value (global <span class="string">&#x27;%s&#x27;</span>)</span><br><span class="line"><span class="comment">-- 将一个空变量%s当做数字表示</span></span><br><span class="line">bad argument #<span class="number">5</span> to <span class="string">&#x27;format&#x27;</span>(number has no integer representation)</span><br><span class="line"><span class="comment">-- 函数format的第5个参数类型错误，要求是整数，但传入是小数，或者是其余类型不能化为整数</span></span><br><span class="line"><span class="string">&#x27;&#125;&#x27;</span> expected (to <span class="built_in">close</span> <span class="string">&#x27;&#123;&#x27;</span> at line <span class="number">169</span>) near <span class="string">&#x27;%s&#x27;</span></span><br><span class="line"><span class="comment">-- 脚本第169行的左花括号缺少配对的右花括号。此错误也可以由表格内缺少逗号分隔、括号外的中文等原因造成</span></span><br><span class="line"><span class="string">&#x27;end&#x27;</span> expected (to <span class="built_in">close</span> <span class="string">&#x27;function&#x27;</span> at line <span class="number">240</span>) near &lt;eof&gt;</span><br><span class="line"><span class="comment">-- 脚本第240行的function缺少收尾的end，&lt;eof&gt;表示文件结束（找到文件末也没找到）</span></span><br><span class="line"><span class="string">&#x27;then&#x27;</span> expected near <span class="string">&#x27;end&#x27;</span></span><br><span class="line"><span class="comment">-- if then end逻辑结构缺少then</span></span><br><span class="line">unexpected symbol near <span class="string">&#x27;%s&#x27;</span></span><br><span class="line"><span class="comment">-- 符号%s边有无法识读的符号，比如中文字符</span></span><br><span class="line">attempt to get length of a <span class="literal">nil</span> value (<span class="keyword">local</span> <span class="string">&#x27;tab&#x27;</span>)</span><br><span class="line"><span class="comment">-- 对空变量tab作取长度运算（#）</span></span><br><span class="line">attempt to add a <span class="string">&#x27;string&#x27;</span> with a <span class="string">&#x27;string&#x27;</span></span><br><span class="line"><span class="comment">-- 对(不能化为数字的)字符串用加法&#x27;+&#x27;（字符串只能用连接&#x27;..&#x27;）</span></span><br><span class="line">attempt to compare number with <span class="built_in">string</span></span><br><span class="line"><span class="comment">-- 对数字和(不能化为数字的)字符串用比较运算符</span></span><br><span class="line"><span class="built_in">error</span> loading <span class="built_in">module</span> <span class="string">&#x27;%s&#x27;</span> from file</span><br><span class="line"><span class="comment">-- 使用require &quot;%s&quot;时加载出错</span></span><br><span class="line">no visible label <span class="string">&#x27;%s&#x27;</span> <span class="keyword">for</span> &lt;<span class="keyword">goto</span>&gt; at line </span><br><span class="line"><span class="comment">-- 在循环结构中跳转不存在的节点</span></span><br><span class="line">invalid option <span class="string">&#x27;%s&#x27;</span></span><br><span class="line"><span class="comment">-- 传入的参数不是string或不在给定的字符串列表中</span></span><br></pre></td></tr></table></figure>

<h2 id="四、引用清单"><a href="#四、引用清单" class="headerlink" title="四、引用清单"></a>四、引用清单</h2><ol>
<li><span class="exturl" data-url="aHR0cHM6Ly92MmRvY3Mua29rb25hLnRlY2gvemgvbGF0ZXN0L0RldmVsb3BfTWFudWFsLmh0bWwjaWQyMg==">https://v2docs.kokona.tech/zh/latest/Develop_Manual.html#id22<i class="fa fa-external-link-alt"></i></span></li>
</ol>
]]></content>
      <categories>
        <category>技术</category>
        <category>Lua</category>
      </categories>
      <tags>
        <tag>Dice</tag>
      </tags>
  </entry>
  <entry>
    <title>lua-colors</title>
    <url>/2022/08/16/lua-colors.howto/</url>
    <content><![CDATA[<div class="note primary"><p><strong>lua-colors</strong></p>
<blockquote>
<p>用lua解释色彩原理.</p>
</blockquote>
</div>

<p>颜色通常在软件中通过其在RGB（红-绿-蓝）颜色空间中的坐标进行编码。 不幸的是，RGB色彩空间非常不直观，另外某些颜色协调的原则在RGB中不容易表达出来。 HSL（色相-饱和度-亮度）色彩空间解决了这两个问题。这个库允许你在HSL色彩空间中处理颜色，计算协调的图案，然后转换为RGB。 (你可以在 <span class="exturl" data-url="aHR0cDovL3d3dy53b3JxeC5jb20vY29sb3IvY29sb3Jfd2hlZWwuaHRt">worqx.com<i class="fa fa-external-link-alt"></i></span> 看到更多关于色彩协调的相关内容)</p>
<h2 id="HSL-色彩空间"><a href="#HSL-色彩空间" class="headerlink" title="HSL 色彩空间"></a>HSL 色彩空间</h2><p>颜色在HSL中由三个值编码：色相，饱和度和亮度。</p>
<p><strong>亮度(Lightness)</strong> 正好与颜色的亮暗相反。 白色亮度为1，黑色亮度为0。 其他颜色介于它们之间。</p>
<p><strong>饱和度(Saturation)</strong> 代表颜色的强度，它显示颜色与灰色的距离。 以下是不同饱和度和亮度的红色渐变：</p>
<table>
 <tr>&nbsp;</tr>
 <tr><td colspan='11' style='text-align:center'>Lightness</td></tr>
 <tr><td>&nbsp</td><td>&nbsp</td>
<td style="width:40px; text-align: right; border: 1px solid gray;">0.0</td>
<td style="width:40px; text-align: right; border: 1px solid gray;">0.1</td>
<td style="width:40px; text-align: right; border: 1px solid gray;">0.2</td>
<td style="width:40px; text-align: right; border: 1px solid gray;">0.3</td>
<td style="width:40px; text-align: right; border: 1px solid gray;">0.4</td>

<td style="width:40px; text-align: right; border: 1px solid gray;">0.5</td>
<td style="width:40px; text-align: right; border: 1px solid gray;">0.6</td>
<td style="width:40px; text-align: right; border: 1px solid gray;">0.7</td>
<td style="width:40px; text-align: right; border: 1px solid gray;">0.8</td>
<td style="width:40px; text-align: right; border: 1px solid gray;">0.9</td>
<td style="width:40px; text-align: right; border: 1px solid gray;">1.0</td>
</tr>
 <tr>
  <td rowspan='11' style='vertical-align:center'>Saturation</td>

<td style="width:40px; text-align: right; border: 1px solid gray;">0.0</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #000000;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #191919;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #333333;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #4c4c4c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #666666;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #999999;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #b2b2b2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #cbcbcb;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e5e5e5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #fefefe;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">0.1</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #000000;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #1c1616;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #382d2d;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #544444;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #705b5b;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #8c7272;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a38e8e;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #baaaaa;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d1c6c6;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e8e2e2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #fefefe;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">0.2</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #000000;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #1e1414;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #3d2828;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #5b3d3d;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #7a5151;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #996666;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ad8484;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #c1a3a3;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d6c1c1;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #eae0e0;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #fffefe;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">0.3</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #000000;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #211111;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #422323;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #633535;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #844747;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a55959;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #b77a7a;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #c99b9b;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #dbbcbc;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #eddddd;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #feffff;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">0.4</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #000000;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #230f0f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #471e1e;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #6b2d2d;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #8e3d3d;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #b24c4c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #c17070;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d19393;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e0b7b7;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #efdbdb;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #fffefe;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">0.5</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #000000;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #260c0c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #4c1919;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #722626;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #993232;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #bf3f3f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #cc6565;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d88c8c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e5b2b2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f2d8d8;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #fffefe;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">0.6</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #000000;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #280a0a;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #511414;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #7a1e1e;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #a32828;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #cc3232;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d65b5b;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e08484;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #eaadad;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f4d6d6;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #fffefe;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">0.7</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #000000;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #2b0707;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #560f0f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #821616;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #ad1e1e;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d82626;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e05151;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e87c7c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #efa8a8;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f7d3d3;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #fefefe;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">0.8</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #000000;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #2d0505;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #5b0a0a;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #890f0f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #b71414;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e51919;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ea4747;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ef7575;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f4a3a3;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f9d1d1;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #fffefe;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">0.9</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #000000;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #300202;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #600505;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #910707;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #c10a0a;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f20c0c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f43d3d;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f76d6d;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f99e9e;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #fccece;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #fffefe;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">1.0</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #000000;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #330000;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #660000;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #990000;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; color: #ffffff; background: #cc0000;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ff0000;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ff3232;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #fe6666;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ff9898;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ffcbcb;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #fffefe;">&nbsp;</td>
 </tr>
</table>

<p><strong>色相/色调(Hue)</strong> 是颜色的“color”：它让“绿色”与“红色”不同。色相 也可以表示为介于 0 和 1 之间的数字，但此库使用从 0 到 360 的值。<br>与亮度和饱和度不同，hue __loops__：色相360实际上与 0（红色）相同。</p>
<table>

 <tr><td colspan='11' style='text-align:center'>Saturation</td></tr>
 <tr><td>&nbsp;</td><td>&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray;">1.0</td>
<td style="width:40px; text-align: right; border: 1px solid gray;">0.9</td>
<td style="width:40px; text-align: right; border: 1px solid gray;">0.8</td>
<td style="width:40px; text-align: right; border: 1px solid gray;">0.7</td>
<td style="width:40px; text-align: right; border: 1px solid gray;">0.6</td>
<td style="width:40px; text-align: right; border: 1px solid gray;">0.5</td>

<td style="width:40px; text-align: right; border: 1px solid gray;">0.4</td>
<td style="width:40px; text-align: right; border: 1px solid gray;">0.3</td>
<td style="width:40px; text-align: right; border: 1px solid gray;">0.2</td>
<td style="width:40px; text-align: right; border: 1px solid gray;">0.1</td>
<td style="width:40px; text-align: right; border: 1px solid gray;">0.0</td>
 </tr>
 <tr>
  <td rowspan='37' width='100px' style='vertical-align:center'>Hue</td>

<td style="width:40px; text-align: right; border: 1px solid gray;">0</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ff0000;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f20c0c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e51919;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d82626;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #cc3232;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #bf3f3f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #b24c4c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a55959;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #996565;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #8c7272;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">10</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ff2a00;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f2330c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e53b19;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d84326;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #cc4c32;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #bf553f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #b25d4c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a56559;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #996e65;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #8c7672;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">20</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ff5500;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f2590c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e55d19;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d86126;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #cc6632;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #bf6a3f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #b26e4c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a57259;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #997665;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #8c7b72;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">30</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ff7f00;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f27f0c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e57f19;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d87f26;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #cc7f32;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #bf7f3f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #b27f4c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a57f59;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #997f65;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #8c7f72;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">40</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ffaa00;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f2a50c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e5a119;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d89d26;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #cc9932;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #bf943f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #b2904c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a58c59;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #998865;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #8c8372;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">50</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ffd400;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f2cc0c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e5c319;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d8bb26;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ccb232;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #bfaa3f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #b2a14c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a59959;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #999065;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #8c8872;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">60</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #feff00;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f2f20c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e5e519;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d8d826;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #cbcc32;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #bfbf3f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #b2b24c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a5a559;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #999965;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #8c8c72;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">70</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d4ff00;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #cbf20c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #c3e519;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #bad826;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #b2cc32;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a9bf3f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a1b24c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #99a559;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #909965;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #888c72;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">80</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a9ff00;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a5f20c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a1e519;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #9dd826;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #98cc32;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #94bf3f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #90b24c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #8ca559;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #889965;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #838c72;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">90</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7fff00;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7ff20c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7fe519;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7fd826;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7fcc32;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7fbf3f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7fb24c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7fa559;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f9965;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f8c72;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">100</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #54ff00;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #59f20c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #5de519;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #61d826;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #65cc32;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #6abf3f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #6eb24c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #72a559;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #769965;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7b8c72;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">110</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #2aff00;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #33f20c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #3be519;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #44d826;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #4ccc32;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #55bf3f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #5db24c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #65a559;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #6e9965;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #768c72;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">120</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #00ff00;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #0cf20c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #19e519;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #26d826;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #32cc32;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #3fbf3f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #4cb24c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #59a559;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #659965;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #728c72;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">130</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #00ff2a;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #0cf233;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #19e53b;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #26d844;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #32cc4c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #3fbf55;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #4cb25d;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #59a565;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #65996e;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #728c76;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">140</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #00ff55;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #0cf259;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #19e55d;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #26d861;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #32cc66;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #3fbf6a;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #4cb26e;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #59a572;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #659977;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #728c7b;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">150</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #00ff7f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #0cf27f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #19e57f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #26d87f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #32cc7f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #3fbf7f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #4cb27f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #59a57f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #65997f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #728c7f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">160</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #00ffaa;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #0cf2a5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #19e5a1;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #26d89d;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #32cc99;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #3fbf94;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #4cb290;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #59a58c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #659988;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #728c83;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">170</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #00ffd4;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #0cf2cc;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #19e5c3;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #26d8bb;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #32ccb2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #3fbfaa;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #4cb2a1;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #59a599;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #659990;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #728c88;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">180</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #00feff;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #0cf2f2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #19e5e5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #26d8d8;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #32cbcc;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #3fbfbf;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #4cb2b2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #59a5a5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #659999;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #728c8c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">190</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #00d4ff;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #0ccbf2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #19c3e5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #26bad8;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #32b2cc;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #3fa9bf;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #4ca1b2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #5999a5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #659099;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #72888c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">200</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #00a9ff;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #0ca5f2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #19a1e5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #269dd8;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #3298cc;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #3f94bf;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #4c90b2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #598ca5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #658899;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #72838c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">210</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #007fff;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #0c7ff2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #197fe5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #267fd8;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #327fcc;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #3f7fbf;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #4c7fb2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #597fa5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #657f99;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #727f8c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">220</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #0054ff;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #0c59f2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #195de5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #2661d8;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #3265cc;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #3f6abf;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #4c6eb2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #5972a5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #657699;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #727b8c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">230</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #002aff;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #0c33f2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #193be5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #2644d8;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #324ccc;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #3f55bf;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #4c5db2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #5965a5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #656e99;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #72768c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">240</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #0000ff;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #0c0cf2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #1919e5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #2626d8;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #3232cc;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #3f3fbf;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #4c4cb2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #5959a5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #656599;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #72728c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">250</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #2a00ff;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #320cf2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #3b19e5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #4326d8;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #4c32cc;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #543fbf;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #5d4cb2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #6559a5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #6e6599;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #76728c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">260</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #5500ff;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #590cf2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #5d19e5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #6126d8;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #6632cc;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #6a3fbf;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #6e4cb2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7259a5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #776599;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7b728c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">270</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f00ff;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f0cf2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f19e5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f26d8;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f32cc;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f3fbf;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f4cb2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f59a5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f6599;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f728c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">280</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #aa00ff;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a50cf2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a119e5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #9d26d8;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #9932cc;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #943fbf;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #904cb2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #8c59a5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #886599;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #83728c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">290</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d400ff;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #cb0cf2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #c319e5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ba26d8;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #b232cc;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a93fbf;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a14cb2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #9959a5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #906599;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #88728c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">300</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ff00fe;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f20cf2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e519e5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d826d8;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #cc32cb;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #bf3fbf;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #b24cb2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a559a5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #996599;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #8c728c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">310</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ff00d4;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f20ccb;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e519c3;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d826ba;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #cc32b2;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #bf3fa9;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #b24ca1;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a55998;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #996590;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #8c7287;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">320</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ff00a9;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f20ca5;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e519a1;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d8269d;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #cc3298;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #bf3f94;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #b24c90;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a5598c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #996588;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #8c7283;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">330</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ff007f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f20c7f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e5197f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d8267f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #cc327f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #bf3f7f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #b24c7f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a5597f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #99657f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #8c727f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">340</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ff0054;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f20c59;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e5195d;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d82661;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #cc3265;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #bf3f6a;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #b24c6e;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a55972;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #996576;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #8c727b;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">350</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ff002a;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f20c33;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e5193b;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d82644;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #cc324c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #bf3f55;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #b24c5d;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a55965;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #99656e;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #8c7276;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
 <tr>

<td style="width:40px; text-align: right; border: 1px solid gray;">360</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #ff0000;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #f20c0c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #e51919;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #d82626;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #cc3232;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #bf3f3f;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #b24c4c;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #a55959;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #996565;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #8c7272;">&nbsp;</td>
<td style="width:40px; text-align: right; border: 1px solid gray; background: #7f7f7f;">&nbsp;</td>
 </tr>
</table>

<h2 id="使用颜色进行-HSL-计算"><a href="#使用颜色进行-HSL-计算" class="headerlink" title="使用颜色进行 HSL 计算"></a>使用颜色进行 HSL 计算</h2><p>在HSL空间中创建颜色并将其转换为RGB。</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> colors = <span class="built_in">require</span>(<span class="string">&quot;colors&quot;</span>)</span><br><span class="line">c = colors.new(<span class="number">130</span>, <span class="number">.8</span>, <span class="number">0.3</span>) <span class="comment">-- 绿色，相当饱和，有点暗</span></span><br><span class="line"><span class="comment">-- =tostring(c)</span></span><br><span class="line"><span class="comment">-- #0f8923</span></span><br></pre></td></tr></table></figure>

<table>
 <tr><td width="100"></td><td width="160" style="background: #0f8923">&nbsp;</td></tr>
</table>

<p>你也可以通过它的RGB代码创建这些颜色：</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> colors = <span class="built_in">require</span>(<span class="string">&quot;colors&quot;</span>)</span><br><span class="line">c = colors.new(<span class="string">&quot;#0f8923&quot;</span>)</span><br><span class="line"><span class="comment">-- =tostring(c)</span></span><br><span class="line"><span class="comment">-- #0f8923</span></span><br></pre></td></tr></table></figure>

<p>当强制转换为字符串时，颜色将转换为其 RGB 形式：</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">=c</span><br><span class="line"><span class="comment">-- #0f8923</span></span><br></pre></td></tr></table></figure>

<table><tr><td width="100"></td><td width="160" style="background: #0f8923">&nbsp;</td></tr>
</table>

<p>查看 HSL ：</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(c.H, c.S, c.L)</span><br><span class="line"><span class="comment">-- 130     0.8     0.3</span></span><br></pre></td></tr></table></figure>

<p>改变饱和度：</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">=c:desaturate_by(<span class="number">.5</span>) <span class="comment">-- 将饱和度设置为饱和度*.5</span></span><br><span class="line"><span class="comment">-- #2d6b38</span></span><br></pre></td></tr></table></figure>
<table><tr><td width="100"></td><td width="160" style="background: #2d6b38">&nbsp;</td></tr>
</table>
    
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">=c:desaturate_to(<span class="number">.5</span>) <span class="comment">-- 将饱和度设置为 .5</span></span><br><span class="line"><span class="comment">-- #267233</span></span><br></pre></td></tr></table></figure>

<table><tr><td width="100"></td><td width="160" style="background: #267233">&nbsp;</td></tr>
</table>

<p>改变亮度：</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">=c:lighten_by(<span class="number">.5</span>) <span class="comment">-- 将亮度设置为亮度*.5</span></span><br><span class="line"><span class="comment">-- #14b72f</span></span><br></pre></td></tr></table></figure>

<table><tr><td width="100"></td><td width="160" style="background: #14b72f">&nbsp;</td></tr>
</table>

<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">=c:lighten_to(<span class="number">.5</span>) <span class="comment">-- 将亮度设置为 .5</span></span><br><span class="line"><span class="comment">-- #19e53b</span></span><br></pre></td></tr></table></figure>

<table><tr><td width="100"></td><td width="160" style="background: #19e53b">&nbsp;</td></tr>
</table>

<p>改变色相：</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">=c:hue_offset(<span class="number">180</span>) <span class="comment">-- 色调偏移 180</span></span><br><span class="line"><span class="comment">-- #890f75</span></span><br></pre></td></tr></table></figure>

<table><tr><td width="100"></td><td width="160" style="background: #890f75">&nbsp;</td></tr>
</table>

<h2 id="构建配色方案"><a href="#构建配色方案" class="headerlink" title="构建配色方案"></a>构建配色方案</h2><pre><code>要构建配色方案，我们通常从颜色开始，选择一种或多种匹配的颜色，然后从中获取阴影和色调。你可以在[worqx.com](http://www.worqx.com/color/combinations.htm)找到有关颜色组合的一些东西。
</code></pre>
<p>对于 <strong>单色</strong> 配色方案，我们只使用一开始的颜色以及它的色相和阴影：</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">tints = c:tints(<span class="number">5</span>) <span class="comment">-- 生成色相</span></span><br><span class="line"><span class="keyword">for</span> i,t <span class="keyword">in</span> <span class="built_in">ipairs</span>(tints) <span class="keyword">do</span> <span class="built_in">print</span>(t) <span class="keyword">end</span></span><br><span class="line"><span class="comment">-- #16c934</span></span><br><span class="line"><span class="comment">-- #3ee95a</span></span><br><span class="line"><span class="comment">-- #7ef091</span></span><br><span class="line"><span class="comment">-- #bef7c8</span></span><br><span class="line"><span class="comment">-- #ffffff</span></span><br></pre></td></tr></table></figure>

<table>
 <tr>
  <td width="100"></td>
  <td width="80" style="border:1px solid grey; background: #16c934">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #3ee95a">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #7ef091">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #bef7c8">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #ffffff">&nbsp;</td>
 </tr>
</table>

<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">shades = c:shades(<span class="number">5</span>) <span class="comment">-- 生成阴影</span></span><br><span class="line"><span class="keyword">for</span> i,s <span class="keyword">in</span> <span class="built_in">ipairs</span>(shades) <span class="keyword">do</span> <span class="built_in">print</span>(s) <span class="keyword">end</span></span><br><span class="line"><span class="comment">-- #0c6e1c</span></span><br><span class="line"><span class="comment">-- #095215</span></span><br><span class="line"><span class="comment">-- #06370e</span></span><br><span class="line"><span class="comment">-- #031b07</span></span><br><span class="line"><span class="comment">-- #000000</span></span><br></pre></td></tr></table></figure>

<table>
 <tr>
  <td width="100"></td>
  <td width="80" style="border:1px solid grey; background: #0c6e1c">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #095215">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #06370e">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #031b07">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #000000">&nbsp;</td>
 </tr>
</table>

<p>对于<strong>懒人</strong>方案，我们可以轻松得出懒人想要的颜色及其色调和阴影：</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">ctints = c:complementary():tints(<span class="number">5</span>) <span class="comment">-- 制作五种颜色的互补色</span></span><br><span class="line"><span class="keyword">for</span> i,t <span class="keyword">in</span> <span class="built_in">ipairs</span>(ctints) <span class="keyword">do</span> <span class="built_in">print</span>(t) <span class="keyword">end</span></span><br><span class="line"><span class="comment">-- #c916ac</span></span><br><span class="line"><span class="comment">-- #e93ecd</span></span><br><span class="line"><span class="comment">-- #f07edd</span></span><br><span class="line"><span class="comment">-- #f7beee</span></span><br><span class="line"><span class="comment">-- #fffff</span></span><br></pre></td></tr></table></figure>

<table>
  <td width="100"></td>
  <td width="80" style="border:1px solid grey; background: #16c934">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #3ee95a">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #7ef091">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #bef7c8">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #ffffff">&nbsp;</td>
 </tr>
 <tr>
  <td width="100"></td>
  <td width="80" style="border:1px solid grey; background: #c916ac">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #e93ecd">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #f07edd">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #f7beee">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #ffffff">&nbsp;</td>
 </tr>
</table>

<p>但是，为了减少对比度，我们可以坚持使用<strong>相邻</strong>的颜色：例如，起始颜色的 +/- 60度：</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">n1, n2 = c:neighbors(<span class="number">60</span>)  <span class="comment">-- 获得上下60个相邻的颜色</span></span><br><span class="line"><span class="keyword">for</span> i,t <span class="keyword">in</span> <span class="built_in">ipairs</span>(n1:tints()) <span class="keyword">do</span> <span class="built_in">print</span>(t) <span class="keyword">end</span></span><br><span class="line"><span class="comment">-- #16c98e</span></span><br><span class="line"><span class="comment">-- #3ee9b0</span></span><br><span class="line"><span class="comment">-- #7ef0ca</span></span><br><span class="line"><span class="comment">-- #bef7e4</span></span><br><span class="line"><span class="comment">-- #ffffff</span></span><br><span class="line"><span class="keyword">for</span> i,t <span class="keyword">in</span> <span class="built_in">ipairs</span>(n2:tints()) <span class="keyword">do</span> <span class="built_in">print</span>(t) <span class="keyword">end</span></span><br><span class="line"><span class="comment">-- #52c916</span></span><br><span class="line"><span class="comment">-- #77e93e</span></span><br><span class="line"><span class="comment">-- #a4f07e</span></span><br><span class="line"><span class="comment">-- #d1f7be</span></span><br><span class="line"><span class="comment">-- #ffffff</span></span><br></pre></td></tr></table></figure>

<table>
  <td width="100"></td>
  <td width="80" style="border:1px solid grey; background: #16c934">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #3ee95a">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #7ef091">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #bef7c8">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #ffffff">&nbsp;</td>
 </tr>
 <tr>
  <td width="100"></td>
  <td width="80" style="border:1px solid grey; background: #16acc9">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #3ecde9">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #7eddf0">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #beeef7">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #ffffff">&nbsp;</td>
 </tr>
 <tr>
  <td width="100"></td>
  <td width="80" style="border:1px solid grey; background: #acc916">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #cde93e">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #ddf07e">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #eef7be">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #ffffff">&nbsp;</td>
 </tr>
</table>

<p>或者，我们也可以生成一个拆分的互补配色方案：</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i,t <span class="keyword">in</span> <span class="built_in">ipairs</span>(c1:tints()) <span class="keyword">do</span> <span class="built_in">print</span>(t) <span class="keyword">end</span></span><br><span class="line"><span class="comment">-- #8e16c9</span></span><br><span class="line"><span class="comment">-- #b03ee9</span></span><br><span class="line"><span class="comment">-- #ca7ef0</span></span><br><span class="line"><span class="comment">-- #e4bef7</span></span><br><span class="line"><span class="comment">-- #ffffff</span></span><br><span class="line"><span class="keyword">for</span> i,t <span class="keyword">in</span> <span class="built_in">ipairs</span>(c2:tints()) <span class="keyword">do</span> <span class="built_in">print</span>(t) <span class="keyword">end</span></span><br><span class="line"><span class="comment">-- #c91652</span></span><br><span class="line"><span class="comment">-- #e93e77</span></span><br><span class="line"><span class="comment">-- #f07ea4</span></span><br><span class="line"><span class="comment">-- #f7bed1</span></span><br><span class="line"><span class="comment">-- #ffffff</span></span><br></pre></td></tr></table></figure>

<table>
  <td width="100"></td>
  <td width="80" style="border:1px solid grey; background: #16c934">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #3ee95a">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #7ef091">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #bef7c8">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #ffffff">&nbsp;</td>
 </tr>
 <tr>
  <td width="100"></td>
  <td width="80" style="border:1px solid grey; background: #8e16c9">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #b03ee9">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #ca7ef0">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #e4bef7">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #ffffff">&nbsp;</td>
 </tr>
 <tr>
  <td width="100"></td>
  <td width="80" style="border:1px solid grey; background: #c91652">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #e93e77">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #f07ea4">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #f7bed1">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #ffffff">&nbsp;</td>
 </tr>
</table>


<p>或者三色混合：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">t1, t2 &#x3D; c:triadic()</span><br><span class="line">for i,t in ipairs(t1:tints()) do print(t) end</span><br><span class="line">-- #3416c9</span><br><span class="line">-- #5a3ee9</span><br><span class="line">-- #917ef0</span><br><span class="line">-- #c8bef7</span><br><span class="line">-- #ffffff</span><br><span class="line">for i,t in ipairs(t2:tints()) do print(t) end</span><br><span class="line">-- #c93416</span><br><span class="line">-- #e95a3e</span><br><span class="line">-- #f0917e</span><br><span class="line">-- #f7c8be</span><br><span class="line">-- #ffffff</span><br></pre></td></tr></table></figure>

<table>
  <td width="100"></td>
  <td width="80" style="border:1px solid grey; background: #16c934">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #3ee95a">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #7ef091">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #bef7c8">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #ffffff">&nbsp;</td>
 </tr>
 <tr>
  <td width="100"></td>
  <td width="80" style="border:1px solid grey; background: #3416c9">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #5a3ee9">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #917ef0">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #c8bef7">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #ffffff">&nbsp;</td>
 </tr>
 <tr>
  <td width="100"></td>
  <td width="80" style="border:1px solid grey; background: #c93416">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #e95a3e">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #f0917e">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #f7c8be">&nbsp;</td>
  <td width="80" style="border:1px solid grey; background: #ffffff">&nbsp;</td>
 </tr>
</table>

]]></content>
      <categories>
        <category>技术</category>
        <category>Lua</category>
      </categories>
      <tags>
        <tag>颜色</tag>
      </tags>
  </entry>
  <entry>
    <title>table-module</title>
    <url>/2022/08/15/table-module/</url>
    <content><![CDATA[<div class="note success"><p><strong>table module</strong></p>
<blockquote>
<p>对数组操作函数的拓展，利用这些函数可以更好的进行数据操作。</p>
</blockquote>
</div>

<h1 id="table-module-更多的数组操作"><a href="#table-module-更多的数组操作" class="headerlink" title="table-module:更多的数组操作"></a>table-module:更多的数组操作</h1><blockquote>
<p>使用《署名—禁止演绎 4.0 协议国际版》（CC BY-ND 4.0）进行授权。<br><span class="exturl" data-url="aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5kLzQuMC8=">https://creativecommons.org/licenses/by-nd/4.0/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<hr>
<blockquote>
<p>[ toc ] 更多操作，更多的可能<del>猝死</del>。</p>
</blockquote>
<hr>
<h2 id="一、基本信息"><a href="#一、基本信息" class="headerlink" title="一、基本信息"></a>一、基本信息</h2><ul>
<li><a href="">二次修改</a>作者： 简律纯</li>
<li>联系方式：qq:a2c29k9</li>
<li>版本：v1.0</li>
<li>更新日期：暂无</li>
<li>关键词：暂无</li>
<li>许可协议：CC BY-ND 4.0</li>
</ul>
<hr>
<table>
<thead>
<tr>
<th align="left">#</th>
<th align="center">函数名</th>
<th align="center">简单介绍</th>
</tr>
</thead>
<tbody><tr>
<td align="left">1</td>
<td align="center">table.nums</td>
<td align="center">计算表格包含的字段数量</td>
</tr>
<tr>
<td align="left">2</td>
<td align="center">table.keys</td>
<td align="center">返回指定表格中的所有键</td>
</tr>
<tr>
<td align="left">3</td>
<td align="center">table.values</td>
<td align="center">返回指定表格中的所有值</td>
</tr>
<tr>
<td align="left">4</td>
<td align="center">table.merge</td>
<td align="center">将来源表格中所有键及其值复制到目标表格对象中</td>
</tr>
<tr>
<td align="left">5</td>
<td align="center">table.indexof</td>
<td align="center">从表格中查找指定值，返回其索引</td>
</tr>
<tr>
<td align="left">6</td>
<td align="center">table.keyof</td>
<td align="center">从表格中查找指定值，返回其 key</td>
</tr>
<tr>
<td align="left">7</td>
<td align="center">table.removebyvalue</td>
<td align="center">从表格中删除指定值，返回删除的值的个数</td>
</tr>
<tr>
<td align="left">8</td>
<td align="center">table.map</td>
<td align="center">对表格中每一个值执行一次指定的函数，并用函数返回值更新表格内容</td>
</tr>
<tr>
<td align="left">9</td>
<td align="center">table.walk</td>
<td align="center">对表格中每一个值执行一次指定的函数，但不改变表格内容</td>
</tr>
<tr>
<td align="left">10</td>
<td align="center">table.filter</td>
<td align="center">对表格中每一个值执行一次指定的函数</td>
</tr>
<tr>
<td align="left">11</td>
<td align="center">table.unique</td>
<td align="center">遍历表格，确保其中的值唯一</td>
</tr>
</tbody></table>
<h2 id="二、详细介绍"><a href="#二、详细介绍" class="headerlink" title="二、详细介绍"></a>二、详细介绍</h2><h3 id="1-table-nums-t"><a href="#1-table-nums-t" class="headerlink" title="1.table.nums(t)"></a>1.table.nums(t)</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 计算表格包含的字段数量</span></span><br><span class="line"><span class="comment">-- @function [parent=#table] nums</span></span><br><span class="line"><span class="comment">-- @param table t 要检查的表格</span></span><br><span class="line"><span class="comment">-- @return integer#integer </span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- 计算表格包含的字段数量</span></span><br><span class="line"><span class="comment">-- Lua table 的 &quot;#&quot; 操作只对依次排序的数值下标数组有效，</span></span><br><span class="line"><span class="comment">-- table.nums() 则计算 table 中所有不为 nil 的值的个数。</span></span><br></pre></td></tr></table></figure>

<h3 id="2-table-keys-hashtable"><a href="#2-table-keys-hashtable" class="headerlink" title="2.table.keys(hashtable)"></a>2.table.keys(hashtable)</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 返回指定表格中的所有键</span></span><br><span class="line"><span class="comment">-- @function [parent=#table] keys</span></span><br><span class="line"><span class="comment">-- @param table hashtable 要检查的表格</span></span><br><span class="line"><span class="comment">-- @return table#table </span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- 返回指定表格中的所有键</span></span><br><span class="line"><span class="keyword">local</span> hashtable = &#123;a = <span class="number">1</span>, b = <span class="number">2</span>, c = <span class="number">3</span>&#125;</span><br><span class="line"><span class="keyword">local</span> keys = <span class="built_in">table</span>.keys(hashtable)</span><br><span class="line"><span class="comment">-- keys = &#123;&quot;a&quot;, &quot;b&quot;, &quot;c&quot;&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-table-values-hashtable"><a href="#3-table-values-hashtable" class="headerlink" title="3.table.values(hashtable)"></a>3.table.values(hashtable)</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 返回指定表格中的所有值</span></span><br><span class="line"><span class="comment">-- @function [parent=#table] values</span></span><br><span class="line"><span class="comment">-- @param table hashtable 要检查的表格</span></span><br><span class="line"><span class="comment">-- @return table#table </span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- 返回指定表格中的所有值</span></span><br><span class="line"><span class="keyword">local</span> hashtable = &#123;a = <span class="number">1</span>, b = <span class="number">2</span>, c = <span class="number">3</span>&#125;</span><br><span class="line"><span class="keyword">local</span> values = <span class="built_in">table</span>.values(hashtable)</span><br><span class="line"><span class="comment">-- values = &#123;1, 2, 3&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="4-table-merge-dest-src"><a href="#4-table-merge-dest-src" class="headerlink" title="4.table.merge(dest, src)"></a>4.table.merge(dest, src)</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 将来源表格中所有键及其值复制到目标表格对象中，如果存在同名键，则覆盖其值</span></span><br><span class="line"><span class="comment">-- @function [parent=#table] merge</span></span><br><span class="line"><span class="comment">-- @param table dest 目标表格</span></span><br><span class="line"><span class="comment">-- @param table src 来源表格</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- 将来源表格中所有键及其值复制到目标表格对象中，如果存在同名键，则覆盖其值</span></span><br><span class="line"><span class="keyword">local</span> dest = &#123;a = <span class="number">1</span>, b = <span class="number">2</span>&#125;</span><br><span class="line"><span class="keyword">local</span> src  = &#123;c = <span class="number">3</span>, d = <span class="number">4</span>&#125;</span><br><span class="line"><span class="built_in">table</span>.merge(dest, src)</span><br><span class="line"><span class="comment">-- dest = &#123;a = 1, b = 2, c = 3, d = 4&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="5-table-indexof-array-value-begin"><a href="#5-table-indexof-array-value-begin" class="headerlink" title="5.table.indexof(array, value, begin)"></a>5.table.indexof(array, value, begin)</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 从表格中查找指定值，返回其索引，如果没找到返回 false</span></span><br><span class="line"><span class="comment">-- @function [parent=#table] indexof</span></span><br><span class="line"><span class="comment">-- @param table array 表格</span></span><br><span class="line"><span class="comment">-- @param mixed value 要查找的值</span></span><br><span class="line"><span class="comment">-- @param integer begin 起始索引值</span></span><br><span class="line"><span class="comment">-- @return integer#integer </span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- 从表格中查找指定值，返回其索引，如果没找到返回 false</span></span><br><span class="line"><span class="keyword">local</span> array = &#123;<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">table</span>.indexof(array, <span class="string">&quot;b&quot;</span>)) <span class="comment">-- 输出 2</span></span><br></pre></td></tr></table></figure>

<h3 id="6-table-keyof-hashtable-value"><a href="#6-table-keyof-hashtable-value" class="headerlink" title="6.table.keyof(hashtable, value)"></a>6.table.keyof(hashtable, value)</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 从表格中查找指定值，返回其 key，如果没找到返回 nil</span></span><br><span class="line"><span class="comment">-- @function [parent=#table] keyof</span></span><br><span class="line"><span class="comment">-- @param table hashtable 表格</span></span><br><span class="line"><span class="comment">-- @param mixed value 要查找的值</span></span><br><span class="line"><span class="comment">-- @return string#string  该值对应的 key</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- 从表格中查找指定值，返回其 key，如果没找到返回 nil</span></span><br><span class="line"><span class="keyword">local</span> hashtable = &#123;name = <span class="string">&quot;dualface&quot;</span>, comp = <span class="string">&quot;chukong&quot;</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">table</span>.keyof(hashtable, <span class="string">&quot;chukong&quot;</span>)) <span class="comment">-- 输出 comp</span></span><br></pre></td></tr></table></figure>

<h3 id="7-table-removebyvalue-array-value-removeall"><a href="#7-table-removebyvalue-array-value-removeall" class="headerlink" title="7.table.removebyvalue(array, value, removeall)"></a>7.table.removebyvalue(array, value, removeall)</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 从表格中删除指定值，返回删除的值的个数</span></span><br><span class="line"><span class="comment">-- @function [parent=#table] removebyvalue</span></span><br><span class="line"><span class="comment">-- @param table array 表格</span></span><br><span class="line"><span class="comment">-- @param mixed value 要删除的值</span></span><br><span class="line"><span class="comment">-- @param boolean removeall 是否删除所有相同的值</span></span><br><span class="line"><span class="comment">-- @return integer#integer </span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- 从表格中删除指定值，返回删除的值的个数</span></span><br><span class="line"><span class="keyword">local</span> array = &#123;<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;c&quot;</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">table</span>.removebyvalue(array, <span class="string">&quot;c&quot;</span>, <span class="literal">true</span>)) <span class="comment">-- 输出 2</span></span><br></pre></td></tr></table></figure>

<h3 id="8-table-map-t-fn"><a href="#8-table-map-t-fn" class="headerlink" title="8.table.map(t, fn)"></a>8.table.map(t, fn)</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 对表格中每一个值执行一次指定的函数，并用函数返回值更新表格内容</span></span><br><span class="line"><span class="comment">-- @function [parent=#table] map</span></span><br><span class="line"><span class="comment">-- @param table t 表格</span></span><br><span class="line"><span class="comment">-- @param function fn 函数</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- 对表格中每一个值执行一次指定的函数，并用函数返回值更新表格内容</span></span><br><span class="line"><span class="keyword">local</span> t = &#123;name = <span class="string">&quot;dualface&quot;</span>, comp = <span class="string">&quot;chukong&quot;</span>&#125;</span><br><span class="line"><span class="built_in">table</span>.map(t, <span class="function"><span class="keyword">function</span><span class="params">(v, k)</span></span></span><br><span class="line">    <span class="comment">-- 在每一个值前后添加括号</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;[&quot;</span> .. v .. <span class="string">&quot;]&quot;</span></span><br><span class="line"><span class="keyword">end</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 输出修改后的表格内容</span></span><br><span class="line"><span class="keyword">for</span> k, v <span class="keyword">in</span> <span class="built_in">pairs</span>(t) <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">print</span>(k, v)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">-- 输出</span></span><br><span class="line"><span class="comment">-- name [dualface]</span></span><br><span class="line"><span class="comment">-- comp [chukong]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- fn 参数指定的函数具有两个参数，并且返回一个值。原型如下：</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">map_function</span><span class="params">(value, key)</span></span></span><br><span class="line">    <span class="keyword">return</span> value</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<h3 id="9-table-walk-t-fn"><a href="#9-table-walk-t-fn" class="headerlink" title="9.table.walk(t, fn)"></a>9.table.walk(t, fn)</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 对表格中每一个值执行一次指定的函数，但不改变表格内容</span></span><br><span class="line"><span class="comment">-- @function [parent=#table] walk</span></span><br><span class="line"><span class="comment">-- @param table t 表格</span></span><br><span class="line"><span class="comment">-- @param function fn 函数</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- 对表格中每一个值执行一次指定的函数，但不改变表格内容</span></span><br><span class="line"><span class="keyword">local</span> t = &#123;name = <span class="string">&quot;dualface&quot;</span>, comp = <span class="string">&quot;chukong&quot;</span>&#125;</span><br><span class="line"><span class="built_in">table</span>.walk(t, <span class="function"><span class="keyword">function</span><span class="params">(v, k)</span></span></span><br><span class="line">    <span class="comment">-- 输出每一个值</span></span><br><span class="line">    <span class="built_in">print</span>(v)</span><br><span class="line"><span class="keyword">end</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- fn 参数指定的函数具有两个参数，没有返回值。原型如下：</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">map_function</span><span class="params">(value, key)</span></span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<h3 id="10-table-filter-t-fn"><a href="#10-table-filter-t-fn" class="headerlink" title="10.table.filter(t, fn)"></a>10.table.filter(t, fn)</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 对表格中每一个值执行一次指定的函数，如果该函数返回 false，则对应的值会从表格中删除</span></span><br><span class="line"><span class="comment">-- @function [parent=#table] filter</span></span><br><span class="line"><span class="comment">-- @param table t 表格</span></span><br><span class="line"><span class="comment">-- @param function fn 函数</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- 对表格中每一个值执行一次指定的函数，如果该函数返回 false，则对应的值会从表格中删除</span></span><br><span class="line"><span class="keyword">local</span> t = &#123;name = <span class="string">&quot;dualface&quot;</span>, comp = <span class="string">&quot;chukong&quot;</span>&#125;</span><br><span class="line"><span class="built_in">table</span>.filter(t, <span class="function"><span class="keyword">function</span><span class="params">(v, k)</span></span></span><br><span class="line">    <span class="keyword">return</span> v ~= <span class="string">&quot;dualface&quot;</span> <span class="comment">-- 当值等于 dualface 时过滤掉该值</span></span><br><span class="line"><span class="keyword">end</span>)</span><br><span class="line"><span class="comment">-- 输出修改后的表格内容</span></span><br><span class="line"><span class="keyword">for</span> k, v <span class="keyword">in</span> <span class="built_in">pairs</span>(t) <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">print</span>(k, v)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">-- 输出</span></span><br><span class="line"><span class="comment">-- comp chukong</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- fn 参数指定的函数具有两个参数，并且返回一个 boolean 值。原型如下：</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">map_function</span><span class="params">(value, key)</span></span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span> <span class="keyword">or</span> <span class="literal">false</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<h3 id="11-table-unique-array"><a href="#11-table-unique-array" class="headerlink" title="11.table.unique(array)"></a>11.table.unique(array)</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 遍历表格，确保其中的值唯一</span></span><br><span class="line"><span class="comment">-- @function [parent=#table] unique</span></span><br><span class="line"><span class="comment">-- @param table array 数组</span></span><br><span class="line"><span class="comment">-- @return table#table  包含所有唯一值的新表格</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- 遍历表格，确保其中的值唯一</span></span><br><span class="line"><span class="keyword">local</span> t = &#123;<span class="string">&quot;a&quot;</span>, <span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>&#125; <span class="comment">-- 重复的 a 会被过滤掉</span></span><br><span class="line"><span class="keyword">local</span> n = <span class="built_in">table</span>.unique(t)</span><br><span class="line"><span class="keyword">for</span> k, v <span class="keyword">in</span> <span class="built_in">pairs</span>(n) <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">print</span>(v)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">-- 输出</span></span><br><span class="line"><span class="comment">-- a</span></span><br><span class="line"><span class="comment">-- b</span></span><br><span class="line"><span class="comment">-- c</span></span><br></pre></td></tr></table></figure>

<hr>
<h2 id="三、下载"><a href="#三、下载" class="headerlink" title="三、下载"></a>三、下载</h2><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0EyQzI5SzkvQTJDMjlLOS5naXRodWIuaW8vcmVsZWFzZXMvZG93bmxvYWQvbW9kdWxlL3RhYmxlX21vZHVsZS56aXA=">table-module.zip<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>技术</category>
        <category>Lua</category>
      </categories>
      <tags>
        <tag>Dice</tag>
      </tags>
  </entry>
  <entry>
    <title>Midido 一个更非人性化的手搓midi库</title>
    <url>/2022/08/05/Midido/</url>
    <content><![CDATA[<div class="note success"><p><strong>Midido</strong><br>简单实现用lua输出midi的库。</p>
</div>

<blockquote>
<p>使用《署名—非商业性使用—相同方式共享 4.0 协议国际版》（CC BY-NC-SA 4.0）进行授权。<br><span class="exturl" data-url="aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC9sZWdhbGNvZGUuemgtSGFucw==">https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode.zh-Hans<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<table>
<thead>
<tr>
<th align="left">Midido To-do list</th>
<th align="center">描述</th>
<th align="center">状态</th>
</tr>
</thead>
<tbody><tr>
<td align="left">wiki</td>
<td align="center">用法wiki</td>
<td align="center">x</td>
</tr>
<tr>
<td align="left">Keyboards’ pack</td>
<td align="center">键位包</td>
<td align="center">敬请期待</td>
</tr>
<tr>
<td align="left">songs’ e.g.</td>
<td align="center">歌曲工程示例</td>
<td align="center">x</td>
</tr>
</tbody></table>
<h2 id="一、基本信息"><a href="#一、基本信息" class="headerlink" title="一、基本信息"></a>一、基本信息</h2><blockquote>
<ul>
<li>作者： 简律纯</li>
</ul>
</blockquote>
<ul>
<li>联系方式：qq:a2c29k9</li>
<li>版本：v1.0</li>
<li>更新日期：暂无</li>
<li>关键词：暂无</li>
<li>许可协议：CC BY-NC-SA 4.0</li>
</ul>
<h2 id="二、详细介绍"><a href="#二、详细介绍" class="headerlink" title="二、详细介绍"></a>二、详细介绍</h2><h3 id="1-简介"><a href="#1-简介" class="headerlink" title="1.简介"></a>1.简介</h3><blockquote>
<p>最初是一个设想，毕竟我是写音乐的，主要负责作曲编曲，鸽了快一年后很多粉丝不耐烦了，于是我开始整一些或许大学用得上的东西^比如一个bot ，高考那几天突发奇想，我或许可以教粉丝朋友一起写音乐？那就先从midi序列开始吧！<del>（也可以名正言顺咕咕咕，同时压榨劳动力）</del></p>
</blockquote>
<h3 id="2-一些教训"><a href="#2-一些教训" class="headerlink" title="2.一些教训"></a>2.一些教训</h3><blockquote>
<p>1.之前试过onebot ZBP插件里的timidity，也是手搓midi，但是仍然需要安装ffmpeg和timidity环境，且受到一定的系统环境影响——尽管成功写出了midi文件，但是对于其他那些使用非Windows系统（大家其实更愿意用Macbook）的人（主要是我的作曲家编曲家朋友）来说安装十分困难。<br>zbp关于midi的插件介绍：<br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-07-30/1659158099-11773-5d706d6c091bc400.jpg"></p>
</blockquote>
<blockquote>
<p>2.于是我开始注意到简化使用指令的重要性，并在此机缘巧合下找到了 <span class="exturl" data-url="aHR0cHM6Ly93d3cuYXV0b3BpYW5vLmNuLw==">AutoPiano<i class="fa fa-external-link-alt"></i></span>。<br>我并不在意它的关于编写输出音乐的任何逻辑或是别的什么，我找到了站长，并向他提出了几个问题——就比如，键盘谱是如何想出来的。<br>下图为孤勇者唱谱：<br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-07-30/1659157938-716855-img20220730131141.jpg"></p>
</blockquote>
<blockquote>
<p>3.综上，这未尝不是一个很好的开端，至少我明白了手搓midi的原理，以及一些更切合实际的东西，就比如简化指令。</p>
</blockquote>
<h2 id="三、TO-DO-LIST"><a href="#三、TO-DO-LIST" class="headerlink" title="三、TO-DO LIST"></a>三、TO-DO LIST</h2><ul>
<li><p><input disabled="" type="checkbox">  编写用法wiki<br>用法非常复杂，这脚本就算是raw了，我需要讲清楚如何写出一段音阶（最简单的一段中音区 C D E F G A B midi片段）；如何写出一段chord（和弦），并在此和弦基础上继续写主旋律；如何变换调式调性（F# -&gt; Ab）；如何修改速度等等。</p>
</li>
<li><p><input disabled="" type="checkbox">  编写最基础的简化指令包，虽然目前写好的raw版本是功能最全的，但是其编写midi的方式（我目前主要靠写lua脚本再 <code>loadLua()</code> 或者使用basicFunction1.0（啊现在应该叫FuncLib2.0）内注释掉的 <code>load()()</code> 来写midi）过于硬核，所以需要一个诸如 <code>midi:0333-1 0333-2</code> 或是 <code>midi:E5 E5 E5 C5</code> 这样的简单易用指令。</p>
</li>
<li><p><input checked="" disabled="" type="checkbox">  一个音源键位包，或者一个键位函数包，用于简化脚本写midi时的打谱环节。</p>
</li>
</ul>
<h2 id="四、脚本输出实例试听"><a href="#四、脚本输出实例试听" class="headerlink" title="四、脚本输出实例试听"></a>四、脚本输出实例试听</h2><p>C大调音阶：<br>[upl-file uuid=e45d0254-ca7a-498c-b00d-069b2de5a74b size=257B]c-major-scale.zip[/upl-file]<br>Am和弦：<br>[upl-file uuid=d2589143-51ab-4ff7-aa9f-96734e60d4b3 size=321B]chord-example.zip[/upl-file]<br>时值变化：<br>[upl-file uuid=d9db9d92-396a-48c2-918c-2ecf3ef37e26 size=260B]duration-example.zip[/upl-file]</p>
<h2 id="五、最后"><a href="#五、最后" class="headerlink" title="五、最后"></a>五、最后</h2><blockquote>
<p>脚本将会在简化指令版写完发布，愿大家都能名正言顺的咕咕咕，也愿大家都热爱生活，热爱音乐！</p>
</blockquote>
]]></content>
      <categories>
        <category>技术</category>
        <category>Lua</category>
      </categories>
      <tags>
        <tag>Dice</tag>
        <tag>FIXED</tag>
      </tags>
  </entry>
  <entry>
    <title>改写print</title>
    <url>/2022/08/05/print-fixed/</url>
    <content><![CDATA[<div class="note success"><p><strong>print fixed</strong><br>简单实现改写print，将print内容写入文件生成日志。</p>
</div>

<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">-------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">-- Print 改写. @简律纯 @gexi</span></span><br><span class="line"><span class="comment">-------------------------------------------------------------------------------</span></span><br><span class="line">writeToFile = <span class="function"><span class="keyword">function</span> <span class="params">( str )</span></span></span><br><span class="line">    <span class="keyword">local</span> filename = <span class="string">&quot;print.log&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> fileLogOut <span class="keyword">then</span></span><br><span class="line">        fileLogOut = <span class="built_in">io</span>.<span class="built_in">open</span>(filename, <span class="string">&quot;w&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        fileLogOut = <span class="built_in">io</span>.<span class="built_in">open</span>(filename, <span class="string">&quot;a&quot;</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    fileLogOut:<span class="built_in">write</span>(<span class="built_in">os</span>.<span class="built_in">date</span>(<span class="string">&quot;%H:%M:%S&quot;</span>,<span class="built_in">os</span>.<span class="built_in">time</span>())..<span class="string">&quot; &quot;</span>..str..<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">    fileLogOut:<span class="built_in">close</span>()</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">babe_tostring</span><span class="params">(...)</span></span></span><br><span class="line">    <span class="keyword">local</span> num = <span class="built_in">select</span>(<span class="string">&quot;#&quot;</span>, ...);</span><br><span class="line">    <span class="keyword">local</span> args = &#123; ... &#125;;</span><br><span class="line">    <span class="keyword">local</span> outs = &#123;&#125;;</span><br><span class="line">    <span class="keyword">for</span> i = <span class="number">1</span>, num <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">if</span> i &gt; <span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">            outs[#outs + <span class="number">1</span>] = <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        outs[#outs + <span class="number">1</span>] = <span class="built_in">tostring</span>(args[i]);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">table</span>.<span class="built_in">concat</span>(outs);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> just_print = <span class="built_in">print</span>;</span><br><span class="line"><span class="keyword">local</span> babe_output = <span class="function"><span class="keyword">function</span><span class="params">(...)</span></span></span><br><span class="line">    just_print(...);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">local</span> str = babe_tostring(...);</span><br><span class="line">    <span class="keyword">if</span> writeToFile <span class="keyword">then</span> writeToFile(str) <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="built_in">print</span> = babe_output</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>技术</category>
        <category>Lua</category>
      </categories>
      <tags>
        <tag>FIXED</tag>
      </tags>
  </entry>
  <entry>
    <title>yaml2table yaml转lua table</title>
    <url>/2022/08/04/yaml2table/</url>
    <content><![CDATA[<div class="note success"><p><strong>yaml2table</strong><br>简单实现读取yaml转为table,</p>
<blockquote>
<p>暂时不支持读取注释.</p>
</blockquote>
</div>


<h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">-------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">-- tinyyaml - YAML subset parser</span></span><br><span class="line"><span class="comment">-------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="built_in">table</span> = <span class="built_in">table</span></span><br><span class="line"><span class="keyword">local</span> <span class="built_in">string</span> = <span class="built_in">string</span></span><br><span class="line"><span class="keyword">local</span> schar = <span class="built_in">string</span>.<span class="built_in">char</span></span><br><span class="line"><span class="keyword">local</span> ssub, <span class="built_in">gsub</span> = <span class="built_in">string</span>.<span class="built_in">sub</span>, <span class="built_in">string</span>.<span class="built_in">gsub</span></span><br><span class="line"><span class="keyword">local</span> sfind, smatch = <span class="built_in">string</span>.<span class="built_in">find</span>, <span class="built_in">string</span>.<span class="built_in">match</span></span><br><span class="line"><span class="keyword">local</span> tinsert, tremove = <span class="built_in">table</span>.<span class="built_in">insert</span>, <span class="built_in">table</span>.<span class="built_in">remove</span></span><br><span class="line"><span class="keyword">local</span> <span class="built_in">setmetatable</span> = <span class="built_in">setmetatable</span></span><br><span class="line"><span class="keyword">local</span> <span class="built_in">pairs</span> = <span class="built_in">pairs</span></span><br><span class="line"><span class="keyword">local</span> <span class="built_in">type</span> = <span class="built_in">type</span></span><br><span class="line"><span class="keyword">local</span> <span class="built_in">tonumber</span> = <span class="built_in">tonumber</span></span><br><span class="line"><span class="keyword">local</span> <span class="built_in">math</span> = <span class="built_in">math</span></span><br><span class="line"><span class="keyword">local</span> <span class="built_in">getmetatable</span> = <span class="built_in">getmetatable</span></span><br><span class="line"><span class="keyword">local</span> <span class="built_in">error</span> = <span class="built_in">error</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> UNESCAPES = &#123;</span><br><span class="line">  [<span class="string">&#x27;0&#x27;</span>] = <span class="string">&quot;\x00&quot;</span>, z = <span class="string">&quot;\x00&quot;</span>, N    = <span class="string">&quot;\x85&quot;</span>,</span><br><span class="line">  a = <span class="string">&quot;\x07&quot;</span>,     b = <span class="string">&quot;\x08&quot;</span>, t    = <span class="string">&quot;\x09&quot;</span>,</span><br><span class="line">  n = <span class="string">&quot;\x0a&quot;</span>,     v = <span class="string">&quot;\x0b&quot;</span>, f    = <span class="string">&quot;\x0c&quot;</span>,</span><br><span class="line">  r = <span class="string">&quot;\x0d&quot;</span>,     e = <span class="string">&quot;\x1b&quot;</span>, [<span class="string">&#x27;\\&#x27;</span>] = <span class="string">&#x27;\\&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">-------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">-- utils</span></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">select</span><span class="params">(list, pred)</span></span></span><br><span class="line">  <span class="keyword">local</span> selected = &#123;&#125;</span><br><span class="line">  <span class="keyword">for</span> i = <span class="number">0</span>, #list <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">local</span> v = list[i]</span><br><span class="line">    <span class="keyword">if</span> v <span class="keyword">and</span> pred(v, i) <span class="keyword">then</span></span><br><span class="line">      tinsert(selected, v)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">return</span> selected</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">startswith</span><span class="params">(haystack, needle)</span></span></span><br><span class="line">  <span class="keyword">return</span> ssub(haystack, <span class="number">1</span>, #needle) == needle</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">ltrim</span><span class="params">(str)</span></span></span><br><span class="line">  <span class="keyword">return</span> smatch(str, <span class="string">&quot;^%s*(.-)$&quot;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">rtrim</span><span class="params">(str)</span></span></span><br><span class="line">  <span class="keyword">return</span> smatch(str, <span class="string">&quot;^(.-)%s*$&quot;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">-- Implementation.</span></span><br><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="keyword">local</span> class = &#123;__meta=&#123;&#125;&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">class.__meta.__call</span><span class="params">(cls, ...)</span></span></span><br><span class="line">  <span class="keyword">local</span> <span class="built_in">self</span> = <span class="built_in">setmetatable</span>(&#123;&#125;, cls)</span><br><span class="line">  <span class="keyword">if</span> cls.__init <span class="keyword">then</span></span><br><span class="line">    cls.__init(<span class="built_in">self</span>, ...)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">self</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">class.def</span><span class="params">(base, typ, cls)</span></span></span><br><span class="line">  base = base <span class="keyword">or</span> class</span><br><span class="line">  <span class="keyword">local</span> mt = &#123;<span class="built_in">__metatable</span>=base, <span class="built_in">__index</span>=base&#125;</span><br><span class="line">  <span class="keyword">for</span> k, v <span class="keyword">in</span> <span class="built_in">pairs</span>(base.__meta) <span class="keyword">do</span> mt[k] = v <span class="keyword">end</span></span><br><span class="line">  cls = <span class="built_in">setmetatable</span>(cls <span class="keyword">or</span> &#123;&#125;, mt)</span><br><span class="line">  cls.<span class="built_in">__index</span> = cls</span><br><span class="line">  cls.<span class="built_in">__metatable</span> = cls</span><br><span class="line">  cls.__type = typ</span><br><span class="line">  cls.__meta = mt</span><br><span class="line">  <span class="keyword">return</span> cls</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> types = &#123;</span><br><span class="line">  null = class:def(<span class="string">&#x27;null&#x27;</span>),</span><br><span class="line">  map = class:def(<span class="string">&#x27;map&#x27;</span>),</span><br><span class="line">  omap = class:def(<span class="string">&#x27;omap&#x27;</span>),</span><br><span class="line">  <span class="built_in">pairs</span> = class:def(<span class="string">&#x27;pairs&#x27;</span>),</span><br><span class="line">  set = class:def(<span class="string">&#x27;set&#x27;</span>),</span><br><span class="line">  seq = class:def(<span class="string">&#x27;seq&#x27;</span>),</span><br><span class="line">  timestamp = class:def(<span class="string">&#x27;timestamp&#x27;</span>),</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> Null = types.null</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Null.__tostring</span><span class="params">()</span></span> <span class="keyword">return</span> <span class="string">&#x27;yaml.null&#x27;</span> <span class="keyword">end</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Null.isnull</span><span class="params">(v)</span></span></span><br><span class="line">  <span class="keyword">if</span> v == <span class="literal">nil</span> <span class="keyword">then</span> <span class="keyword">return</span> <span class="literal">true</span> <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">type</span>(v) == <span class="string">&#x27;table&#x27;</span> <span class="keyword">and</span> <span class="built_in">getmetatable</span>(v) == Null <span class="keyword">then</span> <span class="keyword">return</span> <span class="literal">true</span> <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">local</span> null = Null()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">types.timestamp:__init</span><span class="params">(y, m, d, h, i, s, f, z)</span></span></span><br><span class="line">  <span class="built_in">self</span>.year = <span class="built_in">tonumber</span>(y)</span><br><span class="line">  <span class="built_in">self</span>.month = <span class="built_in">tonumber</span>(m)</span><br><span class="line">  <span class="built_in">self</span>.day = <span class="built_in">tonumber</span>(d)</span><br><span class="line">  <span class="built_in">self</span>.hour = <span class="built_in">tonumber</span>(h <span class="keyword">or</span> <span class="number">0</span>)</span><br><span class="line">  <span class="built_in">self</span>.minute = <span class="built_in">tonumber</span>(i <span class="keyword">or</span> <span class="number">0</span>)</span><br><span class="line">  <span class="built_in">self</span>.second = <span class="built_in">tonumber</span>(s <span class="keyword">or</span> <span class="number">0</span>)</span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">type</span>(f) == <span class="string">&#x27;string&#x27;</span> <span class="keyword">and</span> sfind(f, <span class="string">&#x27;^%d+$&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">self</span>.fraction = <span class="built_in">tonumber</span>(f) * <span class="built_in">math</span>.<span class="built_in">pow</span>(<span class="number">10</span>, <span class="number">3</span> - #f)</span><br><span class="line">  <span class="keyword">elseif</span> f <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">self</span>.fraction = f</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">self</span>.fraction = <span class="number">0</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="built_in">self</span>.timezone = z</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">types.timestamp:__tostring</span><span class="params">()</span></span></span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">string</span>.<span class="built_in">format</span>(</span><br><span class="line">    <span class="string">&#x27;%04d-%02d-%02dT%02d:%02d:%02d.%03d%s&#x27;</span>,</span><br><span class="line">    <span class="built_in">self</span>.year, <span class="built_in">self</span>.month, <span class="built_in">self</span>.day,</span><br><span class="line">    <span class="built_in">self</span>.hour, <span class="built_in">self</span>.minute, <span class="built_in">self</span>.second, <span class="built_in">self</span>.fraction,</span><br><span class="line">    <span class="built_in">self</span>:gettz())</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">types.timestamp:gettz</span><span class="params">()</span></span></span><br><span class="line">  <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">self</span>.timezone <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">self</span>.timezone == <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Z&#x27;</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">local</span> sign = <span class="built_in">self</span>.timezone &gt; <span class="number">0</span></span><br><span class="line">  <span class="keyword">local</span> z = sign <span class="keyword">and</span> <span class="built_in">self</span>.timezone <span class="keyword">or</span> -<span class="built_in">self</span>.timezone</span><br><span class="line">  <span class="keyword">local</span> zh = <span class="built_in">math</span>.<span class="built_in">floor</span>(z)</span><br><span class="line">  <span class="keyword">local</span> zi = (z - zh) * <span class="number">60</span></span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">string</span>.<span class="built_in">format</span>(</span><br><span class="line">    <span class="string">&#x27;%s%02d:%02d&#x27;</span>, sign <span class="keyword">and</span> <span class="string">&#x27;+&#x27;</span> <span class="keyword">or</span> <span class="string">&#x27;-&#x27;</span>, zh, zi)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">countindent</span><span class="params">(line)</span></span></span><br><span class="line">  <span class="keyword">local</span> _, j = sfind(line, <span class="string">&#x27;^%s+&#x27;</span>)</span><br><span class="line">  <span class="keyword">if</span> <span class="keyword">not</span> j <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>, line</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">return</span> j, ssub(line, j+<span class="number">1</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">parsestring</span><span class="params">(line, stopper)</span></span></span><br><span class="line">  stopper = stopper <span class="keyword">or</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="keyword">local</span> q = ssub(line, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">  <span class="keyword">if</span> q == <span class="string">&#x27; &#x27;</span> <span class="keyword">or</span> q == <span class="string">&#x27;\t&#x27;</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> parsestring(ssub(line, <span class="number">2</span>))</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">if</span> q == <span class="string">&quot;&#x27;&quot;</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">local</span> i = sfind(line, <span class="string">&quot;&#x27;&quot;</span>, <span class="number">2</span>, <span class="literal">true</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> i <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nil</span>, line</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> ssub(line, <span class="number">2</span>, i<span class="number">-1</span>), ssub(line, i+<span class="number">1</span>)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">if</span> q == <span class="string">&#x27;&quot;&#x27;</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">local</span> i, buf = <span class="number">2</span>, <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">while</span> i &lt; #line <span class="keyword">do</span></span><br><span class="line">      <span class="keyword">local</span> c = ssub(line, i, i)</span><br><span class="line">      <span class="keyword">if</span> c == <span class="string">&#x27;\\&#x27;</span> <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">local</span> n = ssub(line, i+<span class="number">1</span>, i+<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> UNESCAPES[n] ~= <span class="literal">nil</span> <span class="keyword">then</span></span><br><span class="line">          buf = buf..UNESCAPES[n]</span><br><span class="line">        <span class="keyword">elseif</span> n == <span class="string">&#x27;x&#x27;</span> <span class="keyword">then</span></span><br><span class="line">          <span class="keyword">local</span> h = ssub(i+<span class="number">2</span>,i+<span class="number">3</span>)</span><br><span class="line">          <span class="keyword">if</span> sfind(h, <span class="string">&#x27;^[0-9a-fA-F]$&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">            buf = buf..schar(<span class="built_in">tonumber</span>(h, <span class="number">16</span>))</span><br><span class="line">            i = i + <span class="number">2</span></span><br><span class="line">          <span class="keyword">else</span></span><br><span class="line">            buf = buf..<span class="string">&#x27;x&#x27;</span></span><br><span class="line">          <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          buf = buf..n</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        i = i + <span class="number">1</span></span><br><span class="line">      <span class="keyword">elseif</span> c == q <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        buf = buf..c</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      i = i + <span class="number">1</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> buf, ssub(line, i+<span class="number">1</span>)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">if</span> q == <span class="string">&#x27;&#123;&#x27;</span> <span class="keyword">or</span> q == <span class="string">&#x27;[&#x27;</span> <span class="keyword">then</span>  <span class="comment">-- flow style</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span>, line</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">if</span> q == <span class="string">&#x27;|&#x27;</span> <span class="keyword">or</span> q == <span class="string">&#x27;&gt;&#x27;</span> <span class="keyword">then</span>  <span class="comment">-- block</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span>, line</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">if</span> q == <span class="string">&#x27;-&#x27;</span> <span class="keyword">or</span> q == <span class="string">&#x27;:&#x27;</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">if</span> ssub(line, <span class="number">2</span>, <span class="number">2</span>) == <span class="string">&#x27; &#x27;</span> <span class="keyword">or</span> #line == <span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nil</span>, line</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">local</span> buf = <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="keyword">while</span> #line &gt; <span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">local</span> c = ssub(line, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">if</span> sfind(stopper, c, <span class="number">1</span>, <span class="literal">true</span>) <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">elseif</span> c == <span class="string">&#x27;:&#x27;</span> <span class="keyword">and</span> (ssub(line, <span class="number">2</span>, <span class="number">2</span>) == <span class="string">&#x27; &#x27;</span> <span class="keyword">or</span> #line == <span class="number">1</span>) <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">elseif</span> c == <span class="string">&#x27;#&#x27;</span> <span class="keyword">and</span> (ssub(buf, #buf, #buf) == <span class="string">&#x27; &#x27;</span>) <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      buf = buf..c</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    line = ssub(line, <span class="number">2</span>)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">return</span> rtrim(buf), line</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">isemptyline</span><span class="params">(line)</span></span></span><br><span class="line">  <span class="keyword">return</span> line == <span class="string">&#x27;&#x27;</span> <span class="keyword">or</span> sfind(line, <span class="string">&#x27;^%s*$&#x27;</span>) <span class="keyword">or</span> sfind(line, <span class="string">&#x27;^%s*#&#x27;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">equalsline</span><span class="params">(line, needle)</span></span></span><br><span class="line">  <span class="keyword">return</span> startswith(line, needle) <span class="keyword">and</span> isemptyline(ssub(line, #needle+<span class="number">1</span>))</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">checkdupekey</span><span class="params">(map, key)</span></span></span><br><span class="line">  <span class="keyword">if</span> map[key] ~= <span class="literal">nil</span> <span class="keyword">then</span></span><br><span class="line">    <span class="comment">-- print(&quot;found a duplicate key &#x27;&quot;..key..&quot;&#x27; in line: &quot;..line)</span></span><br><span class="line">    <span class="keyword">local</span> suffix = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> map[key..<span class="string">&#x27;_&#x27;</span>..suffix] <span class="keyword">do</span></span><br><span class="line">      suffix = suffix + <span class="number">1</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    key = key ..<span class="string">&#x27;_&#x27;</span>..suffix</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">return</span> key</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">parseflowstyle</span><span class="params">(line, lines)</span></span></span><br><span class="line">  <span class="keyword">local</span> stack = &#123;&#125;</span><br><span class="line">  <span class="keyword">while</span> <span class="literal">true</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> #line == <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">if</span> #<span class="built_in">lines</span> == <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        line = tremove(<span class="built_in">lines</span>, <span class="number">1</span>)</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">local</span> c = ssub(line, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">if</span> c == <span class="string">&#x27;#&#x27;</span> <span class="keyword">then</span></span><br><span class="line">      line = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">elseif</span> c == <span class="string">&#x27; &#x27;</span> <span class="keyword">or</span> c == <span class="string">&#x27;\t&#x27;</span> <span class="keyword">or</span> c == <span class="string">&#x27;\r&#x27;</span> <span class="keyword">or</span> c == <span class="string">&#x27;\n&#x27;</span> <span class="keyword">then</span></span><br><span class="line">      line = ssub(line, <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">elseif</span> c == <span class="string">&#x27;&#123;&#x27;</span> <span class="keyword">or</span> c == <span class="string">&#x27;[&#x27;</span> <span class="keyword">then</span></span><br><span class="line">      tinsert(stack, &#123;v=&#123;&#125;,t=c&#125;)</span><br><span class="line">      line = ssub(line, <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">elseif</span> c == <span class="string">&#x27;:&#x27;</span> <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">local</span> s = tremove(stack)</span><br><span class="line">      tinsert(stack, &#123;v=s.v, t=<span class="string">&#x27;:&#x27;</span>&#125;)</span><br><span class="line">      line = ssub(line, <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">elseif</span> c == <span class="string">&#x27;,&#x27;</span> <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">local</span> value = tremove(stack)</span><br><span class="line">      <span class="keyword">if</span> value.t == <span class="string">&#x27;:&#x27;</span> <span class="keyword">or</span> value.t == <span class="string">&#x27;&#123;&#x27;</span> <span class="keyword">or</span> value.t == <span class="string">&#x27;[&#x27;</span> <span class="keyword">then</span> <span class="built_in">error</span>() <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">if</span> stack[#stack].t == <span class="string">&#x27;:&#x27;</span> <span class="keyword">then</span></span><br><span class="line">        <span class="comment">-- map</span></span><br><span class="line">        <span class="keyword">local</span> key = tremove(stack)</span><br><span class="line">        key.v = checkdupekey(stack[#stack].v, key.v)</span><br><span class="line">        stack[#stack].v[key.v] = value.v</span><br><span class="line">      <span class="keyword">elseif</span> stack[#stack].t == <span class="string">&#x27;&#123;&#x27;</span> <span class="keyword">then</span></span><br><span class="line">        <span class="comment">-- set</span></span><br><span class="line">        stack[#stack].v[value.v] = <span class="literal">true</span></span><br><span class="line">      <span class="keyword">elseif</span> stack[#stack].t == <span class="string">&#x27;[&#x27;</span> <span class="keyword">then</span></span><br><span class="line">        <span class="comment">-- seq</span></span><br><span class="line">        tinsert(stack[#stack].v, value.v)</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      line = ssub(line, <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">elseif</span> c == <span class="string">&#x27;&#125;&#x27;</span> <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">if</span> stack[#stack].t == <span class="string">&#x27;&#123;&#x27;</span> <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">if</span> #stack == <span class="number">1</span> <span class="keyword">then</span> <span class="keyword">break</span> <span class="keyword">end</span></span><br><span class="line">        stack[#stack].t = <span class="string">&#x27;&#125;&#x27;</span></span><br><span class="line">        line = ssub(line, <span class="number">2</span>)</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        line = <span class="string">&#x27;,&#x27;</span>..line</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">elseif</span> c == <span class="string">&#x27;]&#x27;</span> <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">if</span> stack[#stack].t == <span class="string">&#x27;[&#x27;</span> <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">if</span> #stack == <span class="number">1</span> <span class="keyword">then</span> <span class="keyword">break</span> <span class="keyword">end</span></span><br><span class="line">        stack[#stack].t = <span class="string">&#x27;]&#x27;</span></span><br><span class="line">        line = ssub(line, <span class="number">2</span>)</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        line = <span class="string">&#x27;,&#x27;</span>..line</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="keyword">local</span> s, rest = parsestring(line, <span class="string">&#x27;,&#123;&#125;[]&#x27;</span>)</span><br><span class="line">      <span class="keyword">if</span> <span class="keyword">not</span> s <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">error</span>(<span class="string">&#x27;invalid flowstyle line: &#x27;</span>..line)</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      tinsert(stack, &#123;v=s, t=<span class="string">&#x27;s&#x27;</span>&#125;)</span><br><span class="line">      line = rest</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">return</span> stack[<span class="number">1</span>].v, line</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">parseblockstylestring</span><span class="params">(line, lines, indent)</span></span></span><br><span class="line">  <span class="keyword">if</span> #<span class="built_in">lines</span> == <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">error</span>(<span class="string">&quot;failed to find multi-line scalar content&quot;</span>)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">local</span> s = &#123;&#125;</span><br><span class="line">  <span class="keyword">local</span> firstindent = <span class="number">-1</span></span><br><span class="line">  <span class="keyword">local</span> endline = <span class="number">-1</span></span><br><span class="line">  <span class="keyword">for</span> i = <span class="number">1</span>, #<span class="built_in">lines</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">local</span> ln = <span class="built_in">lines</span>[i]</span><br><span class="line">    <span class="keyword">local</span> idt = countindent(ln)</span><br><span class="line">    <span class="keyword">if</span> idt &lt;= indent <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">if</span> ln == <span class="string">&#x27;&#x27;</span> <span class="keyword">then</span></span><br><span class="line">      tinsert(s, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="keyword">if</span> firstindent == <span class="number">-1</span> <span class="keyword">then</span></span><br><span class="line">        firstindent = idt</span><br><span class="line">      <span class="keyword">elseif</span> idt &lt; firstindent <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      tinsert(s, ssub(ln, firstindent + <span class="number">1</span>))</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    endline = i</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">local</span> striptrailing = <span class="literal">true</span></span><br><span class="line">  <span class="keyword">local</span> sep = <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">  <span class="keyword">local</span> newlineatend = <span class="literal">true</span></span><br><span class="line">  <span class="keyword">if</span> line == <span class="string">&#x27;|&#x27;</span> <span class="keyword">then</span></span><br><span class="line">    striptrailing = <span class="literal">true</span></span><br><span class="line">    sep = <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">    newlineatend = <span class="literal">true</span></span><br><span class="line">  <span class="keyword">elseif</span> line == <span class="string">&#x27;|+&#x27;</span> <span class="keyword">then</span></span><br><span class="line">    striptrailing = <span class="literal">false</span></span><br><span class="line">    sep = <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">    newlineatend = <span class="literal">true</span></span><br><span class="line">  <span class="keyword">elseif</span> line == <span class="string">&#x27;|-&#x27;</span> <span class="keyword">then</span></span><br><span class="line">    striptrailing = <span class="literal">true</span></span><br><span class="line">    sep = <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">    newlineatend = <span class="literal">false</span></span><br><span class="line">  <span class="keyword">elseif</span> line == <span class="string">&#x27;&gt;&#x27;</span> <span class="keyword">then</span></span><br><span class="line">    striptrailing = <span class="literal">true</span></span><br><span class="line">    sep = <span class="string">&#x27; &#x27;</span></span><br><span class="line">    newlineatend = <span class="literal">true</span></span><br><span class="line">  <span class="keyword">elseif</span> line == <span class="string">&#x27;&gt;+&#x27;</span> <span class="keyword">then</span></span><br><span class="line">    striptrailing = <span class="literal">false</span></span><br><span class="line">    sep = <span class="string">&#x27; &#x27;</span></span><br><span class="line">    newlineatend = <span class="literal">true</span></span><br><span class="line">  <span class="keyword">elseif</span> line == <span class="string">&#x27;&gt;-&#x27;</span> <span class="keyword">then</span></span><br><span class="line">    striptrailing = <span class="literal">true</span></span><br><span class="line">    sep = <span class="string">&#x27; &#x27;</span></span><br><span class="line">    newlineatend = <span class="literal">false</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">error</span>(<span class="string">&#x27;invalid blockstyle string:&#x27;</span>..line)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">local</span> eonl = <span class="number">0</span></span><br><span class="line">  <span class="keyword">for</span> i = #s, <span class="number">1</span>, <span class="number">-1</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> s[i] == <span class="string">&#x27;&#x27;</span> <span class="keyword">then</span></span><br><span class="line">      tremove(s, i)</span><br><span class="line">      eonl = eonl + <span class="number">1</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">if</span> striptrailing <span class="keyword">then</span></span><br><span class="line">    eonl = <span class="number">0</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">if</span> newlineatend <span class="keyword">then</span></span><br><span class="line">    eonl = eonl + <span class="number">1</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">for</span> i = endline, <span class="number">1</span>, <span class="number">-1</span> <span class="keyword">do</span></span><br><span class="line">    tremove(<span class="built_in">lines</span>, i)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">table</span>.<span class="built_in">concat</span>(s, sep)..<span class="built_in">string</span>.<span class="built_in">rep</span>(<span class="string">&#x27;\n&#x27;</span>, eonl)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">parsetimestamp</span><span class="params">(line)</span></span></span><br><span class="line">  <span class="keyword">local</span> _, p1, y, m, d = sfind(line, <span class="string">&#x27;^(%d%d%d%d)%-(%d%d)%-(%d%d)&#x27;</span>)</span><br><span class="line">  <span class="keyword">if</span> <span class="keyword">not</span> p1 <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span>, line</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">if</span> p1 == #line <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> types.timestamp(y, m, d), <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">local</span> _, p2, h, i, s = sfind(line, <span class="string">&#x27;^[Tt ](%d+):(%d+):(%d+)&#x27;</span>, p1+<span class="number">1</span>)</span><br><span class="line">  <span class="keyword">if</span> <span class="keyword">not</span> p2 <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> types.timestamp(y, m, d), ssub(line, p1+<span class="number">1</span>)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">if</span> p2 == #line <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> types.timestamp(y, m, d, h, i, s), <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">local</span> _, p3, f = sfind(line, <span class="string">&#x27;^%.(%d+)&#x27;</span>, p2+<span class="number">1</span>)</span><br><span class="line">  <span class="keyword">if</span> <span class="keyword">not</span> p3 <span class="keyword">then</span></span><br><span class="line">    p3 = p2</span><br><span class="line">    f = <span class="number">0</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">local</span> zc = ssub(line, p3+<span class="number">1</span>, p3+<span class="number">1</span>)</span><br><span class="line">  <span class="keyword">local</span> _, p4, zs, z = sfind(line, <span class="string">&#x27;^ ?([%+%-])(%d+)&#x27;</span>, p3+<span class="number">1</span>)</span><br><span class="line">  <span class="keyword">if</span> p4 <span class="keyword">then</span></span><br><span class="line">    z = <span class="built_in">tonumber</span>(z)</span><br><span class="line">    <span class="keyword">local</span> _, p5, zi = sfind(line, <span class="string">&#x27;^:(%d+)&#x27;</span>, p4+<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">if</span> p5 <span class="keyword">then</span></span><br><span class="line">      z = z + <span class="built_in">tonumber</span>(zi) / <span class="number">60</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    z = zs == <span class="string">&#x27;-&#x27;</span> <span class="keyword">and</span> -<span class="built_in">tonumber</span>(z) <span class="keyword">or</span> <span class="built_in">tonumber</span>(z)</span><br><span class="line">  <span class="keyword">elseif</span> zc == <span class="string">&#x27;Z&#x27;</span> <span class="keyword">then</span></span><br><span class="line">    p4 = p3 + <span class="number">1</span></span><br><span class="line">    z = <span class="number">0</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    p4 = p3</span><br><span class="line">    z = <span class="literal">false</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">return</span> types.timestamp(y, m, d, h, i, s, f, z), ssub(line, p4+<span class="number">1</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">parsescalar</span><span class="params">(line, lines, indent)</span></span></span><br><span class="line">  line = ltrim(line)</span><br><span class="line">  line = <span class="built_in">gsub</span>(line, <span class="string">&#x27;^%s*#.*$&#x27;</span>, <span class="string">&#x27;&#x27;</span>)  <span class="comment">-- comment only -&gt; &#x27;&#x27;</span></span><br><span class="line">  line = <span class="built_in">gsub</span>(line, <span class="string">&#x27;^%s*&#x27;</span>, <span class="string">&#x27;&#x27;</span>)  <span class="comment">-- trim head spaces</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> line == <span class="string">&#x27;&#x27;</span> <span class="keyword">or</span> line == <span class="string">&#x27;~&#x27;</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> null</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">local</span> ts, _ = parsetimestamp(line)</span><br><span class="line">  <span class="keyword">if</span> ts <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> ts</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">local</span> s, _ = parsestring(line)</span><br><span class="line">  <span class="comment">-- startswith quote ... string</span></span><br><span class="line">  <span class="comment">-- not startswith quote ... maybe string</span></span><br><span class="line">  <span class="keyword">if</span> s <span class="keyword">and</span> (startswith(line, <span class="string">&#x27;&quot;&#x27;</span>) <span class="keyword">or</span> startswith(line, <span class="string">&quot;&#x27;&quot;</span>)) <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> startswith(<span class="string">&#x27;!&#x27;</span>, line) <span class="keyword">then</span>  <span class="comment">-- unexpected tagchar</span></span><br><span class="line">    <span class="built_in">error</span>(<span class="string">&#x27;unsupported line: &#x27;</span>..line)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> equalsline(line, <span class="string">&#x27;&#123;&#125;&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> &#123;&#125;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">if</span> equalsline(line, <span class="string">&#x27;[]&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> &#123;&#125;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> startswith(line, <span class="string">&#x27;&#123;&#x27;</span>) <span class="keyword">or</span> startswith(line, <span class="string">&#x27;[&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> parseflowstyle(line, <span class="built_in">lines</span>)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> startswith(line, <span class="string">&#x27;|&#x27;</span>) <span class="keyword">or</span> startswith(line, <span class="string">&#x27;&gt;&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> parseblockstylestring(line, <span class="built_in">lines</span>, indent)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">-- Regular unquoted string</span></span><br><span class="line">  line = <span class="built_in">gsub</span>(line, <span class="string">&#x27;%s*#.*$&#x27;</span>, <span class="string">&#x27;&#x27;</span>)  <span class="comment">-- trim tail comment</span></span><br><span class="line">  <span class="keyword">local</span> v = line</span><br><span class="line">  <span class="keyword">if</span> v == <span class="string">&#x27;null&#x27;</span> <span class="keyword">or</span> v == <span class="string">&#x27;Null&#x27;</span> <span class="keyword">or</span> v == <span class="string">&#x27;NULL&#x27;</span><span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> null</span><br><span class="line">  <span class="keyword">elseif</span> v == <span class="string">&#x27;true&#x27;</span> <span class="keyword">or</span> v == <span class="string">&#x27;True&#x27;</span> <span class="keyword">or</span> v == <span class="string">&#x27;TRUE&#x27;</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">  <span class="keyword">elseif</span> v == <span class="string">&#x27;false&#x27;</span> <span class="keyword">or</span> v == <span class="string">&#x27;False&#x27;</span> <span class="keyword">or</span> v == <span class="string">&#x27;FALSE&#x27;</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">  <span class="keyword">elseif</span> v == <span class="string">&#x27;.inf&#x27;</span> <span class="keyword">or</span> v == <span class="string">&#x27;.Inf&#x27;</span> <span class="keyword">or</span> v == <span class="string">&#x27;.INF&#x27;</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">math</span>.<span class="built_in">huge</span></span><br><span class="line">  <span class="keyword">elseif</span> v == <span class="string">&#x27;+.inf&#x27;</span> <span class="keyword">or</span> v == <span class="string">&#x27;+.Inf&#x27;</span> <span class="keyword">or</span> v == <span class="string">&#x27;+.INF&#x27;</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">math</span>.<span class="built_in">huge</span></span><br><span class="line">  <span class="keyword">elseif</span> v == <span class="string">&#x27;-.inf&#x27;</span> <span class="keyword">or</span> v == <span class="string">&#x27;-.Inf&#x27;</span> <span class="keyword">or</span> v == <span class="string">&#x27;-.INF&#x27;</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> -<span class="built_in">math</span>.<span class="built_in">huge</span></span><br><span class="line">  <span class="keyword">elseif</span> v == <span class="string">&#x27;.nan&#x27;</span> <span class="keyword">or</span> v == <span class="string">&#x27;.NaN&#x27;</span> <span class="keyword">or</span> v == <span class="string">&#x27;.NAN&#x27;</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> / <span class="number">0</span></span><br><span class="line">  <span class="keyword">elseif</span> sfind(v, <span class="string">&#x27;^[%+%-]?[0-9]+$&#x27;</span>) <span class="keyword">or</span> sfind(v, <span class="string">&#x27;^[%+%-]?[0-9]+%.$&#x27;</span>)<span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">tonumber</span>(v)  <span class="comment">-- : int</span></span><br><span class="line">  <span class="keyword">elseif</span> sfind(v, <span class="string">&#x27;^[%+%-]?[0-9]+%.[0-9]+$&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">tonumber</span>(v)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">return</span> s <span class="keyword">or</span> v</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> parsemap;  <span class="comment">-- : func</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">parseseq</span><span class="params">(line, lines, indent)</span></span></span><br><span class="line">  <span class="keyword">local</span> seq = <span class="built_in">setmetatable</span>(&#123;&#125;, types.seq)</span><br><span class="line">  <span class="keyword">if</span> line ~= <span class="string">&#x27;&#x27;</span> <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">error</span>()</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">while</span> #<span class="built_in">lines</span> &gt; <span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">    <span class="comment">-- Check for a new document</span></span><br><span class="line">    line = <span class="built_in">lines</span>[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> startswith(line, <span class="string">&#x27;---&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">while</span> #<span class="built_in">lines</span> &gt; <span class="number">0</span> <span class="keyword">and</span> <span class="keyword">not</span> startswith(<span class="built_in">lines</span>, <span class="string">&#x27;---&#x27;</span>) <span class="keyword">do</span></span><br><span class="line">        tremove(<span class="built_in">lines</span>, <span class="number">1</span>)</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">return</span> seq</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">-- Check the indent level</span></span><br><span class="line">    <span class="keyword">local</span> level = countindent(line)</span><br><span class="line">    <span class="keyword">if</span> level &lt; indent <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">return</span> seq</span><br><span class="line">    <span class="keyword">elseif</span> level &gt; indent <span class="keyword">then</span></span><br><span class="line">      <span class="built_in">error</span>(<span class="string">&quot;found bad indenting in line: &quot;</span>.. line)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> i, j = sfind(line, <span class="string">&#x27;%-%s+&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> i <span class="keyword">then</span></span><br><span class="line">      i, j = sfind(line, <span class="string">&#x27;%-$&#x27;</span>)</span><br><span class="line">      <span class="keyword">if</span> <span class="keyword">not</span> i <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">return</span> seq</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">local</span> rest = ssub(line, j+<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> sfind(rest, <span class="string">&#x27;^[^\&#x27;\&quot;%s]*:&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">      <span class="comment">-- Inline nested hash</span></span><br><span class="line">      <span class="keyword">local</span> indent2 = j</span><br><span class="line">      <span class="built_in">lines</span>[<span class="number">1</span>] = <span class="built_in">string</span>.<span class="built_in">rep</span>(<span class="string">&#x27; &#x27;</span>, indent2)..rest</span><br><span class="line">      tinsert(seq, parsemap(<span class="string">&#x27;&#x27;</span>, <span class="built_in">lines</span>, indent2))</span><br><span class="line">    <span class="keyword">elseif</span> sfind(rest, <span class="string">&#x27;^%-%s+&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">      <span class="comment">-- Inline nested seq</span></span><br><span class="line">      <span class="keyword">local</span> indent2 = j</span><br><span class="line">      <span class="built_in">lines</span>[<span class="number">1</span>] = <span class="built_in">string</span>.<span class="built_in">rep</span>(<span class="string">&#x27; &#x27;</span>, indent2)..rest</span><br><span class="line">      tinsert(seq, parseseq(<span class="string">&#x27;&#x27;</span>, <span class="built_in">lines</span>, indent2))</span><br><span class="line">    <span class="keyword">elseif</span> isemptyline(rest) <span class="keyword">then</span></span><br><span class="line">      tremove(<span class="built_in">lines</span>, <span class="number">1</span>)</span><br><span class="line">      <span class="keyword">if</span> #<span class="built_in">lines</span> == <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">        tinsert(seq, null)</span><br><span class="line">        <span class="keyword">return</span> seq</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">if</span> sfind(<span class="built_in">lines</span>[<span class="number">1</span>], <span class="string">&#x27;^%s*%-&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">local</span> nextline = <span class="built_in">lines</span>[<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">local</span> indent2 = countindent(nextline)</span><br><span class="line">        <span class="keyword">if</span> indent2 == indent <span class="keyword">then</span></span><br><span class="line">          <span class="comment">-- Null seqay entry</span></span><br><span class="line">          tinsert(seq, null)</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          tinsert(seq, parseseq(<span class="string">&#x27;&#x27;</span>, <span class="built_in">lines</span>, indent2))</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        <span class="comment">-- - # comment</span></span><br><span class="line">        <span class="comment">--   key: value</span></span><br><span class="line">        <span class="keyword">local</span> nextline = <span class="built_in">lines</span>[<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">local</span> indent2 = countindent(nextline)</span><br><span class="line">        tinsert(seq, parsemap(<span class="string">&#x27;&#x27;</span>, <span class="built_in">lines</span>, indent2))</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">elseif</span> rest <span class="keyword">then</span></span><br><span class="line">      <span class="comment">-- Array entry with a value</span></span><br><span class="line">      tremove(<span class="built_in">lines</span>, <span class="number">1</span>)</span><br><span class="line">      tinsert(seq, parsescalar(rest, <span class="built_in">lines</span>))</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">return</span> seq</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">parseset</span><span class="params">(line, lines, indent)</span></span></span><br><span class="line">  <span class="keyword">if</span> <span class="keyword">not</span> isemptyline(line) <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">error</span>(<span class="string">&#x27;not seq line: &#x27;</span>..line)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">local</span> set = <span class="built_in">setmetatable</span>(&#123;&#125;, types.set)</span><br><span class="line">  <span class="keyword">while</span> #<span class="built_in">lines</span> &gt; <span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">    <span class="comment">-- Check for a new document</span></span><br><span class="line">    line = <span class="built_in">lines</span>[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> startswith(line, <span class="string">&#x27;---&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">while</span> #<span class="built_in">lines</span> &gt; <span class="number">0</span> <span class="keyword">and</span> <span class="keyword">not</span> startswith(<span class="built_in">lines</span>, <span class="string">&#x27;---&#x27;</span>) <span class="keyword">do</span></span><br><span class="line">        tremove(<span class="built_in">lines</span>, <span class="number">1</span>)</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">return</span> set</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">-- Check the indent level</span></span><br><span class="line">    <span class="keyword">local</span> level = countindent(line)</span><br><span class="line">    <span class="keyword">if</span> level &lt; indent <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">return</span> set</span><br><span class="line">    <span class="keyword">elseif</span> level &gt; indent <span class="keyword">then</span></span><br><span class="line">      <span class="built_in">error</span>(<span class="string">&quot;found bad indenting in line: &quot;</span>.. line)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> i, j = sfind(line, <span class="string">&#x27;%?%s+&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> i <span class="keyword">then</span></span><br><span class="line">      i, j = sfind(line, <span class="string">&#x27;%?$&#x27;</span>)</span><br><span class="line">      <span class="keyword">if</span> <span class="keyword">not</span> i <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">return</span> set</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">local</span> rest = ssub(line, j+<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> sfind(rest, <span class="string">&#x27;^[^\&#x27;\&quot;%s]*:&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">      <span class="comment">-- Inline nested hash</span></span><br><span class="line">      <span class="keyword">local</span> indent2 = j</span><br><span class="line">      <span class="built_in">lines</span>[<span class="number">1</span>] = <span class="built_in">string</span>.<span class="built_in">rep</span>(<span class="string">&#x27; &#x27;</span>, indent2)..rest</span><br><span class="line">      set[parsemap(<span class="string">&#x27;&#x27;</span>, <span class="built_in">lines</span>, indent2)] = <span class="literal">true</span></span><br><span class="line">    <span class="keyword">elseif</span> sfind(rest, <span class="string">&#x27;^%s+$&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">      tremove(<span class="built_in">lines</span>, <span class="number">1</span>)</span><br><span class="line">      <span class="keyword">if</span> #<span class="built_in">lines</span> == <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">        tinsert(set, null)</span><br><span class="line">        <span class="keyword">return</span> set</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">if</span> sfind(<span class="built_in">lines</span>[<span class="number">1</span>], <span class="string">&#x27;^%s*%?&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">local</span> indent2 = countindent(<span class="built_in">lines</span>[<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">if</span> indent2 == indent <span class="keyword">then</span></span><br><span class="line">          <span class="comment">-- Null array entry</span></span><br><span class="line">          set[null] = <span class="literal">true</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          set[parseseq(<span class="string">&#x27;&#x27;</span>, <span class="built_in">lines</span>, indent2)] = <span class="literal">true</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">elseif</span> rest <span class="keyword">then</span></span><br><span class="line">      tremove(<span class="built_in">lines</span>, <span class="number">1</span>)</span><br><span class="line">      set[parsescalar(rest, <span class="built_in">lines</span>)] = <span class="literal">true</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="built_in">error</span>(<span class="string">&quot;failed to classify line: &quot;</span>..line)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">return</span> set</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">parsemap</span><span class="params">(line, lines, indent)</span></span></span><br><span class="line">  <span class="keyword">if</span> <span class="keyword">not</span> isemptyline(line) <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">error</span>(<span class="string">&#x27;not map line: &#x27;</span>..line)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">local</span> map = <span class="built_in">setmetatable</span>(&#123;&#125;, types.map)</span><br><span class="line">  <span class="keyword">while</span> #<span class="built_in">lines</span> &gt; <span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">    <span class="comment">-- Check for a new document</span></span><br><span class="line">    line = <span class="built_in">lines</span>[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> startswith(line, <span class="string">&#x27;---&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">while</span> #<span class="built_in">lines</span> &gt; <span class="number">0</span> <span class="keyword">and</span> <span class="keyword">not</span> startswith(<span class="built_in">lines</span>, <span class="string">&#x27;---&#x27;</span>) <span class="keyword">do</span></span><br><span class="line">        tremove(<span class="built_in">lines</span>, <span class="number">1</span>)</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">return</span> map</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">-- Check the indent level</span></span><br><span class="line">    <span class="keyword">local</span> level, _ = countindent(line)</span><br><span class="line">    <span class="keyword">if</span> level &lt; indent <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">return</span> map</span><br><span class="line">    <span class="keyword">elseif</span> level &gt; indent <span class="keyword">then</span></span><br><span class="line">      <span class="built_in">error</span>(<span class="string">&quot;found bad indenting in line: &quot;</span>.. line)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">-- Find the key</span></span><br><span class="line">    <span class="keyword">local</span> key</span><br><span class="line">    <span class="keyword">local</span> s, rest = parsestring(line)</span><br><span class="line"></span><br><span class="line">    <span class="comment">-- Quoted keys</span></span><br><span class="line">    <span class="keyword">if</span> s <span class="keyword">and</span> startswith(rest, <span class="string">&#x27;:&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">local</span> sc = parsescalar(s, &#123;&#125;, <span class="number">0</span>)</span><br><span class="line">      <span class="keyword">if</span> sc <span class="keyword">and</span> <span class="built_in">type</span>(sc) ~= <span class="string">&#x27;string&#x27;</span> <span class="keyword">then</span></span><br><span class="line">        key = sc</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        key = s</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      line = ssub(rest, <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="built_in">error</span>(<span class="string">&quot;failed to classify line: &quot;</span>..line)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    key = checkdupekey(map, key)</span><br><span class="line">    line = ltrim(line)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ssub(line, <span class="number">1</span>, <span class="number">1</span>) == <span class="string">&#x27;!&#x27;</span> <span class="keyword">then</span></span><br><span class="line">      <span class="comment">-- ignore type</span></span><br><span class="line">      <span class="keyword">local</span> rh = ltrim(ssub(line, <span class="number">3</span>))</span><br><span class="line">      <span class="keyword">local</span> typename = smatch(rh, <span class="string">&#x27;^!?[^%s]+&#x27;</span>)</span><br><span class="line">      line = ltrim(ssub(rh, #typename+<span class="number">1</span>))</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> isemptyline(line) <span class="keyword">then</span></span><br><span class="line">      tremove(<span class="built_in">lines</span>, <span class="number">1</span>)</span><br><span class="line">      line = ltrim(line)</span><br><span class="line">      map[key] = parsescalar(line, <span class="built_in">lines</span>, indent)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="comment">-- An indent</span></span><br><span class="line">      tremove(<span class="built_in">lines</span>, <span class="number">1</span>)</span><br><span class="line">      <span class="keyword">if</span> #<span class="built_in">lines</span> == <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">        map[key] = null</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">if</span> sfind(<span class="built_in">lines</span>[<span class="number">1</span>], <span class="string">&#x27;^%s*%-&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">local</span> indent2 = countindent(<span class="built_in">lines</span>[<span class="number">1</span>])</span><br><span class="line">        map[key] = parseseq(<span class="string">&#x27;&#x27;</span>, <span class="built_in">lines</span>, indent2)</span><br><span class="line">      <span class="keyword">elseif</span> sfind(<span class="built_in">lines</span>[<span class="number">1</span>], <span class="string">&#x27;^%s*%?&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">local</span> indent2 = countindent(<span class="built_in">lines</span>[<span class="number">1</span>])</span><br><span class="line">        map[key] = parseset(<span class="string">&#x27;&#x27;</span>, <span class="built_in">lines</span>, indent2)</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">local</span> indent2 = countindent(<span class="built_in">lines</span>[<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">if</span> indent &gt;= indent2 <span class="keyword">then</span></span><br><span class="line">          <span class="comment">-- Null hash entry</span></span><br><span class="line">          map[key] = null</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          map[key] = parsemap(<span class="string">&#x27;&#x27;</span>, <span class="built_in">lines</span>, indent2)</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">return</span> map</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- : (list&lt;str&gt;)-&gt;dict</span></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">parsedocuments</span><span class="params">(lines)</span></span></span><br><span class="line">  <span class="built_in">lines</span> = <span class="built_in">select</span>(<span class="built_in">lines</span>, <span class="function"><span class="keyword">function</span><span class="params">(s)</span></span> <span class="keyword">return</span> <span class="keyword">not</span> isemptyline(s) <span class="keyword">end</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> sfind(<span class="built_in">lines</span>[<span class="number">1</span>], <span class="string">&#x27;^%%YAML&#x27;</span>) <span class="keyword">then</span> tremove(<span class="built_in">lines</span>, <span class="number">1</span>) <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">local</span> root = &#123;&#125;</span><br><span class="line">  <span class="keyword">local</span> in_document = <span class="literal">false</span></span><br><span class="line">  <span class="keyword">while</span> #<span class="built_in">lines</span> &gt; <span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">local</span> line = <span class="built_in">lines</span>[<span class="number">1</span>]</span><br><span class="line">    <span class="comment">-- Do we have a document header?</span></span><br><span class="line">    <span class="keyword">local</span> docright;</span><br><span class="line">    <span class="keyword">if</span> sfind(line, <span class="string">&#x27;^%-%-%-&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">      <span class="comment">-- Handle scalar documents</span></span><br><span class="line">      docright = ssub(line, <span class="number">4</span>)</span><br><span class="line">      tremove(<span class="built_in">lines</span>, <span class="number">1</span>)</span><br><span class="line">      in_document = <span class="literal">true</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">if</span> docright <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">not</span> sfind(docright, <span class="string">&#x27;^%s+$&#x27;</span>) <span class="keyword">and</span></span><br><span class="line">          <span class="keyword">not</span> sfind(docright, <span class="string">&#x27;^%s+#&#x27;</span>)) <span class="keyword">then</span></span><br><span class="line">        tinsert(root, parsescalar(docright, <span class="built_in">lines</span>))</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">elseif</span> #<span class="built_in">lines</span> == <span class="number">0</span> <span class="keyword">or</span> startswith(line, <span class="string">&#x27;---&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">      <span class="comment">-- A naked document</span></span><br><span class="line">      tinsert(root, null)</span><br><span class="line">      <span class="keyword">while</span> #<span class="built_in">lines</span> &gt; <span class="number">0</span> <span class="keyword">and</span> <span class="keyword">not</span> sfind(<span class="built_in">lines</span>[<span class="number">1</span>], <span class="string">&#x27;---&#x27;</span>) <span class="keyword">do</span></span><br><span class="line">        tremove(<span class="built_in">lines</span>, <span class="number">1</span>)</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      in_document = <span class="literal">false</span></span><br><span class="line">    <span class="comment">-- XXX The final &#x27;-+$&#x27; is to look for -- which ends up being an</span></span><br><span class="line">    <span class="comment">-- error later.</span></span><br><span class="line">    <span class="keyword">elseif</span> <span class="keyword">not</span> in_document <span class="keyword">and</span> #root &gt; <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">      <span class="comment">-- only the first document can be explicit</span></span><br><span class="line">      <span class="built_in">error</span>(<span class="string">&#x27;parse error: &#x27;</span>..line)</span><br><span class="line">    <span class="keyword">elseif</span> sfind(line, <span class="string">&#x27;^%s*%-&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">      <span class="comment">-- An array at the root</span></span><br><span class="line">      tinsert(root, parseseq(<span class="string">&#x27;&#x27;</span>, <span class="built_in">lines</span>, <span class="number">0</span>))</span><br><span class="line">    <span class="keyword">elseif</span> sfind(line, <span class="string">&#x27;^%s*[^%s]&#x27;</span>) <span class="keyword">then</span></span><br><span class="line">      <span class="comment">-- A hash at the root</span></span><br><span class="line">      <span class="keyword">local</span> level = countindent(line)</span><br><span class="line">      tinsert(root, parsemap(<span class="string">&#x27;&#x27;</span>, <span class="built_in">lines</span>, level))</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="comment">-- Shouldn&#x27;t get here.  @lines have whitespace-only lines</span></span><br><span class="line">      <span class="comment">-- stripped, and previous match is a line with any</span></span><br><span class="line">      <span class="comment">-- non-whitespace.  So this clause should only be reachable via</span></span><br><span class="line">      <span class="comment">-- a perlbug where \s is not symmetric with \S</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">-- uncoverable statement</span></span><br><span class="line">      <span class="built_in">error</span>(<span class="string">&#x27;parse error: &#x27;</span>..line)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">if</span> #root &gt; <span class="number">1</span> <span class="keyword">and</span> Null.isnull(root[<span class="number">1</span>]) <span class="keyword">then</span></span><br><span class="line">    tremove(root, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> root</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">return</span> root</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--- Parse yaml string into table.</span></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">parse</span><span class="params">(source)</span></span></span><br><span class="line">  <span class="keyword">local</span> <span class="built_in">lines</span> = &#123;&#125;</span><br><span class="line">  <span class="keyword">for</span> line <span class="keyword">in</span> <span class="built_in">string</span>.<span class="built_in">gmatch</span>(source .. <span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;(.-)\r?\n&#x27;</span>) <span class="keyword">do</span></span><br><span class="line">    tinsert(<span class="built_in">lines</span>, line)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">local</span> docs = parsedocuments(<span class="built_in">lines</span>)</span><br><span class="line">  <span class="keyword">if</span> #docs == <span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> docs[<span class="number">1</span>]</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> docs</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> &#123;</span><br><span class="line">  version = <span class="number">0.1</span>,</span><br><span class="line">  parse = parse,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>技术</category>
        <category>Lua</category>
      </categories>
      <tags>
        <tag>Dice</tag>
      </tags>
  </entry>
  <entry>
    <title>getFileList 获取文件夹列表</title>
    <url>/2022/08/03/getFileList/</url>
    <content><![CDATA[<div class="note success"><p><strong>getFileList</strong><br>简单的调用控制台获取文件夹列表实例</p>
</div>

<h1 id="获取文件夹列表"><a href="#获取文件夹列表" class="headerlink" title="获取文件夹列表"></a>获取文件夹列表</h1><blockquote>
<p>使用《署名—非商业性使用—相同方式共享 4.0 协议国际版》（CC BY-NC-SA 4.0）进行授权。<br><span class="exturl" data-url="aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC9sZWdhbGNvZGUuemgtSGFucw==">https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode.zh-Hans<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>[ toc ]</p>
<table>
<thead>
<tr>
<th align="left">System</th>
<th align="center">statement</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Windows</td>
<td align="center">supported</td>
</tr>
<tr>
<td align="left">Linux</td>
<td align="center">unsupported</td>
</tr>
<tr>
<td align="left">IOS</td>
<td align="center">unsupported</td>
</tr>
</tbody></table>
<hr>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0EyQzI5SzkvQTJDMjlLOS5naXRodWIuaW8vcmVsZWFzZXMvdGFnL2dldEZpbGVMaXN0">getFileList.zip<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h3><ul>
<li>作者： 简律纯</li>
<li>联系方式：qq:a2c29k9</li>
<li>版本：v1.0</li>
<li>更新日期：2022/08/03</li>
<li>关键词：<br><code>--getDiceList=</code><br><code>--getRootList=</code></li>
<li>许可协议：CC BY-NC-SA 4.0</li>
</ul>
<h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>利用os库中的os. execute执行cmd指令，达到获取文件夹列表的目的。</p>
<h3 id="须知"><a href="#须知" class="headerlink" title="须知"></a>须知</h3><p>该脚本只适配win平台，linux版本将会在后续更新（或者你也可以修改脚本，将dir改为ls即可，注意linux斜杠和反斜杠与win的区别），MA暂无解决方法。</p>
<h3 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h3><blockquote>
<p><code>--getDiceList=nil</code>与 <code>--getRootList=nil</code>分别用于获取dice根目录列表以及框架根目录列表，后接二级目录或更多（你需要用两个反斜杠<a href="">\</a>将他们连接）子目录来获取其列表。每次执行命令，脚本将会在dice根目录生成对应的DiceList.txt与RootList.txt，若文件太多发不出来也可以去那边查看。</p>
</blockquote>
<h3 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h3><blockquote>
<p>获取根目录列表<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-08-03/1659492690-490071-13b5fe1b2faf154d.png"></p>
</blockquote>
<blockquote>
<p>获取根目录二级或三级文件夹列表<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-08-03/1659492727-777395-17c81e22d7ab297.png"><br><strong>获取Dice文件夹二级或更多级文件夹列表同理。</strong></p>
</blockquote>
<blockquote>
<p>获取Dice文件夹列表<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-08-03/1659492798-371911-1528bb3c4ba6fcb6.png"></p>
</blockquote>
<h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">---------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">-- @getFileList 获取文件列表.</span></span><br><span class="line"><span class="comment">-- Author @简律纯(qq:a2c29k9)</span></span><br><span class="line"><span class="comment">-- @License MIT.</span></span><br><span class="line"><span class="comment">-- 2022/08/03</span></span><br><span class="line"><span class="comment">---------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">msg_order=&#123;[<span class="string">&quot;--getDiceList=&quot;</span>]=<span class="string">&quot;getDiceList&quot;</span>,[<span class="string">&quot;--getRootList=&quot;</span>]=<span class="string">&quot;getRootList&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">read_file = <span class="function"><span class="keyword">function</span><span class="params">(path,mode1,mode2)</span></span></span><br><span class="line">    <span class="keyword">local</span> text = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">local</span> file = <span class="built_in">io</span>.<span class="built_in">open</span>(<span class="built_in">path</span>,mode1)</span><br><span class="line">    <span class="keyword">if</span> (file ~= <span class="literal">nil</span>) <span class="keyword">then</span></span><br><span class="line">      text = file.<span class="built_in">read</span>(file, mode2)</span><br><span class="line">      <span class="built_in">io</span>.<span class="built_in">close</span>(file)</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;没有找到文件哦~&quot;</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> text</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">getLineCount = <span class="function"><span class="keyword">function</span><span class="params">(path)</span></span></span><br><span class="line"><span class="keyword">local</span> BUFSIZE = <span class="number">2</span>^<span class="number">13</span></span><br><span class="line"><span class="keyword">local</span> f = <span class="built_in">io</span>.<span class="built_in">input</span>(<span class="built_in">path</span>)</span><br><span class="line"><span class="keyword">local</span> lc = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">local</span> <span class="built_in">lines</span>,rest = f:<span class="built_in">read</span>(BUFSIZE,<span class="string">&#x27;*line&#x27;</span>)</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">lines</span> <span class="keyword">then</span> <span class="keyword">break</span> <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">if</span> rest <span class="keyword">then</span> <span class="built_in">lines</span> = <span class="built_in">lines</span> .. rest .. <span class="string">&#x27;\n&#x27;</span> <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">local</span> _,t = <span class="built_in">string</span>.<span class="built_in">gsub</span>(<span class="built_in">lines</span>,<span class="string">&quot;%S+&quot;</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line">        _,t = <span class="built_in">string</span>.<span class="built_in">gsub</span>(<span class="built_in">lines</span>,<span class="string">&quot;\n&quot;</span>,<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">        lc = lc + t</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> lc</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">getDiceList = <span class="function"><span class="keyword">function</span><span class="params">(msg)</span></span></span><br><span class="line">    <span class="keyword">local</span> <span class="built_in">path</span> = <span class="built_in">string</span>.<span class="built_in">sub</span>(msg.fromMsg,#<span class="string">&#x27;--getDiceList=&#x27;</span>+<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">local</span> Dir = <span class="built_in">path</span></span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">path</span> == <span class="string">&#x27;nil&#x27;</span> <span class="keyword">then</span> Dir = <span class="literal">nil</span> <span class="keyword">end</span></span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> Dir <span class="keyword">then</span> </span><br><span class="line">        cmd = <span class="string">&#x27;dir &#x27;</span>.. getDiceDir()..<span class="string">&#x27;\\&#x27;</span>..<span class="built_in">path</span>..<span class="string">&#x27; /b &gt;&#x27;</span>..getDiceDir()..<span class="string">&#x27;//DiceList.txt&#x27;</span></span><br><span class="line">        <span class="built_in">os</span>.<span class="built_in">execute</span>(cmd)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        cmd = <span class="string">&#x27;dir &#x27;</span>.. getDiceDir()..<span class="string">&#x27; /b &gt;&#x27;</span>..getDiceDir()..<span class="string">&#x27;//DiceList.txt&#x27;</span></span><br><span class="line">        <span class="built_in">os</span>.<span class="built_in">execute</span>(cmd)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  </span><br><span class="line">    <span class="keyword">return</span> read_file(getDiceDir()..<span class="string">&#x27;//DiceList.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>,<span class="string">&#x27;*a&#x27;</span>)..<span class="built_in">os</span>.<span class="built_in">date</span>(<span class="string">&#x27;\n%x&#x27;</span>)..<span class="string">&#x27;\n文件夹与文件共 &#x27;</span>..getLineCount(getDiceDir()..<span class="string">&#x27;//DiceList.txt&#x27;</span>)..<span class="string">&#x27; 个&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">getRootList = <span class="function"><span class="keyword">function</span><span class="params">(msg)</span></span></span><br><span class="line">    <span class="keyword">local</span> <span class="built_in">path</span> = <span class="built_in">string</span>.<span class="built_in">sub</span>(msg.fromMsg,#<span class="string">&#x27;--getRootList=&#x27;</span>+<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">local</span> Dir = <span class="built_in">path</span></span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">path</span> == <span class="string">&#x27;nil&#x27;</span> <span class="keyword">then</span> Dir = <span class="literal">nil</span> <span class="keyword">end</span></span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> Dir <span class="keyword">then</span> </span><br><span class="line">        cmd = <span class="string">&#x27;dir &#x27;</span>..<span class="built_in">path</span>..<span class="string">&#x27; /b &gt;&#x27;</span>..getDiceDir()..<span class="string">&#x27;//RootList.txt&#x27;</span></span><br><span class="line">        <span class="built_in">os</span>.<span class="built_in">execute</span>(cmd)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        cmd = <span class="string">&#x27;dir /b &gt;&#x27;</span>..getDiceDir()..<span class="string">&#x27;//RootList.txt&#x27;</span></span><br><span class="line">        <span class="built_in">os</span>.<span class="built_in">execute</span>(cmd)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  </span><br><span class="line">    <span class="keyword">return</span> read_file(getDiceDir()..<span class="string">&#x27;//RootList.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>,<span class="string">&#x27;*a&#x27;</span>)..<span class="built_in">os</span>.<span class="built_in">date</span>(<span class="string">&#x27;\n%x&#x27;</span>)..<span class="string">&#x27;\n文件夹与文件共 &#x27;</span>..getLineCount(getDiceDir()..<span class="string">&#x27;//RootList.txt&#x27;</span>)..<span class="string">&#x27; 个&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>技术</category>
        <category>Lua</category>
      </categories>
      <tags>
        <tag>Dice</tag>
      </tags>
  </entry>
  <entry>
    <title>repeat-joker</title>
    <url>/2022/07/14/repeat-joker/</url>
    <content><![CDATA[<details class="note "><summary><p>secondary</p>
</summary>
<p><strong>目前正在努力ing…</strong></p>

</details>

<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote>
<p>使用《署名—非商业性使用—相同方式共享4.0 协议国际版》（CC BY-NC-SA 4.0）进行授权<span class="exturl" data-url="aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC9sZWdhbGNvZGUuemgtSGFucw==">https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode.zh-Hans<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<div class="note warning"><p><strong>WARNING ⚠️</strong><br>提供了dice解决复读问题的一种方法思路，但不免会有诸多不便。</p>
<blockquote>
<p>采用读写json方式。</p>
</blockquote>
</div>


<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">msg_order=&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">require</span>(<span class="string">&quot;basicFunction&quot;</span>)</span><br><span class="line">json = <span class="built_in">require</span>(<span class="string">&quot;json&quot;</span>)</span><br><span class="line"></span><br><span class="line">msg_order[<span class="string">&quot;.repjoker&quot;</span>]=<span class="string">&quot;repjoker&quot;</span></span><br><span class="line"></span><br><span class="line">default_uid_json = <span class="string">[[&#123;&quot;uid&quot;:2753364619,&quot;msg&quot;:&quot;好耶&quot;,&quot;time&quot;:1657773120&#125;]]</span></span><br><span class="line">default_gid_json = <span class="string">[[&#123;&quot;gid&quot;:971050440,&quot;msg&quot;:&quot;简律纯&quot;,&quot;time&quot;:1657773120&#125;]]</span></span><br><span class="line">uid_path = <span class="string">&quot;plugin//repeat-joker//uid.json&quot;</span></span><br><span class="line">gid_path = <span class="string">&quot;plugin//repeat-joker//gid.json&quot;</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span>(getUserConf(getDiceQQ(),<span class="string">&#x27;repjoker_&#x27;</span>) ~= <span class="literal">true</span>) <span class="keyword">then</span></span><br><span class="line">    mkDirs(getDiceDir()..<span class="string">&#x27;//plugin//repeat-joker&#x27;</span>)</span><br><span class="line">    write_file(uid_path,default_uid_json)</span><br><span class="line">    write_file(gid_path,default_gid_json)</span><br><span class="line">    setUserConf(getDiceQQ(),<span class="string">&#x27;repjoker_&#x27;</span>,<span class="literal">true</span>)</span><br><span class="line">    <span class="comment">--&gt; repeat-joker:初始化完成~</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">repjoker</span><span class="params">(msg)</span></span></span><br><span class="line">    <span class="keyword">local</span> default_data = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">local</span> data = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">local</span> son_orders = fitemSort(Match(msg.fromMsg,#<span class="string">&#x27;.repkiller&#x27;</span>+<span class="number">1</span>))</span><br><span class="line">    <span class="keyword">if</span>(fitems[<span class="number">1</span>] == <span class="string">&quot;list&quot;</span>) <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">if</span>(fitems[<span class="number">2</span>] == <span class="string">&quot;uid&quot;</span>) <span class="keyword">then</span></span><br><span class="line">            default_data = <span class="string">&quot;&#123;\&quot;uid_list\&quot;:[&quot;</span>..read_file(uid_path)..<span class="string">&quot;]&#125;&quot;</span></span><br><span class="line">            data = json.decode(default_data)</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&#123;self&#125;共【&quot;</span>..#data.uid_list..<span class="string">&quot;】条私聊记录:&quot;</span>..default_data</span><br><span class="line">        <span class="keyword">elseif</span>(fitems[<span class="number">2</span>] == <span class="string">&quot;gid&quot;</span>) <span class="keyword">then</span></span><br><span class="line">            default_data =  <span class="string">&quot;&#123;\&quot;gid_list\&quot;:[&quot;</span>..read_file(gid_path)..<span class="string">&quot;]&#125;&quot;</span></span><br><span class="line">            data =  json.decode(default_data)</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&#123;self&#125;共【&quot;</span>..#data.gid_list..<span class="string">&quot;】条群聊记录:\n&quot;</span>..default_data</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">elseif</span>(fitems[<span class="number">1</span>] == <span class="string">&quot;uid&quot;</span>) <span class="keyword">then</span></span><br><span class="line">        default_data = <span class="string">&quot;&#123;\&quot;uid_list\&quot;:[&quot;</span>..read_file(uid_path)..<span class="string">&quot;]&#125;&quot;</span></span><br><span class="line">        data = json.decode(default_data)</span><br><span class="line">        <span class="keyword">if</span>(fitems[<span class="number">2</span>] == <span class="literal">nil</span>) <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">if</span>(getUserConf(msg.uid,<span class="string">&#x27;uid-help&#x27;</span>) ~= <span class="literal">true</span>) <span class="keyword">then</span></span><br><span class="line">                setUserConf(msg.uid,<span class="string">&#x27;uid-help&#x27;</span>,<span class="literal">true</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;&#123;nick&#125;你的对象呢？\n是这样用哒:\n.repjoker uid &lt;QQ号&gt;\n记住了以后可不会再告诉你了&quot;</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;&#123;nick&#125;又没有对象了吗?&quot;</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">local</span> uid = getAtQQ(fitems[<span class="number">2</span>])</span><br><span class="line">            data = json.decode(<span class="built_in">string</span>.<span class="built_in">gsub</span>(default_data,<span class="string">&#x27;%s&#x27;</span>,<span class="string">&#x27;&#x27;</span>))</span><br><span class="line">            <span class="keyword">for</span> i=<span class="number">1</span>,#data.uid_list <span class="keyword">do</span></span><br><span class="line">                <span class="keyword">if</span>(data.uid_list[i].uid == <span class="built_in">tonumber</span>(uid)) <span class="keyword">then</span></span><br><span class="line">                    k = i</span><br><span class="line">                    out = <span class="string">&quot;已为&#123;nick&#125;找到&quot;</span>..getUserConf(<span class="built_in">tonumber</span>(data.uid_list[k].uid),<span class="string">&quot;nick#&quot;</span>)..<span class="string">&quot;最近的一条发言记录:\n&quot;</span>..stamp2Time(data.uid_list[k].<span class="built_in">time</span>)..<span class="string">&quot;:&quot;</span>..data.uid_list[k].msg</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    out = <span class="string">&quot;&#123;self&#125;处没有关于&quot;</span>.. getUserConf(<span class="built_in">tonumber</span>(uid),<span class="string">&quot;nick#&quot;</span>)..<span class="string">&quot;的发言记录哦~&quot;</span></span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">return</span> out</span><br><span class="line">    <span class="keyword">elseif</span>(fitems[<span class="number">1</span>] == <span class="string">&quot;gid&quot;</span>) <span class="keyword">then</span></span><br><span class="line">        default_data = <span class="string">&quot;&#123;\&quot;gid_list\&quot;:[&quot;</span>..read_file(gid_path)..<span class="string">&quot;]&#125;&quot;</span></span><br><span class="line">        data = json.decode(default_data)</span><br><span class="line">        <span class="keyword">if</span>(fitems[<span class="number">2</span>] == <span class="literal">nil</span>) <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">return</span> getGroupConf(<span class="built_in">tonumber</span>(msg.gid),<span class="string">&quot;name&quot;</span>)..<span class="string">&quot;(&quot;</span>..msg.gid..<span class="string">&quot;)还没有人复读过哦~#期待&quot;</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">local</span> gid = getAtQQ(fitems[<span class="number">2</span>])</span><br><span class="line">            data = json.decode(<span class="built_in">string</span>.<span class="built_in">gsub</span>(default_data,<span class="string">&#x27;%s&#x27;</span>,<span class="string">&#x27;&#x27;</span>))</span><br><span class="line">            <span class="keyword">for</span> i=<span class="number">1</span>,#data.msg <span class="keyword">do</span></span><br><span class="line">                <span class="keyword">if</span>(data.gid[i] == <span class="built_in">tonumber</span>(gid)) <span class="keyword">then</span></span><br><span class="line">                    k = i</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    out = <span class="string">&quot;&#123;self&#125;处没有关于群&quot;</span>.. getGroupConf(<span class="built_in">tonumber</span>(gid),<span class="string">&quot;name&quot;</span>)..<span class="string">&quot;(&quot;</span>..gid..<span class="string">&quot;)的用户发言记录哦~&quot;</span></span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">return</span> out</span><br><span class="line">    <span class="keyword">elseif</span>(fitems[<span class="number">1</span>] == <span class="string">&quot;test&quot;</span>) <span class="keyword">then</span></span><br><span class="line">        write_(msg.fromMsg,msg.uid,msg.fromGroup)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">write_</span><span class="params">(str,uid,gid)</span></span></span><br><span class="line">    <span class="keyword">if</span>(gid == <span class="string">&quot;0&quot;</span>) <span class="keyword">then</span></span><br><span class="line">        write_file(uid_path,<span class="string">&quot;,&#123;\&quot;uid\&quot;:&quot;</span>..uid..<span class="string">&quot;,\&quot;msg\&quot;:\&quot;&quot;</span>..str..<span class="string">&quot;\&quot;,\&quot;time\&quot;:&quot;</span>..<span class="built_in">os</span>.<span class="built_in">time</span>()..<span class="string">&quot;&#125;&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        write_file(gid_path,<span class="string">&quot;,&#123;\&quot;gid\&quot;:&quot;</span>..gid..<span class="string">&quot;,\&quot;msg\&quot;:\&quot;&quot;</span>..str..<span class="string">&quot;\&quot;,\&quot;time\&quot;:&quot;</span>..<span class="built_in">os</span>.<span class="built_in">time</span>()..<span class="string">&quot;&#125;&quot;</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
        <category>Lua</category>
      </categories>
      <tags>
        <tag>Dice</tag>
      </tags>
  </entry>
  <entry>
    <title>在dice里关于ai的应用</title>
    <url>/2022/07/06/ai-reply/</url>
    <content><![CDATA[<div class="note primary"><p>一个失败品…</p>
</div>

<blockquote>
<p>使用《署名—非商业性使用—相同方式共享 4.0 协议国际版》（CC BY-NC-SA 4.0）进行授权。<br><span class="exturl" data-url="aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC9sZWdhbGNvZGUuemgtSGFucw==">https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode.zh-Hans<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>非常无聊，于是用正则以及dice的lua回复写了一个调用ai实例，总结了两个ai，青云客与思知。</p>
<p>使用方法：<br>调用青云客:setUserConf(getDiceQQ(),’ai’,1)<br>调用思知:setUserConf(getDiceQQ(),’ai’,2)</p>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">.reply set</span><br><span class="line">Regex=(.*)</span><br><span class="line">Lua=</span><br><span class="line"><span class="keyword">if</span> getUserConf(getDiceQQ(),<span class="string">&#x27;ai&#x27;</span>) == <span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">url = <span class="string">&quot;http://api.qingyunke.com/api.php?key=free&amp;appid=0&amp;msg=&quot;</span> .. msg.fromMsg</span><br><span class="line">	res,data = http.get(url)</span><br><span class="line">	json = <span class="built_in">require</span>(<span class="string">&quot;json&quot;</span>)</span><br><span class="line">	j = json.decode(data)</span><br><span class="line"><span class="keyword">return</span> j.content</span><br><span class="line"><span class="keyword">elseif</span> getUserConf(getDiceQQ(),<span class="string">&#x27;ai&#x27;</span>) == <span class="number">2</span> <span class="keyword">then</span></span><br><span class="line">url = <span class="string">&quot;https://api.ownthink.com/bot?spoken=&quot;</span> .. msg.fromMsg</span><br><span class="line">	res,data = http.get(url)</span><br><span class="line">	json = <span class="built_in">require</span>(<span class="string">&quot;json&quot;</span>)</span><br><span class="line">	j = json.decode(data)</span><br><span class="line"><span class="keyword">return</span> j.data.info.text</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>技术</category>
        <category>Lua</category>
      </categories>
      <tags>
        <tag>Dice</tag>
        <tag>AI</tag>
      </tags>
  </entry>
  <entry>
    <title>reborn 重开模拟器</title>
    <url>/2022/06/24/reborn/</url>
    <content><![CDATA[<div class="note success"><p><strong>reborn</strong><br>高考成绩出来了，重开吧，摆烂！</p>
</div>

<blockquote>
<p>使用《署名—非商业性使用—相同方式共享 4.0 协议国际版》（CC BY-NC-SA 4.0）进行授权。<br><span class="exturl" data-url="aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC9sZWdhbGNvZGUuemgtSGFucw==">https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode.zh-Hans<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h2 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h2><ul>
<li>作者： 简律纯</li>
<li>联系方式：qq:a2c29k9</li>
<li>版本：v1.2 fix</li>
<li>更新日期：2022/06/24</li>
<li>简介：投胎</li>
<li>关键词：<code>reborn</code></li>
<li>许可协议：CC BY-NC-SA 4.0</li>
</ul>
<h2 id="详细介绍"><a href="#详细介绍" class="headerlink" title="详细介绍"></a>详细介绍</h2><p>首先感谢 @Natsume <span class="exturl" data-url="aHR0cHM6Ly9mb3J1bS5rb2tvbmEudGVjaC9kLzExOA==">随机国家<i class="fa fa-external-link-alt"></i></span><br>算起来Natsume的这个帖子已经两年整了。<br>ta说这似乎没什么用，于是我便突发奇想昨天晚上熬夜整了个重开模拟器。</p>
<h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img src="https://cdn.jsdelivr.net/gh/A2C29K9/img@main/2022/06/24/49e9f345b9e057b6.png"></p>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0EyQzI5SzkvQTJDMjlLOS5naXRodWIuaW8vcmVsZWFzZXMvdGFnL3JlYm9ybg==">reborn v1.2 fix.zip<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">---------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">--reborn.重生|投胎 脚本</span></span><br><span class="line"><span class="comment">--countryu取自Natsume(https://forum.kokona.tech/d/118)</span></span><br><span class="line"><span class="comment">--作者:简律纯(qq:A2C29K9)</span></span><br><span class="line"><span class="comment">--2022.06.24 Fixed</span></span><br><span class="line"><span class="comment">---------------------------------------------------------------------</span></span><br><span class="line">msg_order=&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">born</span><span class="params">(msg)</span></span></span><br><span class="line">    <span class="keyword">local</span> countryu = &#123; <span class="string">&quot;芬兰&quot;</span>,<span class="string">&quot;瑞典&quot;</span>,<span class="string">&quot;挪威&quot;</span>,<span class="string">&quot;冰岛&quot;</span>,<span class="string">&quot;丹麦&quot;</span>,<span class="string">&quot;法罗群岛（丹）&quot;</span> ,<span class="string">&quot;爱沙尼亚&quot;</span>,<span class="string">&quot;拉脱维亚&quot;</span>,<span class="string">&quot;立陶宛&quot;</span>,<span class="string">&quot;俄罗斯&quot;</span>,<span class="string">&quot;白俄罗斯&quot;</span>,<span class="string">&quot;乌克兰&quot;</span>,<span class="string">&quot;摩尔多瓦&quot;</span>,<span class="string">&quot;波兰&quot;</span>,<span class="string">&quot;捷克&quot;</span>,<span class="string">&quot;斯洛伐克&quot;</span>,<span class="string">&quot;匈牙利&quot;</span>,<span class="string">&quot;德国&quot;</span>,<span class="string">&quot;奥地利&quot;</span>,<span class="string">&quot;瑞士&quot;</span>,<span class="string">&quot;列支敦士登&quot;</span>,<span class="string">&quot;英国&quot;</span>,<span class="string">&quot;爱尔兰&quot;</span>,<span class="string">&quot;荷兰&quot;</span>,<span class="string">&quot;比利时&quot;</span>,<span class="string">&quot;卢森堡&quot;</span>,<span class="string">&quot;法国&quot;</span>,<span class="string">&quot;摩纳哥&quot;</span>,<span class="string">&quot;罗马尼亚&quot;</span>,<span class="string">&quot;保加利亚&quot;</span>,<span class="string">&quot;塞尔维亚&quot;</span>,<span class="string">&quot;黑山&quot;</span>,<span class="string">&quot;马其顿&quot;</span>,<span class="string">&quot;阿尔巴尼亚&quot;</span>,<span class="string">&quot;希腊&quot;</span>,<span class="string">&quot;斯洛文尼亚&quot;</span>,<span class="string">&quot;克罗地亚&quot;</span>,<span class="string">&quot;波斯尼亚和墨塞哥维那&quot;</span>,<span class="string">&quot;意大利&quot;</span>,<span class="string">&quot;梵蒂冈&quot;</span>,<span class="string">&quot;圣马力诺&quot;</span>,<span class="string">&quot;马耳他&quot;</span>,<span class="string">&quot;西班牙&quot;</span>,<span class="string">&quot;葡萄牙&quot;</span>,<span class="string">&quot;安道尔&quot;</span>,<span class="string">&quot;中国&quot;</span>,<span class="string">&quot;蒙古&quot;</span>,<span class="string">&quot;朝鲜&quot;</span>,<span class="string">&quot;韩国&quot;</span>,<span class="string">&quot;日本&quot;</span>,<span class="string">&quot;菲律宾&quot;</span>,<span class="string">&quot;越南&quot;</span>,<span class="string">&quot;老挝&quot;</span>,<span class="string">&quot;柬埔寨&quot;</span>,<span class="string">&quot;缅甸&quot;</span>,<span class="string">&quot;泰国&quot;</span>,<span class="string">&quot;马来西亚&quot;</span>,<span class="string">&quot;文莱&quot;</span>,<span class="string">&quot;新加坡&quot;</span>,<span class="string">&quot;印度尼西亚&quot;</span>,<span class="string">&quot;东帝汶&quot;</span>,<span class="string">&quot;尼泊尔&quot;</span>,<span class="string">&quot;不丹&quot;</span>,<span class="string">&quot;孟加拉国&quot;</span>,<span class="string">&quot;印度&quot;</span>,<span class="string">&quot;巴基斯坦&quot;</span>,<span class="string">&quot;斯里兰卡&quot;</span>,<span class="string">&quot;马尔代夫&quot;</span>,<span class="string">&quot;哈萨克斯坦&quot;</span>,<span class="string">&quot;土库曼斯坦&quot;</span>,<span class="string">&quot;塔吉克斯坦&quot;</span>,<span class="string">&quot;乌兹别克斯坦&quot;</span>,<span class="string">&quot;吉尔吉斯斯坦&quot;</span>,<span class="string">&quot;阿富汗&quot;</span>,<span class="string">&quot;伊拉克&quot;</span>,<span class="string">&quot;伊朗&quot;</span>,<span class="string">&quot;叙利亚&quot;</span>,<span class="string">&quot;约旦&quot;</span>,<span class="string">&quot;黎巴嫩&quot;</span>,<span class="string">&quot;以色列&quot;</span>,<span class="string">&quot;巴勒斯坦&quot;</span>,<span class="string">&quot;巴林&quot;</span>,<span class="string">&quot;卡塔尔&quot;</span>,<span class="string">&quot;科威特&quot;</span>,<span class="string">&quot;沙特阿拉伯&quot;</span>,<span class="string">&quot;阿拉伯联合酋长国&quot;</span>,<span class="string">&quot;阿曼&quot;</span>,<span class="string">&quot;也门&quot;</span>,<span class="string">&quot;格鲁吉亚&quot;</span>,<span class="string">&quot;亚美尼亚&quot;</span>,<span class="string">&quot;阿塞拜疆&quot;</span>,<span class="string">&quot;塞浦路斯&quot;</span>,<span class="string">&quot;土耳其&quot;</span>,<span class="string">&quot;埃及&quot;</span>,<span class="string">&quot;利比亚&quot;</span>,<span class="string">&quot;苏丹&quot;</span>,<span class="string">&quot;突尼斯&quot;</span>,<span class="string">&quot;阿尔及利亚&quot;</span>,<span class="string">&quot;摩洛哥&quot;</span>,<span class="string">&quot;亚速尔群岛（葡）&quot;</span>,<span class="string">&quot;马德拉群岛（葡）&quot;</span>,<span class="string">&quot;埃塞俄比亚&quot;</span>,<span class="string">&quot;厄立特里亚&quot;</span>,<span class="string">&quot;索马里&quot;</span>,<span class="string">&quot;吉布提&quot;</span>,<span class="string">&quot;肯尼亚&quot;</span>,<span class="string">&quot;坦桑尼亚&quot;</span>,<span class="string">&quot;乌干达&quot;</span>,<span class="string">&quot;卢旺达&quot;</span>,<span class="string">&quot;布隆迪&quot;</span>,<span class="string">&quot;塞舌尔&quot;</span>,<span class="string">&quot;赞比亚&quot;</span>,<span class="string">&quot;安哥拉&quot;</span>,<span class="string">&quot;津巴布韦&quot;</span>,<span class="string">&quot;马拉维&quot;</span>,<span class="string">&quot;莫桑比克&quot;</span>,<span class="string">&quot;博茨瓦纳&quot;</span>,<span class="string">&quot;纳米比亚&quot;</span>,<span class="string">&quot;斯威士兰&quot;</span>,<span class="string">&quot;莱索托&quot;</span>,<span class="string">&quot;马达加斯加&quot;</span>,<span class="string">&quot;科摩罗&quot;</span>,<span class="string">&quot;毛里求斯&quot;</span>,<span class="string">&quot;留尼旺（法）&quot;</span>,<span class="string">&quot;圣赫勒拿&quot;</span>,<span class="string">&quot;（英）南非&quot;</span>,<span class="string">&quot;乍得&quot;</span>,<span class="string">&quot;中非&quot;</span>,<span class="string">&quot;喀麦隆&quot;</span>,<span class="string">&quot;加蓬&quot;</span>,<span class="string">&quot;圣多美&quot;</span>,<span class="string">&quot;赤道几内亚&quot;</span>,<span class="string">&quot;刚果民主共和国（刚果)&quot;</span>,<span class="string">&quot;普林西比&quot;</span>,<span class="string">&quot;毛里塔尼亚&quot;</span>,<span class="string">&quot;塞内加尔&quot;</span>,<span class="string">&quot;冈比亚&quot;</span>,<span class="string">&quot;马里&quot;</span>,<span class="string">&quot;布基纳法索&quot;</span>,<span class="string">&quot;几内亚&quot;</span>,<span class="string">&quot;几内亚比绍&quot;</span>,<span class="string">&quot;塞拉利昂&quot;</span>,<span class="string">&quot;利比里亚&quot;</span>,<span class="string">&quot;科特迪瓦&quot;</span>,<span class="string">&quot;佛得角&quot;</span>,<span class="string">&quot;加纳&quot;</span>,<span class="string">&quot;多哥&quot;</span>,<span class="string">&quot;贝宁&quot;</span>,<span class="string">&quot;尼日尔&quot;</span>,<span class="string">&quot;加那利群岛（西）&quot;</span>,<span class="string">&quot;澳大利亚&quot;</span>,<span class="string">&quot;新西兰&quot;</span>,<span class="string">&quot;巴布亚新几内亚&quot;</span>,<span class="string">&quot;所罗门群岛&quot;</span>,<span class="string">&quot;瓦努阿图&quot;</span>,<span class="string">&quot;密克罗尼西亚&quot;</span>,<span class="string">&quot;马绍尔群岛&quot;</span>,<span class="string">&quot;帕劳&quot;</span>,<span class="string">&quot;瑙鲁&quot;</span>,<span class="string">&quot;基里巴斯&quot;</span>,<span class="string">&quot;图瓦卢&quot;</span>,<span class="string">&quot;萨摩亚&quot;</span>,<span class="string">&quot;斐济群岛&quot;</span>,<span class="string">&quot;汤加&quot;</span>,<span class="string">&quot;库克群岛（新）&quot;</span>,<span class="string">&quot;关岛（美）&quot;</span>,<span class="string">&quot;新喀里多尼亚（法）&quot;</span>,<span class="string">&quot;法属波利尼西亚&quot;</span>,<span class="string">&quot;皮特凯恩岛（英）&quot;</span>,<span class="string">&quot;瓦利斯与富图纳（法）&quot;</span>,<span class="string">&quot;纽埃（新）&quot;</span>,<span class="string">&quot;托克劳（新）&quot;</span>,<span class="string">&quot;美属萨摩亚&quot;</span>,<span class="string">&quot;北马里亚纳（美）&quot;</span>,<span class="string">&quot;加拿大&quot;</span>,<span class="string">&quot;美国&quot;</span>,<span class="string">&quot;墨西哥&quot;</span>,<span class="string">&quot;格陵兰（丹）&quot;</span>,<span class="string">&quot;危地马拉&quot;</span>,<span class="string">&quot;伯利兹&quot;</span>,<span class="string">&quot;萨尔瓦多&quot;</span>,<span class="string">&quot;洪都拉斯&quot;</span>,<span class="string">&quot;尼加拉瓜&quot;</span>,<span class="string">&quot;哥斯达黎加&quot;</span>,<span class="string">&quot;巴拿马&quot;</span>,<span class="string">&quot;巴哈马&quot;</span>,<span class="string">&quot;古巴&quot;</span>,<span class="string">&quot;牙买加&quot;</span>,<span class="string">&quot;海地&quot;</span>,<span class="string">&quot;多米尼加共和国&quot;</span>,<span class="string">&quot;安提瓜和巴布达&quot;</span>,<span class="string">&quot;圣基茨和尼维斯&quot;</span>,<span class="string">&quot;多米尼克&quot;</span>,<span class="string">&quot;圣卢西亚&quot;</span>,<span class="string">&quot;圣文森特和格林纳丁斯&quot;</span>,<span class="string">&quot;格林纳达&quot;</span>,<span class="string">&quot;特立尼达和多巴哥&quot;</span>,<span class="string">&quot;波多黎各（美）&quot;</span>,<span class="string">&quot;英属维尔京群岛&quot;</span>,<span class="string">&quot;巴巴多斯&quot;</span>,<span class="string">&quot;美属维尔京群岛&quot;</span>,<span class="string">&quot;蒙特塞拉特（英）&quot;</span>,<span class="string">&quot;瓜德罗普（法）&quot;</span>,<span class="string">&quot;马提尼克（法）&quot;</span>,<span class="string">&quot;荷属安的列斯&quot;</span>,<span class="string">&quot;安圭拉&quot;</span>,<span class="string">&quot;阿鲁巴（荷）&quot;</span>,<span class="string">&quot;特克斯和凯科斯群岛（英）&quot;</span>,<span class="string">&quot;开曼群岛（英）&quot;</span>,<span class="string">&quot;百慕大（英）&quot;</span>,<span class="string">&quot;哥伦比亚&quot;</span>,<span class="string">&quot;委内瑞拉&quot;</span>,<span class="string">&quot;圭亚那&quot;</span>,<span class="string">&quot;法属圭亚那&quot;</span>,<span class="string">&quot;苏里南&quot;</span>,<span class="string">&quot;厄瓜多尔&quot;</span>,<span class="string">&quot;秘鲁&quot;</span>,<span class="string">&quot;玻利维亚&quot;</span>,<span class="string">&quot;巴西&quot;</span>,<span class="string">&quot;智利&quot;</span>,<span class="string">&quot;阿根廷&quot;</span>,<span class="string">&quot;乌拉圭&quot;</span>,<span class="string">&quot;巴拉圭&quot;</span>&#125;</span><br><span class="line">    <span class="comment">-- 国家</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">local</span> cardu = &#123;<span class="string">&quot;你患有败血症\n&quot;</span>,<span class="string">&quot;你发育不良\n&quot;</span>,<span class="string">&quot;你得了新冠病毒\n&quot;</span>,<span class="string">&quot;你居然没有屁眼\n&quot;</span>,<span class="string">&quot;你喜欢和小狗抢食物\n&quot;</span>,<span class="string">&quot;你看得见空气中浮动的黑色粒子\n&quot;</span>..<span class="string">&quot;你有两个脑袋\n&quot;</span>,<span class="string">&quot;你喜欢咬脚趾甲\n&quot;</span>,<span class="string">&quot;你喜欢吃墙灰\n&quot;</span>,<span class="string">&quot;你患有糖尿病\n&quot;</span>,<span class="string">&quot;你的小心脏是露出来的\n&quot;</span>,<span class="string">&quot;你是畸形儿\n&quot;</span>,<span class="string">&quot;你看上去像个傻子\n&quot;</span>,<span class="string">&quot;你长得很丑\n&quot;</span>&#125;</span><br><span class="line">    <span class="comment">-- 病情描述，可增加</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">local</span> apper = &#123;<span class="string">&quot;你有着大大的眼睛\n&quot;</span>,<span class="string">&quot;你的睫毛很长很好看\n&quot;</span>,<span class="string">&quot;你总是很好奇的看着世界\n&quot;</span>,<span class="string">&quot;你五官端正\n&quot;</span>,<span class="string">&quot;你出生时没有大哭大闹\n&quot;</span>,<span class="string">&quot;你长得很可爱\n&quot;</span>,<span class="string">&quot;你看上去很乖巧\n&quot;</span>&#125;</span><br><span class="line">    <span class="comment">-- 健康描述，可增加</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">local</span> parent_good_tab = &#123;<span class="string">&quot;很穷，因此&quot;</span>,<span class="string">&quot;看你很可爱于是&quot;</span>&#125;</span><br><span class="line">    <span class="keyword">local</span> parent_bad_tab = &#123;<span class="string">&quot;认为你长得太丑于是&quot;</span>,<span class="string">&quot;对你议论纷纷，不过他们&quot;</span>,<span class="string">&quot;发现你大有问题便把你扔了，但还是&quot;</span>&#125;</span><br><span class="line">    <span class="comment">-- 父母行为</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">local</span> sexu = ranint(<span class="number">1</span>,<span class="number">100</span>)</span><br><span class="line">    <span class="comment">--男女比例与下文53对应</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">local</span> health = ranint(<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line">    <span class="comment">--健康与否</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(sexu&lt;=<span class="number">53</span>) <span class="keyword">then</span> sex = <span class="string">&quot;男孩子&quot;</span> <span class="keyword">elseif</span>(sexu==<span class="number">1</span>) <span class="keyword">then</span> sex = <span class="string">&quot;雌雄同体&quot;</span> <span class="keyword">else</span> sex = <span class="string">&quot;女孩子&quot;</span> <span class="keyword">end</span></span><br><span class="line">    <span class="comment">-- 没有采用drawDeck(0,msg.fromQQ,&quot;性别&quot;)的原因是这样可以自定义男女比例</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">local</span> country = countryu[ranint(<span class="number">1</span>,#countryu)] <span class="comment">-- 抽取国家</span></span><br><span class="line">    <span class="keyword">local</span> card = <span class="string">&quot;&quot;</span> <span class="comment">-- 抽选病情</span></span><br><span class="line">    <span class="keyword">local</span> state = ranint(<span class="number">1</span>,<span class="number">20</span>) <span class="comment">-- 投胎成功概率</span></span><br><span class="line">    <span class="keyword">local</span> weight = ranint(<span class="number">20</span>,<span class="number">35</span>)/<span class="number">10</span> <span class="comment">-- 新生儿体重，折合公斤</span></span><br><span class="line">    <span class="keyword">local</span> weightu = <span class="string">&quot;&quot;</span> <span class="comment">-- 初始化关于体重的评价</span></span><br><span class="line">    <span class="keyword">local</span> healthu = <span class="string">&quot;&quot;</span> <span class="comment">-- 初始化健康与否</span></span><br><span class="line">    <span class="keyword">local</span> apperu = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">local</span> parent_good = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">local</span> parent_bad = <span class="string">&quot;&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(state==<span class="number">5</span>) <span class="keyword">then</span> <span class="comment">-- 失败概率为1/20</span></span><br><span class="line">        dead_weight = ranint(<span class="number">9</span>,<span class="number">18</span>)/<span class="number">10</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&#123;nick&#125;投胎失败！\n你没能活到出生，祝你下次好运！\n你的父母收到了一具&quot;</span>..dead_weight..<span class="string">&quot;公斤的死尸x(没错就是你)&quot;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    <span class="comment">-- 投胎失败</span></span><br><span class="line">    </span><br><span class="line">        <span class="keyword">if</span>(weight==<span class="number">3.2</span>) <span class="keyword">then</span></span><br><span class="line">            weightu = <span class="string">&quot;是标准体重哦~&quot;</span> </span><br><span class="line">            <span class="comment">-- 对体重等于3.2kg的评价</span></span><br><span class="line">        <span class="keyword">elseif</span>(weight&lt;=<span class="number">2.4</span>) <span class="keyword">then</span></span><br><span class="line">            weightu = <span class="string">&quot;有一点点轻呢。&quot;</span></span><br><span class="line">            <span class="comment">-- 对体重小于2.4kg的评价</span></span><br><span class="line">        <span class="keyword">elseif</span>(weight&gt;<span class="number">3.2</span>) <span class="keyword">then</span></span><br><span class="line">            weightu = <span class="string">&quot;可能是父母的原因让你有点点小胖吧~&quot;</span></span><br><span class="line">            <span class="comment">-- 对体重大于3.2kg的评价</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(country==<span class="string">&quot;中国&quot;</span>) <span class="keyword">then</span> name = drawDeck(<span class="number">0</span>,msg.fromQQ,<span class="string">&quot;随机姓名_zh&quot;</span>) <span class="keyword">or</span> drawDeck(<span class="number">0</span>,msg.fromQQ,<span class="string">&quot;随机姓名_enzh&quot;</span>)</span><br><span class="line">        <span class="comment">-- 中国人当然要有中文名</span></span><br><span class="line">        <span class="keyword">elseif</span>(country==<span class="string">&quot;日本&quot;</span>) <span class="keyword">then</span> name = drawDeck(<span class="number">0</span>,msg.fromQQ,<span class="string">&quot;随机姓名_jp&quot;</span>)</span><br><span class="line">        <span class="comment">-- 霓虹進的名字</span></span><br><span class="line">        <span class="keyword">else</span> name = drawDeck(<span class="number">0</span>,msg.fromQQ,<span class="string">&quot;随机姓名_en&quot;</span>) <span class="keyword">or</span> drawDeck(<span class="number">0</span>,msg.fromQQ,<span class="string">&quot;随机姓名_enzh&quot;</span>)</span><br><span class="line">        <span class="comment">-- 剩下一律包含en</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(health==<span class="number">1</span>) <span class="keyword">then</span> </span><br><span class="line">            healthu,apperu = <span class="string">&quot;你很健康呢！\n&quot;</span>,<span class="string">&quot;&quot;</span></span><br><span class="line">            <span class="keyword">local</span> start = ranint(<span class="number">1</span>,#apper//<span class="number">2</span>)</span><br><span class="line">                <span class="keyword">for</span> i=start,ranint(start+<span class="number">1</span>,#apper) <span class="keyword">do</span></span><br><span class="line">                    apperu = apperu..apper[i]</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">        <span class="comment">-- 健康描述</span></span><br><span class="line">            parent_good = parent_good_tab[ranint(<span class="number">1</span>,#parent_good_tab)]</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        </span><br><span class="line">            healthu = <span class="string">&quot;你并不是一个健康的孩子:\n&quot;</span></span><br><span class="line">            </span><br><span class="line">                <span class="keyword">local</span> start = ranint(<span class="number">1</span>,#cardu//<span class="number">2</span>)</span><br><span class="line">                <span class="keyword">for</span> i=start,ranint(start+<span class="number">1</span>,#cardu) <span class="keyword">do</span></span><br><span class="line">                    card = card..cardu[i]</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">        <span class="comment">-- 病情描述</span></span><br><span class="line">                parent_bad = parent_bad_tab[ranint(<span class="number">1</span>,#parent_bad_tab)]</span><br><span class="line">                </span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&#123;nick&#125;投胎成功！\n你出生在&quot;</span>..country..<span class="string">&quot;，是&quot;</span>..sex..<span class="string">&quot;\n体重:&quot;</span>..weight..<span class="string">&quot;公斤 &quot;</span>..weightu..<span class="string">&quot;\n&quot;</span>..healthu..apperu..card..<span class="string">&quot;你的父母&quot;</span>.. parent_good..parent_bad..<span class="string">&quot;给你起名&quot;</span>..name</span><br><span class="line">        <span class="comment">-- 推起来输出</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">msg_order[<span class="string">&quot;reborn&quot;</span>]=<span class="string">&quot;born&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>技术</category>
        <category>Lua</category>
      </categories>
      <tags>
        <tag>Dice</tag>
      </tags>
  </entry>
  <entry>
    <title>unlimited-errors</title>
    <url>/2022/06/23/unlimited-errors/</url>
    <content><![CDATA[<details class="note "><summary><p>secondary</p>
</summary>
<p><strong>目前正在努力ing…</strong><br>利用 <code>error()</code>与 <code>pcall()</code>进行lua自定义报错</p>

</details>

<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote>
<p>使用《署名—非商业性使用—相同方式共享4.0 协议国际版》（CC BY-NC-SA 4.0）进行授权<span class="exturl" data-url="aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC9sZWdhbGNvZGUuemgtSGFucw==">https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode.zh-Hans<i class="fa fa-external-link-alt"></i></span><br>作者：简律纯<br>联系方式：qq:A2C29K9<br>更新日期：2022/5/28</p>
</blockquote>
<div class="note warning"><p><strong>WARNING ⚠️</strong><br>本帖是作为利用basicFunction自带的chat指令并结合修改chat指令内tryCatch部分的函数名来进行报错排查的示例帖。</p>
<blockquote>
<p>简言之让报错更好看一点，更容易理解一点。</p>
</blockquote>
</div>

<p>taboo前些日子（好久了）评论了<span class="exturl" data-url="aHR0cHM6Ly9mb3J1bS5rb2tvbmEudGVjaC9kLzExNDctemhpLWxpbmctamlhby1iZW4ta3VvLXpoYW4taGFuLXNodS1rdS1jaGkteHUtemhvdS1nZW5n">basicFunction<i class="fa fa-external-link-alt"></i></span> 的tryCatch函数，他说，</p>
<blockquote>
<p>骰娘自检可以安排到行程上了</p>
</blockquote>
<p>虽然和写tryCatch的初衷完全不一样，但是返校后在考试过程中突然发现这会是一个很不错的想法，于是单独写一篇帖子介绍它。</p>
<h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><h3 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1. 准备工作"></a>1. 准备工作</h3><p>首先我们在basicFunction的chat指令函数里的tryCatch部分写上这些代码，图片中的抓取报错函数示例是 <code>read_file()</code>函数，输入的参数是path，文件路径；返回值为文件内容。<br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-28/1653713607-498189-screenshot-2022-05-28-12-41-00-92.jpg"><br>这段代码的意思是如果报错信息里有nil这个字符串那返回自定义报错回复内容，否则返回read_file函数的返回内容。</p>
<h3 id="2-第一次测试"><a href="#2-第一次测试" class="headerlink" title="2.第一次测试"></a>2.第一次测试</h3><p>接着输入 <code>#basicFunction:tryCatch</code>，不带任何参数，它等效于 <code>#basicFunction:read_file</code>接着的确报错了，但是因为 <code>read_file()</code>函数的path参数为空，报错信息中有nil字符串，于是被替换成了预先写好的自定义报错回复内容。<br>接着我使用 <code>#basicFunction:read_file myDiary.txt</code> 查看了此文件，由于这个文件并不存在，于是krypton返回了read_file里写好的自定义回复。<br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-28/1653713518-807281-74092e56946e00a4.png"></p>
<h3 id="3-修改"><a href="#3-修改" class="headerlink" title="3.修改"></a>3.修改</h3><p>那么我们使用 <code>#basicFunction:write_file myDiary.txt [内容]</code>来创建这个文件并且写下点什么<del>烂人诅咒</del><br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-28/1653713557-476439-432aa460c37a0fe9.png"></p>
<h3 id="4-第二次测试"><a href="#4-第二次测试" class="headerlink" title="4.第二次测试"></a>4.第二次测试</h3><p>已经写好了此文件，我们再用 <code>#basicFunction:read_file myDiary.txt</code>查看一下，来确保有此文件并且写入了内容。<br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-28/1653713564-665112-3aa06a678e8679f3.png"></p>
<h3 id="5-第三次测试"><a href="#5-第三次测试" class="headerlink" title="5.第三次测试"></a>5.第三次测试</h3><p>一切顺利，这时候我们再输入正确的指令来试试抓取报错<br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-28/1653713588-190887-7b41211a21a97483.png"><br>因为这次输入了参数，即 <code>#basicFunction:tryCatch myDiary.txt</code>等效于 <code>#basicFunction:read_file myDiary.txt</code>，所以顺理成章的返回了里面的文本内容。</p>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>附上tryCatch函数的内容，如下:</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">-----------------------------------------------------[15]:</span></span><br><span class="line"><span class="comment">-- 功能：监听错误报告如有则反馈</span></span><br><span class="line"><span class="comment">-- 参数：函数名</span></span><br><span class="line"><span class="comment">-- 返回：错误信息</span></span><br><span class="line"><span class="comment">-- 说明：lua有两个函数可以捕获异常，分别是pcall(fun[,arg1,...])和xpcall(fun,errfun,[,arg1,...])，对比这两个函数,xpcall多了异常处理，这里仅采用pcall()做示例</span></span><br><span class="line">tryCatch = <span class="function"><span class="keyword">function</span><span class="params">(fun,arg1,arg2,arg3,arg4,arg5)</span></span></span><br><span class="line">  <span class="keyword">local</span> ret,errMessage=<span class="built_in">pcall</span>(fun,arg1,arg2,arg3,arg4,arg5);</span><br><span class="line">  wrong=ret <span class="keyword">and</span> <span class="string">&quot;false&quot;</span> <span class="keyword">or</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">  <span class="comment">--print(&quot;是否错误:\n&quot;..错误..&quot; \n\n出错信息:\n&quot; .. (errMessage or &quot;无&quot;));</span></span><br><span class="line">  <span class="keyword">if</span> wrong==<span class="string">&quot;true&quot;</span> <span class="keyword">then</span><span class="comment">--错误提示</span></span><br><span class="line">    <span class="keyword">local</span> ret,errMessage=<span class="built_in">pcall</span>(fun,arg1,arg2,arg3,arg4,arg5)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;\n错误详情：\n&quot;</span>..errMessage</span><br><span class="line">  <span class="keyword">else</span><span class="comment">--无错误正常执行</span></span><br><span class="line">    ret,back=<span class="built_in">pcall</span>(fun,arg1,arg2,arg3,arg4,arg5);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;没有错误发生，返回值如下:\n&quot;</span>..back</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>技术</category>
        <category>Lua</category>
      </categories>
      <tags>
        <tag>Dice</tag>
      </tags>
  </entry>
  <entry>
    <title>chat-ActObjectValue 2.0</title>
    <url>/2022/06/18/chat-ActObjectValue-2.0/</url>
    <content><![CDATA[<details class="note "><summary><p>secondary</p>
</summary>
<p><strong>NOTICE</strong><br>2.0 或许在明天就出了？</p>

</details>

<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote>
<p>说句实话在昨天2.0也只是个创建了一个空文件夹的存在，但是今天突然就写完了，并且写得彻彻底底的，总之能用便是了！</p>
</blockquote>
<p>只需要两步即可完成操作</p>
<h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><h3 id="添加回复命令"><a href="#添加回复命令" class="headerlink" title="添加回复命令"></a>添加回复命令</h3><p>在开始之前，你需要对自己家的骰娘输入以下命，其中，<code>require &quot;catchError&quot;</code>是必须的库，其他可根据需要添加。</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">.reply set</span><br><span class="line">Prefix=#</span><br><span class="line">Lua=</span><br><span class="line"><span class="built_in">require</span> <span class="string">&quot;catchError&quot;</span></span><br><span class="line"><span class="built_in">require</span> <span class="string">&quot;basicFunction&quot;</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">load</span>(<span class="string">&quot;return &quot;</span>..<span class="built_in">string</span>.<span class="built_in">gsub</span>(msg.fromMsg,<span class="number">2</span>))()</span><br></pre></td></tr></table></figure>

<p>好的，目前你已经完成了三分之二了！<br>接下来让我们完成最后一步操作。</p>
<h3 id="安装库"><a href="#安装库" class="headerlink" title="安装库"></a>安装库</h3><p>1.下载<span class="exturl" data-url="aHR0cHM6Ly9naXJodWIuY29tL0EyQzI5Szk=">catchError<i class="fa fa-external-link-alt"></i></span><br>2.将lua库丢进<code>Diceki\lua\</code>文件夹下<br>3.在聊天窗口使用<code>.system load</code>命令</p>
]]></content>
      <categories>
        <category>技术</category>
        <category>Lua</category>
      </categories>
      <tags>
        <tag>Dice</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年7月16日江淮Tho 徐州站</title>
    <url>/2022/06/17/2022%E5%B9%B47%E6%9C%8816%E6%97%A5%E6%B1%9F%E6%B7%AETho-%E5%BE%90%E5%B7%9E%E7%AB%99/</url>
    <content><![CDATA[<div class="note primary"><p><strong>PRIMARY</strong><br>第二次当越共，曲子在写啦在写啦…</p>
</div>

<h2 id="一些记录"><a href="#一些记录" class="headerlink" title="一些记录"></a>一些记录</h2><h3 id="灵感"><a href="#灵感" class="headerlink" title="灵感"></a>灵感</h3><p>其实也没有什么灵感，莹莹和我说按照自己风格来，那么我就尽量写的悲伤一点吧。</p>
]]></content>
      <categories>
        <category>音乐</category>
        <category>Tho</category>
      </categories>
      <tags>
        <tag>徐州站</tag>
      </tags>
  </entry>
  <entry>
    <title>chat-ActObjectValue:help</title>
    <url>/2022/06/16/chat-AOV-help/</url>
    <content><![CDATA[<div class="note warning"><p><strong>WARNING</strong><br>这是关于<a href="https://a2c29k9.github.io/2022/06/11/chat-ActObjectValue/"><strong>chat-ActObjectValue</strong></a>的隐藏更新页面，你不应该在这里进行任何操作！</p>
</div>

<h2 id="1-0数组写法"><a href="#1-0数组写法" class="headerlink" title="1.0数组写法"></a>1.0数组写法</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*FINAL VERSION</span><br><span class="line">#&lt;get|set&gt;&lt;User|Group&gt;&lt;Today|Conf&gt; &lt;Object&gt; &lt;Ng&gt; [Value]</span><br><span class="line">*例1，获取2753364619用户的jrrp：</span><br><span class="line">#getUserToday 2753364619 jrrp</span><br><span class="line">*例2，特别地，清空：</span><br><span class="line">#setUserConf 2753364619 好感度 nil</span><br></pre></td></tr></table></figure>

<h2 id="2-0函数写法"><a href="#2-0函数写法" class="headerlink" title="2.0函数写法"></a>2.0函数写法</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*Ver:2.0</span><br><span class="line">#&lt;get|set&gt;&lt;User|Group&gt;&lt;Today|Conf&gt;(&lt;Object&gt;,&lt;Ng&gt;[,Value])</span><br><span class="line">*例1，获取2753364619用户的jrrp：</span><br><span class="line">#getUserToday(&quot;2753364619&quot;,&quot;jrrp&quot;,0)</span><br><span class="line">*例2，清空操作：</span><br><span class="line">#setUserConf(&quot;2753364619&quot;,&quot;好感度&quot;,nil)</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>chat-ActObjectValue 1.0</title>
    <url>/2022/06/11/chat-ActObjectValue-1.0/</url>
    <content><![CDATA[<blockquote>
<p>使用《署名—非商业性使用—相同方式共享 4.0 协议国际版》（CC BY-NC-SA 4.0）进行授权<br><span class="exturl" data-url="aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC9sZWdhbGNvZGUuemgtSGFucw==">https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode.zh-Hans<i class="fa fa-external-link-alt"></i></span><br>许可协议：CC BY-NC-SA 4.0<br>声明：本脚本适合<strong>有一定脚本编写基础</strong>的master使用，所造成的一切损失作者概不负责。</p>
</blockquote>
<div class="note warning"><p><strong>WARNING</strong><br>1.0已不再更新，或许你可以期待一下<a href="https://a2c29k9.github.io/2022/06/18/chat-ActObjectValue-2.0"><strong>2.0</strong></a>？</p>
</div>

<h3 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h3><ul>
<li>默认设置参数输入格式：#setUserConf <user_qq> <Conf_name> <value><br>清空和获取同理。</li>
<li>注意：必须写UserConf或者UserToday，否则不输出。</li>
<li>作者：简律纯</li>
<li>联系方式：qq:A2C29K9</li>
<li>版本：1.0(FINAL)</li>
<li>更新日期：2022/6/16</li>
</ul>
<blockquote>
<p>关键词：<code>#set</code> <code>#get</code> <code>#help log</code> <code>#help chataov</code></p>
</blockquote>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0EyQzI5SzkvQTJDMjlLOS5naXRodWIuaW8vcmVsZWFzZXMvdGFnL2NoYXQtQWN0T2JqZWN0VmFsdWU=">chat-ActObjectValue.zip<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>在测试时总会遇到要重置或获取或设置某个用户配置的情况，但苦于没有这方面的指令，所以写了一个，目前可以在聊天窗口中设置用户全局配置或当日配置。<br>当然，你也可以使用更多花里胡哨的东西。</p>
<p><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-04-22/1650594557-426212-4acb8e97ccd6fe5a.png"><br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-01/1651378789-731493-e5371e816c74ee6.png"></p>
<blockquote>
<p>清 空 可 使 用 set nil</p>
</blockquote>
<h2 id="进阶用法"><a href="#进阶用法" class="headerlink" title="进阶用法"></a>进阶用法</h2><ul>
<li>Chat-AOV；</li>
</ul>
<p>1.赋予所有人权限：<br><code>#setUserConf &lt;DiceQQ&gt; &lt;chat_perm&gt; 1</code><br>2.赋予单个用户权限：<br><code>.user trust &lt;用户&gt; 4</code></p>
<ul>
<li>Dice；</li>
</ul>
<p>1.查看|修改 jrrp：<br><code>#get|setUserToday &lt;用户&gt; &lt;jrrp&gt;</code><br>2.查看|修改 用户信任trust：<br><code>#get|setUserConf &lt;用户&gt; &lt;trust&gt;</code><br>3.查看|修改 群配置rc房规：<br><code>#get|setGroupConf &lt;群号&gt; &lt;rc房规&gt; &lt;参数&gt;</code><br>4.清空/重置 配置：<br><code>#setUserConf 2753364619 好感度 nil</code></p>
<h2 id="TODO-list"><a href="#TODO-list" class="headerlink" title="TODO list"></a>TODO list</h2><ul>
<li>各类报错回复</li>
<li>设置数据类型</li>
</ul>
<h2 id="关于5-8更新内容的示例"><a href="#关于5-8更新内容的示例" class="headerlink" title="关于5.8更新内容的示例"></a>关于5.8更新内容的示例</h2><p>5.8重点更新了记录的查看方式，新增了 <code>start_crrt</code>配置。</p>
<p>使用命令 <code>#setUserConf &lt;骰娘QQ&gt; start_crrt &lt;值&gt; </code>进行更改，其更改将会改变 <code>#help log</code>的返回内容：<br><code>start_crrt</code> 默认为0，这时查看日志会显示最新的一条。<br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-07/1651953020-849510-29e7e2d45c34a60b.png"><br>当 <code>start_crrt</code>修改为1至5范围内的数字，会显示最近的2至6条记录。<br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-07/1651953344-615701-574c97559bc3ae34.png"><br>设置范围6至30时会显示对应数量的记录，但不是在群里，bot会私发给指令发出者。<br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-07/1651953608-811583-315f836bf1e21646.png"><br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-07/1651953634-841540-1a024626f1fb6728.png"></p>
<h2 id="如何安装使用？"><a href="#如何安装使用？" class="headerlink" title="如何安装使用？"></a>如何安装使用？</h2><p>1.解压安装包<br>2.将安装包内文件与文件夹全部放入plugin文件夹<br>3.使用命令<code>.system load</code></p>
]]></content>
      <categories>
        <category>技术</category>
        <category>Lua</category>
      </categories>
      <tags>
        <tag>Dice</tag>
      </tags>
  </entry>
  <entry>
    <title>basicFunction</title>
    <url>/2022/06/11/basicFunction/</url>
    <content><![CDATA[<blockquote>
<p>使用《署名—非商业性使用—相同方式共享 4.0 协议国际版》（CC BY-NC-SA 4.0）进行授权<br><span class="exturl" data-url="aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC9sZWdhbGNvZGUuemgtSGFucw==">https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode.zh-Hans<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<blockquote>
<p>作者：简律纯<br>联系方式：qq:A2C29K9<br>更新日期：2022/5/15<br>关键词： <code>#basicFunction:</code></p>
</blockquote>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><em>basicFunction</em> 的定位非常清晰，那就是作为脚本制作者的配置扩展，通过在lua脚本中 <code>require &quot;basicFunction&quot;</code>使用其中的函数。</p>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0EyQzI5SzkvQTJDMjlLOS5naXRodWIuaW8vcmVsZWFzZXMvdGFnL2Jhc2ljRnVuY3Rpb24=">basicFunction-alpha(2).zip<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p> 衷心希望大家指正其中的错误和不足，促使 <em>basicFunction</em> 不断进步完善</p>
<h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h2><h3 id="搭载"><a href="#搭载" class="headerlink" title="搭载"></a>搭载</h3><p><em>——开始之前的一些必要工作。</em><br>1.下载 _basicFunction_并解压得到 _basicFunction.lua_文件<br>2.将解压得到的 _basicFunction.lua_文件放入 DiceQQ\plugin\文件夹<br>3.在确保前两步万无一失的情况下回到聊天窗口使用 <code>.system load</code>命令重载 _basicFunction_脚本</p>
<blockquote>
<p>看到这里，你已经成功安装完成了！接下来让我们快速开始吧！</p>
</blockquote>
<h3 id="在聊天窗口使用"><a href="#在聊天窗口使用" class="headerlink" title="在聊天窗口使用"></a>在聊天窗口使用</h3><p> <em>为了方便测试函数，简律纯特别的写了一个聊天窗口指令，用于测试这些函数</em></p>
<h4 id="gt-xxx-basicFunction-help"><a href="#gt-xxx-basicFunction-help" class="headerlink" title="&gt; [xxx]. #basicFunction:help"></a>&gt; [xxx]. <code>#basicFunction:help</code></h4><p>这是一条用于获取帮助与更新的指令，不建议在群聊中使用。<br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652528156-326881-4ce86491377f0bf4.png"></p>
<h4 id="gt-1-basicFunction-table-draw"><a href="#gt-1-basicFunction-table-draw" class="headerlink" title="&gt; [1] #basicFunction:table_draw"></a>&gt; [1] <code>#basicFunction:table_draw</code></h4><ul>
<li>功能：随机抽取一条数组内元素</li>
<li>参数：数组</li>
<li>返回：字符串</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652528703-218364-341fe90b2615ec.png"></li>
</ul>
<h4 id="gt-2-basicFunction-num-or-string"><a href="#gt-2-basicFunction-num-or-string" class="headerlink" title="&gt;[2] #basicFunction:num_or_string"></a>&gt;[2] <code>#basicFunction:num_or_string</code></h4><ul>
<li>功能：判断是否为num类型，若是则自动转为num类型，否则为string</li>
<li>参数：x:待转换字符串</li>
<li>返回：number类型数据或string类型数据</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652529015-469470-1a7836efde35a6a8.png"></li>
</ul>
<h4 id="gt-3-basicFunction-getAtQQ"><a href="#gt-3-basicFunction-getAtQQ" class="headerlink" title="&gt;[3] #basicFunction:getAtQQ"></a>&gt;[3] <code>#basicFunction:getAtQQ</code></h4><ul>
<li>功能：取at对象的qq</li>
<li>参数：字符串（尤指CQ码）</li>
<li>返回：文本形式的qq号</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652531356-998104-7ef52e1b54b3e7ce.png"></li>
</ul>
<h4 id="gt-4-basicFunction-write-file"><a href="#gt-4-basicFunction-write-file" class="headerlink" title="&gt;[4] #basicFunction:write_file"></a>&gt;[4] <code>#basicFunction:write_file</code></h4><ul>
<li>功能：追加写文件，没有则创建</li>
<li>参数：文件路径，文件内容</li>
<li>返回：提示文本</li>
<li>说明：文件根目录DiceQQ//，我在生成文件时写了点注释，就比如会在当文件读写时在第一行特别注明文件名。</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652532311-215587-35aa6d41a8469dd9.png"><br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652532306-79898-312b586e9182eb27.png"></li>
</ul>
<h4 id="gt-5-basicFunction-read-file"><a href="#gt-5-basicFunction-read-file" class="headerlink" title="&gt;[5] #basicFunction:read_file"></a>&gt;[5] <code>#basicFunction:read_file</code></h4><ul>
<li>功能：读取文件全部内容</li>
<li>参数：文件路径</li>
<li>返回：有内容则返回字符串否则返回错误提示</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652532848-201463-3b032d5b2cba1d44.png"></li>
</ul>
<h4 id="gt-6-basicFunction-filter-spec-chars"><a href="#gt-6-basicFunction-filter-spec-chars" class="headerlink" title="&gt;[6] #basicFunction:filter_spec_chars"></a>&gt;[6] <code>#basicFunction:filter_spec_chars</code></h4><ul>
<li>功能：捕获并提取所有中文，合并后输出</li>
<li>参数：待捕获中文的字符串</li>
<li>返回：所有中文合并后的字符串</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652533253-492295-2c56f7627a54c1e4.png"></li>
</ul>
<h4 id="gt-7-basicFunction-getFileName"><a href="#gt-7-basicFunction-getFileName" class="headerlink" title="&gt;[7] #basicFunction:getFileName"></a>&gt;[7] <code>#basicFunction:getFileName</code></h4><ul>
<li>功能：取文件名，有扩展名</li>
<li>参数：文件路径</li>
<li>返回：字符串</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652535078-993169-6fc947dd5fe881d3.png"></li>
</ul>
<h4 id="gt-8-basicFunction-getFileName2"><a href="#gt-8-basicFunction-getFileName2" class="headerlink" title="&gt;[8] #basicFunction:getFileName2"></a>&gt;[8] <code>#basicFunction:getFileName2</code></h4><ul>
<li>功能：取文件名，无扩展名</li>
<li>参数：文件路径</li>
<li>返回：字符串</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652535090-491912-475b2a113fb5d0a2.png"></li>
</ul>
<h4 id="gt-9-basicFunction-utfStrLen"><a href="#gt-9-basicFunction-utfStrLen" class="headerlink" title="&gt;[9] #basicFunction:utfStrLen"></a>&gt;[9] <code>#basicFunction:utfStrLen</code></h4><ul>
<li>功能：返回文本中的字符总数目</li>
<li>参数：字符串</li>
<li>返回：数字</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652536608-701822-3e9f7c7fe9aa2e6d.png"></li>
</ul>
<h4 id="gt-10-basicFunction-MD5"><a href="#gt-10-basicFunction-MD5" class="headerlink" title="&gt;[10] #basicFunction:MD5"></a>&gt;[10] <code>#basicFunction:MD5</code></h4><ul>
<li>功能：转字符串为MD5</li>
<li>参数：待转换字符串</li>
<li>返回：MD5</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652537139-681577-35d6b69778ddd24a.png"><br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652537160-810141-screenshot-2022-05-14-22-00-48-36.jpg"><br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652537170-642829-screenshot-2022-05-14-22-01-10-15.jpg"></li>
</ul>
<h4 id="gt-11-basicFunction-table-exists"><a href="#gt-11-basicFunction-table-exists" class="headerlink" title="&gt;[11] #basicFunction:table_exists"></a>&gt;[11] <code>#basicFunction:table_exists</code></h4><ul>
<li>功能：判断数组中是否存在指定字符串</li>
<li>参数：数组，查找的字符串</li>
<li>返回：有则为true，没有则什么都不返回</li>
<li>示例：<br>先看一下内部代码，设定了一个tables<br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652541688-375470-screenshot-2022-05-14-23-19-42-70.jpg"><br>接着输入看看效果<br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652541709-390654-644c1b552d1efffa.png"></li>
</ul>
<h4 id="gt-12-basicFunction-encodeBase64"><a href="#gt-12-basicFunction-encodeBase64" class="headerlink" title="&gt;[12] #basicFunction:encodeBase64"></a>&gt;[12] <code>#basicFunction:encodeBase64</code></h4><ul>
<li>功能：返回字符串base64加密后的文本</li>
<li>参数：待加密字符串</li>
<li>返回：base64加密后文本</li>
<li>说明：因为不支持 <code>math.pow</code> 所以把写好的解密删了</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652542191-759474-40c8bacd80597d41.png"><br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652537170-642829-screenshot-2022-05-14-22-01-10-15.jpg"><br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652537160-810141-screenshot-2022-05-14-22-00-48-36.jpg"></li>
</ul>
<h4 id="gt-13-basicFunction-string-split"><a href="#gt-13-basicFunction-string-split" class="headerlink" title="&gt;[13] #basicFunction:string.split"></a>&gt;[13] <code>#basicFunction:string.split</code></h4><ul>
<li>功能：分割字符串</li>
<li>参数：待分割字符串，分隔符</li>
<li>返回：字符串表</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652551923-200447-7c2b18bc815913ea.png"></li>
</ul>
<h4 id="gt-14-basicFunction-string-count"><a href="#gt-14-basicFunction-string-count" class="headerlink" title="&gt;[14] #basicFunction:string.count"></a>&gt;[14] <code>#basicFunction:string.count</code></h4><ul>
<li>功能：统计字符串中字符的个数</li>
<li>参数：待统计的字符串</li>
<li>返回：总字符个数、英文字符数、中文字符数</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652544106-120444-2bc227485b07f827.png"></li>
</ul>
<h4 id="gt-15-basicFunction-string-width"><a href="#gt-15-basicFunction-string-width" class="headerlink" title="&gt;[15] #basicFunction:string.width"></a>&gt;[15] <code>#basicFunction:string.width</code></h4><ul>
<li>功能：计算字符串的宽度</li>
<li>参数：字符串</li>
<li>返回：数字</li>
<li>说明：这里一个中文等于两个英文，后面的情况同理，此函数和 _utfStrLen_原理类似</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652554310-333254-20bf853ca8430fd0.png"></li>
</ul>
<h4 id="gt-16-basicFunction-string-tocenter"><a href="#gt-16-basicFunction-string-tocenter" class="headerlink" title="&gt;[16] #basicFunction:string.tocenter"></a>&gt;[16] <code>#basicFunction:string.tocenter</code></h4><ul>
<li>功能: 把字符串扩展为长度为len,居中对齐, 其他地方以filledChar补齐</li>
<li>参数: 需要被扩展的字符、数字、字符串表，被扩展成的长度，填充字符（可以为空）</li>
<li>返回：字符串</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652553472-701179-49139d6f69a2cd50.png"></li>
</ul>
<h4 id="gt-3-14-basicFunction-string-toleft"><a href="#gt-3-14-basicFunction-string-toleft" class="headerlink" title="&gt;[3+14] #basicFunction:string.toleft"></a>&gt;[3+14] <code>#basicFunction:string.toleft</code></h4><ul>
<li>功能: 把字符串扩展为长度为len,左对齐, 其他地方用filledChar补齐</li>
<li>参数：需要被扩展的字符、数字、字符串表，被扩展成的长度，填充字符（可以为空）</li>
<li>返回：字符串</li>
<li>说明：中文相当于2个英文</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652553319-940907-3d59e78bd1371f52.png"></li>
</ul>
<h4 id="gt-18-basicFunction-string-toright"><a href="#gt-18-basicFunction-string-toright" class="headerlink" title="&gt;[18] #basicFunction:string.toright"></a>&gt;[18] <code>#basicFunction:string.toright</code></h4><ul>
<li>功能: 把字符串扩展为长度为len,右对齐, 其他地方用filledChar补齐</li>
<li>参数：需要被扩展的字符、数字、字符串表，被扩展成的长度，填充字符（可以为空）</li>
<li>返回：字符串</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652553542-607083-2e26d59c330482.png"></li>
</ul>
<h4 id="gt-19-basicFunction-string-ltrim"><a href="#gt-19-basicFunction-string-ltrim" class="headerlink" title="&gt;[19] #basicFunction:string.ltrim"></a>&gt;[19] <code>#basicFunction:string.ltrim</code></h4><ul>
<li>功能：对齐，去除通配符</li>
<li>参数：文本</li>
<li>返回：文本</li>
<li>示例：暂无</li>
</ul>
<h4 id="gt-20-basicFunction-string-rtrim"><a href="#gt-20-basicFunction-string-rtrim" class="headerlink" title="&gt;[20] #basicFunction:string.rtrim"></a>&gt;[20] <code>#basicFunction:string.rtrim</code></h4><ul>
<li>功能：对齐，去除通配符</li>
<li>参数：文本</li>
<li>返回：文本</li>
<li>示例：暂无</li>
</ul>
<h4 id="gt-21-basicFunction-string-trim"><a href="#gt-21-basicFunction-string-trim" class="headerlink" title="&gt;[21] #basicFunction:string.trim"></a>&gt;[21] <code>#basicFunction:string.trim</code></h4><ul>
<li>功能：对齐，去除通配符</li>
<li>参数：文本</li>
<li>返回：文本</li>
<li>示例：暂无</li>
</ul>
<h4 id="gt-22-basicFunction-ranStr"><a href="#gt-22-basicFunction-ranStr" class="headerlink" title="&gt;[22] #basicFunction:ranStr"></a>&gt;[22] <code>#basicFunction:ranStr</code></h4><ul>
<li>功能：随机输出字符串</li>
<li>参数：数字（输出个数）</li>
<li>返回：字符串</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652554731-126125-39ebb8a73aeede9.png"></li>
</ul>
<h4 id="gt-23-basicFunction-tryCatch"><a href="#gt-23-basicFunction-tryCatch" class="headerlink" title="&gt;[23] #basicFunction:tryCatch"></a>&gt;[23] <code>#basicFunction:tryCatch</code></h4><ul>
<li>功能：监听错误报告如有则反馈</li>
<li>参数：函数名</li>
<li>返回：错误信息</li>
<li>说明：lua有两个函数可以捕获异常，分别是pcall(fun[,arg1,…])和xpcall(fun,errfun,[,arg1,…])，对比这两个函数,xpcall多了异常处理，这里仅采用pcall()做示例</li>
<li>示例：在没有改代码的情况下如果直接输入参数，将把输入的文本当做函数名找错<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652555008-125097-45b942fe53a293c.png"><br>我们看代码部分，我已经修改好了参数，好，现在它将会调用自己了<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652555367-976137-img20220515030858.jpg"><br>让我们猜一下会输出什么？<br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652555401-577693-5f1c2329f7089d24.png"><br>是啊，没有错误，因为是奔着找错的目的执行 _找错_函数，当它能完整运行时自然是没有错误，简言之：</li>
</ul>
<p>错误的错误就是没有错误（好耶！我又说了一句凡人名言）</p>
<p>那么，换成别的函数还会如此吗？<br>这里以 <em>bubbleSort</em> 函数为例<em>因为很快就要讲到ta了</em><br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652555938-996780-screenshot-2022-05-15-03-18-06-41.jpg"><br>很好，果然不负众望的报错并让krypton拦截了<br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652556076-36222-1f5d440399af905f.png"><br>那么输入参数会发生什么？<br>…to be continue</p>
<h4 id="gt-24-basicFunction-bubbleSort"><a href="#gt-24-basicFunction-bubbleSort" class="headerlink" title="&gt;[24] #basicFunction:bubbleSort"></a>&gt;[24] <code>#basicFunction:bubbleSort</code></h4><ul>
<li>功能：冒泡（升序）排序</li>
<li>参数：tab:目标表</li>
<li>返回：排好序的文本</li>
<li>示例：<br><code>tab = &#123;3, 4, 61, 7, 5, 8, 56, 14, 11, 10&#125; return bubbleSort(tab)</code><br><img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652556743-633251-36c62b11467b00a2.png"></li>
</ul>
<h4 id="gt-25-basicFunction-load"><a href="#gt-25-basicFunction-load" class="headerlink" title="&gt;[25] #basicFunction:load"></a>&gt;[25] <code>#basicFunction:load</code></h4><ul>
<li>功能：安全执行lua语句</li>
<li>说明：暂时弃用</li>
<li>示例：暂无</li>
</ul>
<h4 id="gt-26-basicFunction-sortTable-delRepeat"><a href="#gt-26-basicFunction-sortTable-delRepeat" class="headerlink" title="&gt;[26] #basicFunction:sortTable_delRepeat"></a>&gt;[26] <code>#basicFunction:sortTable_delRepeat</code></h4><ul>
<li>功能：将重复出现的数字全部删除(后续数字往前移)</li>
<li>参数：tab:数组</li>
<li>返回：去完重的字符串（多半还是降序的）</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652557118-960232-5fe3b9332f1eabbb.png"></li>
</ul>
<h4 id="gt-27-1-basicFunction-Round"><a href="#gt-27-1-basicFunction-Round" class="headerlink" title="&gt;[27-1] #basicFunction:Round"></a>&gt;[27-1] <code>#basicFunction:Round</code></h4><ul>
<li>功能：四舍五入(常用)</li>
<li>参数：num:待计算数字</li>
<li>返回：计算结果</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652557301-733453-57f1940480749985.png"></li>
</ul>
<h4 id="gt-27-2-basicFunction-Round2"><a href="#gt-27-2-basicFunction-Round2" class="headerlink" title="&gt;[27-2] #basicFunction:Round2"></a>&gt;[27-2] <code>#basicFunction:Round2</code></h4><ul>
<li>功能：四舍五入(奇进偶舍)</li>
<li>参数：num:待计算数字 i:保留几位小数</li>
<li>返回：计算结果</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652557524-430485-37f48a1ee6238e19.png"></li>
</ul>
<h4 id="gt-28-basicFunction-Multiply"><a href="#gt-28-basicFunction-Multiply" class="headerlink" title="&gt;[28] #basicFunction:Multiply"></a>&gt;[28] <code>#basicFunction:Multiply</code></h4><ul>
<li>功能：相乘，同时判断了是否有null值</li>
<li>参数：都看得懂吧//两个数字…</li>
<li>返回：计算结果</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652557646-168592-1b35afe337a9742d.png"></li>
</ul>
<h4 id="gt-29-basicFunction-Divide"><a href="#gt-29-basicFunction-Divide" class="headerlink" title="&gt;[29] #basicFunction:Divide"></a>&gt;[29] <code>#basicFunction:Divide</code></h4><ul>
<li>功能：相除</li>
<li>参数：denominator:除数 numerator:被除数</li>
<li>返回：计算结果</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652557740-451-6ccd7840db133641.png"></li>
</ul>
<h4 id="gt-30-1-basicFunction-Ceil"><a href="#gt-30-1-basicFunction-Ceil" class="headerlink" title="&gt;[30-1] #basicFunction:Ceil"></a>&gt;[30-1] <code>#basicFunction:Ceil</code></h4><ul>
<li>功能：取整</li>
<li>参数：数字</li>
<li>返回：结果</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652557790-14329-4f2b567f4dcf84d9.png"></li>
</ul>
<h4 id="gt-30-2-basicFunction-Ceil2"><a href="#gt-30-2-basicFunction-Ceil2" class="headerlink" title="&gt;[30-2] #basicFunction:Ceil2"></a>&gt;[30-2] <code>#basicFunction:Ceil2</code></h4><ul>
<li>参数：数字</li>
<li>返回：结果</li>
<li>说明：第二种取整思路</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652557836-897466-682bdcbbe4e50ec4.png"></li>
</ul>
<h4 id="gt-31-basicFunction-unicode2Chinese"><a href="#gt-31-basicFunction-unicode2Chinese" class="headerlink" title="&gt;[31] #basicFunction:unicode2Chinese"></a>&gt;[31] <code>#basicFunction:unicode2Chinese</code></h4><ul>
<li>功能：利用JSON解析器把Unicode转中文汉字</li>
<li>参数：uni:完整的json格式Unicode码</li>
<li>返回：汉字字符串</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652558928-339373-407db05212e7f332.png"></li>
</ul>
<h4 id="gt-32-basicFunction-stamp2Time"><a href="#gt-32-basicFunction-stamp2Time" class="headerlink" title="&gt;[32] #basicFunction:stamp2Time"></a>&gt;[32] <code>#basicFunction:stamp2Time</code></h4><ul>
<li>功能：时间戳转时间</li>
<li>参数：Stamp:时间戳</li>
<li>返回：字符串</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652559106-59803-2aba66b7a6713455.png"></li>
</ul>
<h4 id="gt-33-basicFunction-Match"><a href="#gt-33-basicFunction-Match" class="headerlink" title="&gt;[33] #basicFunction:Match"></a>&gt;[33] <code>#basicFunction:Match</code></h4><ul>
<li>功能：匹配截取字符串</li>
<li>参数：msg:待匹配的字符串 num:截取位置</li>
<li>说明：汉字长度为2，特别注意</li>
<li>示例：<img src="https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652559448-296157-4861fe8be91b307b.png"></li>
</ul>
<h4 id="gt-34-1-basicFunction-fitemSort"><a href="#gt-34-1-basicFunction-fitemSort" class="headerlink" title="&gt;[34-1] #basicFunction:fitemSort"></a>&gt;[34-1] <code>#basicFunction:fitemSort</code></h4><ul>
<li>功能：取数据存入数组</li>
<li>参数：字符串</li>
<li>返回：数组</li>
<li>示例：暂无</li>
</ul>
<h4 id="gt-34-2-basicFunction-ffitemSort"><a href="#gt-34-2-basicFunction-ffitemSort" class="headerlink" title="&gt;[34-2] #basicFunction:ffitemSort"></a>&gt;[34-2] <code>#basicFunction:ffitemSort</code></h4><ul>
<li>功能：取数据存入数组</li>
<li>参数：字符串</li>
<li>返回：数组</li>
<li>示例：暂无</li>
</ul>
<h4 id="gt-FUNCTION-INDEX-amp-LIST"><a href="#gt-FUNCTION-INDEX-amp-LIST" class="headerlink" title="&gt; FUNCTION INDEX&amp;LIST:"></a>&gt; FUNCTION INDEX&amp;LIST:</h4><p>[1]table_draw(tab) LINE:48<br>[2]num_or_string(x) LINE:55<br>[3]getAtQQ(str) LINE:67<br>[4]write_file(path, text) LINE:79<br>[5]read_file(path) LINE:88<br>[6]filter_spec_chars(s) LINE:103<br>[7]getFileName(path) LINE:133<br>[8]getFileName2(path) LINE:140<br>[9]utfstrlen(str) LINE:147<br>[10]MD5(str) LINE:168<br>[11]table_exists(tables,value) LINE:395<br>[12]encodeBase64(source_str) LINE:408<br>[13]string.split(str, delimiter) LINE:443<br>[14]string.count(str) LINE:460<br>[15]string.width(str) LINE:470<br>[16]string.tocenter(str, len, filledChar) LINE:479<br>[17]string.toleft(str, len, filledChar) LINE:511<br>[18]string.toright(str, len, filledChar) LINE:540<br>[19]string.ltrim(str) LINE:573<br>[20]string.rtrim(str) LINE:577<br>[21]string.trim(str) LINE:581<br>[22]ranStr(num) LINE:588<br>[23]tryCatch(fun) LINE:604<br>[24]bubbleSort(tab) LINE:620<br>[25]弃用 LINE:646<br>[26]sortTable_delRepeat(tab) LINE:653<br>[27-1]Round(num, i) LINE:672<br>[27-2]Round2(num, i) LINE:681<br>[28]Multiply(num1,num2) LINE:702<br>[29]Divide(denominator,numerator) LINE:718<br>[30-1]Ceil(num) LINE:734<br>[30-2]Ceil2(num) LINE:753<br>[31]unicode2Chinese(uni) LINE:765<br>[32]stamp2Time(Stamp) LINE:782<br>[33]Match(msg,num) LINE:789<br>[34-1]fitemSort(rest) LINE:798<br>[34-2]ffitemSort(rest) LINE:809</p>
<h3 id="在lua编写过程中使用"><a href="#在lua编写过程中使用" class="headerlink" title="在lua编写过程中使用"></a>在lua编写过程中使用</h3><p>由于时间来不及，在lua中使用的教程与进阶用法将会在日后补齐。<br><strong>to be…</strong></p>
<h3 id="一些实例"><a href="#一些实例" class="headerlink" title="一些实例"></a>一些实例</h3><p><strong>getAtQQ</strong>的使用：<span class="exturl" data-url="aHR0cHM6Ly9mb3J1bS5rb2tvbmEudGVjaC9kLzExNDY=">【指令脚本】爬/丢/赞<i class="fa fa-external-link-alt"></i></span><br><strong>tryCatch</strong>的使用：<span class="exturl" data-url="aHR0cHM6Ly9mb3J1bS5rb2tvbmEudGVjaC9kLzExNjg=">【指令脚本/思想】巴拉巴拉骰娘自检和偷懒自定义报错什么的<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>技术</category>
        <category>Lua</category>
      </categories>
      <tags>
        <tag>Dice</tag>
      </tags>
  </entry>
</search>
