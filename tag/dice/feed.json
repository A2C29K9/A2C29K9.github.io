{
    "version": "https://jsonfeed.org/version/1",
    "title": "Cypress - 小柏树 • All posts by \"dice\" tag",
    "description": "今天浇水了吗？",
    "home_page_url": "https://cypress.github.io",
    "items": [
        {
            "id": "https://cypress.github.io/2022/10/03/wiki-of-Midido/",
            "url": "https://cypress.github.io/2022/10/03/wiki-of-Midido/",
            "title": "wiki of Midido",
            "date_published": "2022-10-03T15:07:27.000Z",
            "content_html": "<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"Oh, this is an invalid password. Check and try again, please.\" data-whm=\"OOPS, these decrypted content may changed, but you can still have a look.\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"1982b4c7cc1b43b2897282b5766debb4d0e916a379d9c6736ebc69f692b00871\"></script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">输入密码，查看文章</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">",
            "tags": [
                "Dice"
            ]
        },
        {
            "id": "https://cypress.github.io/2022/08/17/Colorful-Error-Repo/",
            "url": "https://cypress.github.io/2022/08/17/Colorful-Error-Repo/",
            "title": "Colorful-Error-Repo",
            "date_published": "2022-08-16T16:00:00.000Z",
            "content_html": "<details class=\"note \"><summary><p>secondary</p>\n</summary>\n<p><strong>Colorful-Error-Repo</strong></p>\n<blockquote>\n<p>简单的自定义报错回复模板.</p>\n</blockquote>\n\n</details>\n\n\n<h1 id=\"❡Colorful-Error-Repo-来点不一样的报错吧\"><a href=\"#❡Colorful-Error-Repo-来点不一样的报错吧\" class=\"headerlink\" title=\"❡Colorful-Error-Repo:来点不一样的报错吧\"></a><a href=\"\">❡</a>Colorful-Error-Repo:来点不一样的报错吧</h1><blockquote>\n<p>使用《署名—禁止演绎 4.0 协议国际版》（CC BY-ND 4.0）进行授权。<br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5kLzQuMC9sZWdhbGNvZGUuemgtSGFucw==\">https://creativecommons.org/licenses/by-nd/4.0/legalcode.zh-Hans<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<blockquote>\n<p>续之前的弦：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9mb3J1bS5rb2tvbmEudGVjaC9kLzExNjgtemhpLWxpbmctamlhby1iZW4tc2kteGlhbmctdG91LW5pYW5nLXppLWppYW4tZ2VuZy1sYW4tZGUtcGFuLWR1YW4tYmFvLWN1by1iaW5nLXppLWRpbmcteWktaHVpLWZ1\">骰娘自检/判断报错并自定义回复<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<hr>\n<h2 id=\"一、基本信息\"><a href=\"#一、基本信息\" class=\"headerlink\" title=\"一、基本信息\"></a>一、基本信息</h2><ul>\n<li>作者： 简律纯</li>\n<li>联系方式：qq:a2c29k9</li>\n<li>版本：v1.0</li>\n<li>更新日期：暂无</li>\n<li>关键词：暂无</li>\n<li>许可协议：CC BY-ND 4.0</li>\n</ul>\n<hr>\n<h2 id=\"二-、需求\"><a href=\"#二-、需求\" class=\"headerlink\" title=\"二 、需求\"></a>二 、需求</h2><ul>\n<li><input disabled=\"\" type=\"checkbox\"> 更多的lua报错类型列表</li>\n<li><input disabled=\"\" type=\"checkbox\"> 更多时间</li>\n</ul>\n<hr>\n<h2 id=\"三、准备\"><a href=\"#三、准备\" class=\"headerlink\" title=\"三、准备\"></a>三、准备</h2><p>1.暂时用了手册内色子整理的常见报错信息说明。</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span> <span class=\"string\">&#x27;%s&#x27;</span> <span class=\"keyword\">not</span> found:</span><br><span class=\"line\">\tno field <span class=\"built_in\">package</span>.<span class=\"built_in\">preload</span>[<span class=\"string\">&#x27;%s&#x27;</span>]</span><br><span class=\"line\">\tno file </span><br><span class=\"line\"><span class=\"comment\">-- 没有把被引用的lua或dll文件放在指定位置（多见于require与loadLua）</span></span><br><span class=\"line\"><span class=\"comment\">-- 解决方式：把所需文件放入Dice存档目录/plugin/或Diceki/lua/，dll文件或require对象必须置于后者</span></span><br><span class=\"line\">attempt to call a <span class=\"literal\">nil</span> value (global <span class=\"string\">&#x27;%s&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">-- 将空变量%s用作函数（global表示被调用的是全局变量，local表示本地变量，method表示索引方法）</span></span><br><span class=\"line\">attempt to index a <span class=\"literal\">nil</span> value (global <span class=\"string\">&#x27;%s&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">-- 对空变量%s使用索引（只有table等结构可以索引，形如msg.fromMsg）</span></span><br><span class=\"line\">attempt to concatenate a <span class=\"literal\">nil</span> value (<span class=\"keyword\">local</span> <span class=\"string\">&#x27;%s&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">-- 使用..连接字符串时连接了一个空变量%s</span></span><br><span class=\"line\">bad argument #<span class=\"number\">1</span> to <span class=\"string\">&#x27;%s&#x27;</span> (<span class=\"built_in\">string</span> expected, got <span class=\"literal\">nil</span>)</span><br><span class=\"line\"><span class=\"comment\">-- 函数%s的第1个参数类型错误，要求类型为string，但实际传入的参数为nil。特别地，got nil表示输入参数为nil或缺少参数</span></span><br><span class=\"line\">value expected</span><br><span class=\"line\"><span class=\"comment\">-- 要求参数，但没有传入</span></span><br><span class=\"line\">attempt to perform arithmetic on a <span class=\"literal\">nil</span> value (global <span class=\"string\">&#x27;%s&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">-- 将一个空变量%s当做数字表示</span></span><br><span class=\"line\">bad argument #<span class=\"number\">5</span> to <span class=\"string\">&#x27;format&#x27;</span>(number has no integer representation)</span><br><span class=\"line\"><span class=\"comment\">-- 函数format的第5个参数类型错误，要求是整数，但传入是小数，或者是其余类型不能化为整数</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#125;&#x27;</span> expected (to <span class=\"built_in\">close</span> <span class=\"string\">&#x27;&#123;&#x27;</span> at line <span class=\"number\">169</span>) near <span class=\"string\">&#x27;%s&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">-- 脚本第169行的左花括号缺少配对的右花括号。此错误也可以由表格内缺少逗号分隔、括号外的中文等原因造成</span></span><br><span class=\"line\"><span class=\"string\">&#x27;end&#x27;</span> expected (to <span class=\"built_in\">close</span> <span class=\"string\">&#x27;function&#x27;</span> at line <span class=\"number\">240</span>) near &lt;eof&gt;</span><br><span class=\"line\"><span class=\"comment\">-- 脚本第240行的function缺少收尾的end，&lt;eof&gt;表示文件结束（找到文件末也没找到）</span></span><br><span class=\"line\"><span class=\"string\">&#x27;then&#x27;</span> expected near <span class=\"string\">&#x27;end&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">-- if then end逻辑结构缺少then</span></span><br><span class=\"line\">unexpected symbol near <span class=\"string\">&#x27;%s&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">-- 符号%s边有无法识读的符号，比如中文字符</span></span><br><span class=\"line\">attempt to get length of a <span class=\"literal\">nil</span> value (<span class=\"keyword\">local</span> <span class=\"string\">&#x27;tab&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">-- 对空变量tab作取长度运算（#）</span></span><br><span class=\"line\">attempt to add a <span class=\"string\">&#x27;string&#x27;</span> with a <span class=\"string\">&#x27;string&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">-- 对(不能化为数字的)字符串用加法&#x27;+&#x27;（字符串只能用连接&#x27;..&#x27;）</span></span><br><span class=\"line\">attempt to compare number with <span class=\"built_in\">string</span></span><br><span class=\"line\"><span class=\"comment\">-- 对数字和(不能化为数字的)字符串用比较运算符</span></span><br><span class=\"line\"><span class=\"built_in\">error</span> loading <span class=\"built_in\">module</span> <span class=\"string\">&#x27;%s&#x27;</span> from file</span><br><span class=\"line\"><span class=\"comment\">-- 使用require &quot;%s&quot;时加载出错</span></span><br><span class=\"line\">no visible label <span class=\"string\">&#x27;%s&#x27;</span> <span class=\"keyword\">for</span> &lt;<span class=\"keyword\">goto</span>&gt; at line </span><br><span class=\"line\"><span class=\"comment\">-- 在循环结构中跳转不存在的节点</span></span><br><span class=\"line\">invalid option <span class=\"string\">&#x27;%s&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">-- 传入的参数不是string或不在给定的字符串列表中</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"四、引用清单\"><a href=\"#四、引用清单\" class=\"headerlink\" title=\"四、引用清单\"></a>四、引用清单</h2><ol>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly92MmRvY3Mua29rb25hLnRlY2gvemgvbGF0ZXN0L0RldmVsb3BfTWFudWFsLmh0bWwjaWQyMg==\">https://v2docs.kokona.tech/zh/latest/Develop_Manual.html#id22<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ol>\n",
            "tags": [
                "Dice"
            ]
        },
        {
            "id": "https://cypress.github.io/2022/08/15/table-module/",
            "url": "https://cypress.github.io/2022/08/15/table-module/",
            "title": "table-module",
            "date_published": "2022-08-14T16:00:00.000Z",
            "content_html": "<div class=\"note success\"><p><strong>table module</strong></p>\n<blockquote>\n<p>对数组操作函数的拓展，利用这些函数可以更好的进行数据操作。</p>\n</blockquote>\n</div>\n\n<h1 id=\"table-module-更多的数组操作\"><a href=\"#table-module-更多的数组操作\" class=\"headerlink\" title=\"table-module:更多的数组操作\"></a>table-module:更多的数组操作</h1><blockquote>\n<p>使用《署名—禁止演绎 4.0 协议国际版》（CC BY-ND 4.0）进行授权。<br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5kLzQuMC8=\">https://creativecommons.org/licenses/by-nd/4.0/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<hr>\n<blockquote>\n<p>[ toc ] 更多操作，更多的可能<del>猝死</del>。</p>\n</blockquote>\n<hr>\n<h2 id=\"一、基本信息\"><a href=\"#一、基本信息\" class=\"headerlink\" title=\"一、基本信息\"></a>一、基本信息</h2><ul>\n<li><a href=\"\">二次修改</a>作者： 简律纯</li>\n<li>联系方式：qq:a2c29k9</li>\n<li>版本：v1.0</li>\n<li>更新日期：暂无</li>\n<li>关键词：暂无</li>\n<li>许可协议：CC BY-ND 4.0</li>\n</ul>\n<hr>\n<table>\n<thead>\n<tr>\n<th align=\"left\">#</th>\n<th align=\"center\">函数名</th>\n<th align=\"center\">简单介绍</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">1</td>\n<td align=\"center\">table.nums</td>\n<td align=\"center\">计算表格包含的字段数量</td>\n</tr>\n<tr>\n<td align=\"left\">2</td>\n<td align=\"center\">table.keys</td>\n<td align=\"center\">返回指定表格中的所有键</td>\n</tr>\n<tr>\n<td align=\"left\">3</td>\n<td align=\"center\">table.values</td>\n<td align=\"center\">返回指定表格中的所有值</td>\n</tr>\n<tr>\n<td align=\"left\">4</td>\n<td align=\"center\">table.merge</td>\n<td align=\"center\">将来源表格中所有键及其值复制到目标表格对象中</td>\n</tr>\n<tr>\n<td align=\"left\">5</td>\n<td align=\"center\">table.indexof</td>\n<td align=\"center\">从表格中查找指定值，返回其索引</td>\n</tr>\n<tr>\n<td align=\"left\">6</td>\n<td align=\"center\">table.keyof</td>\n<td align=\"center\">从表格中查找指定值，返回其 key</td>\n</tr>\n<tr>\n<td align=\"left\">7</td>\n<td align=\"center\">table.removebyvalue</td>\n<td align=\"center\">从表格中删除指定值，返回删除的值的个数</td>\n</tr>\n<tr>\n<td align=\"left\">8</td>\n<td align=\"center\">table.map</td>\n<td align=\"center\">对表格中每一个值执行一次指定的函数，并用函数返回值更新表格内容</td>\n</tr>\n<tr>\n<td align=\"left\">9</td>\n<td align=\"center\">table.walk</td>\n<td align=\"center\">对表格中每一个值执行一次指定的函数，但不改变表格内容</td>\n</tr>\n<tr>\n<td align=\"left\">10</td>\n<td align=\"center\">table.filter</td>\n<td align=\"center\">对表格中每一个值执行一次指定的函数</td>\n</tr>\n<tr>\n<td align=\"left\">11</td>\n<td align=\"center\">table.unique</td>\n<td align=\"center\">遍历表格，确保其中的值唯一</td>\n</tr>\n</tbody></table>\n<h2 id=\"二、详细介绍\"><a href=\"#二、详细介绍\" class=\"headerlink\" title=\"二、详细介绍\"></a>二、详细介绍</h2><h3 id=\"1-table-nums-t\"><a href=\"#1-table-nums-t\" class=\"headerlink\" title=\"1.table.nums(t)\"></a>1.table.nums(t)</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 计算表格包含的字段数量</span></span><br><span class=\"line\"><span class=\"comment\">-- @function [parent=#table] nums</span></span><br><span class=\"line\"><span class=\"comment\">-- @param table t 要检查的表格</span></span><br><span class=\"line\"><span class=\"comment\">-- @return integer#integer </span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">-- 计算表格包含的字段数量</span></span><br><span class=\"line\"><span class=\"comment\">-- Lua table 的 &quot;#&quot; 操作只对依次排序的数值下标数组有效，</span></span><br><span class=\"line\"><span class=\"comment\">-- table.nums() 则计算 table 中所有不为 nil 的值的个数。</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-table-keys-hashtable\"><a href=\"#2-table-keys-hashtable\" class=\"headerlink\" title=\"2.table.keys(hashtable)\"></a>2.table.keys(hashtable)</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 返回指定表格中的所有键</span></span><br><span class=\"line\"><span class=\"comment\">-- @function [parent=#table] keys</span></span><br><span class=\"line\"><span class=\"comment\">-- @param table hashtable 要检查的表格</span></span><br><span class=\"line\"><span class=\"comment\">-- @return table#table </span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">-- 返回指定表格中的所有键</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> hashtable = &#123;a = <span class=\"number\">1</span>, b = <span class=\"number\">2</span>, c = <span class=\"number\">3</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">local</span> keys = <span class=\"built_in\">table</span>.keys(hashtable)</span><br><span class=\"line\"><span class=\"comment\">-- keys = &#123;&quot;a&quot;, &quot;b&quot;, &quot;c&quot;&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-table-values-hashtable\"><a href=\"#3-table-values-hashtable\" class=\"headerlink\" title=\"3.table.values(hashtable)\"></a>3.table.values(hashtable)</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 返回指定表格中的所有值</span></span><br><span class=\"line\"><span class=\"comment\">-- @function [parent=#table] values</span></span><br><span class=\"line\"><span class=\"comment\">-- @param table hashtable 要检查的表格</span></span><br><span class=\"line\"><span class=\"comment\">-- @return table#table </span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">-- 返回指定表格中的所有值</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> hashtable = &#123;a = <span class=\"number\">1</span>, b = <span class=\"number\">2</span>, c = <span class=\"number\">3</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">local</span> values = <span class=\"built_in\">table</span>.values(hashtable)</span><br><span class=\"line\"><span class=\"comment\">-- values = &#123;1, 2, 3&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-table-merge-dest-src\"><a href=\"#4-table-merge-dest-src\" class=\"headerlink\" title=\"4.table.merge(dest, src)\"></a>4.table.merge(dest, src)</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 将来源表格中所有键及其值复制到目标表格对象中，如果存在同名键，则覆盖其值</span></span><br><span class=\"line\"><span class=\"comment\">-- @function [parent=#table] merge</span></span><br><span class=\"line\"><span class=\"comment\">-- @param table dest 目标表格</span></span><br><span class=\"line\"><span class=\"comment\">-- @param table src 来源表格</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">-- 将来源表格中所有键及其值复制到目标表格对象中，如果存在同名键，则覆盖其值</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> dest = &#123;a = <span class=\"number\">1</span>, b = <span class=\"number\">2</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">local</span> src  = &#123;c = <span class=\"number\">3</span>, d = <span class=\"number\">4</span>&#125;</span><br><span class=\"line\"><span class=\"built_in\">table</span>.merge(dest, src)</span><br><span class=\"line\"><span class=\"comment\">-- dest = &#123;a = 1, b = 2, c = 3, d = 4&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-table-indexof-array-value-begin\"><a href=\"#5-table-indexof-array-value-begin\" class=\"headerlink\" title=\"5.table.indexof(array, value, begin)\"></a>5.table.indexof(array, value, begin)</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 从表格中查找指定值，返回其索引，如果没找到返回 false</span></span><br><span class=\"line\"><span class=\"comment\">-- @function [parent=#table] indexof</span></span><br><span class=\"line\"><span class=\"comment\">-- @param table array 表格</span></span><br><span class=\"line\"><span class=\"comment\">-- @param mixed value 要查找的值</span></span><br><span class=\"line\"><span class=\"comment\">-- @param integer begin 起始索引值</span></span><br><span class=\"line\"><span class=\"comment\">-- @return integer#integer </span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">-- 从表格中查找指定值，返回其索引，如果没找到返回 false</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> array = &#123;<span class=\"string\">&quot;a&quot;</span>, <span class=\"string\">&quot;b&quot;</span>, <span class=\"string\">&quot;c&quot;</span>&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">table</span>.indexof(array, <span class=\"string\">&quot;b&quot;</span>)) <span class=\"comment\">-- 输出 2</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-table-keyof-hashtable-value\"><a href=\"#6-table-keyof-hashtable-value\" class=\"headerlink\" title=\"6.table.keyof(hashtable, value)\"></a>6.table.keyof(hashtable, value)</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 从表格中查找指定值，返回其 key，如果没找到返回 nil</span></span><br><span class=\"line\"><span class=\"comment\">-- @function [parent=#table] keyof</span></span><br><span class=\"line\"><span class=\"comment\">-- @param table hashtable 表格</span></span><br><span class=\"line\"><span class=\"comment\">-- @param mixed value 要查找的值</span></span><br><span class=\"line\"><span class=\"comment\">-- @return string#string  该值对应的 key</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">-- 从表格中查找指定值，返回其 key，如果没找到返回 nil</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> hashtable = &#123;name = <span class=\"string\">&quot;dualface&quot;</span>, comp = <span class=\"string\">&quot;chukong&quot;</span>&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">table</span>.keyof(hashtable, <span class=\"string\">&quot;chukong&quot;</span>)) <span class=\"comment\">-- 输出 comp</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"7-table-removebyvalue-array-value-removeall\"><a href=\"#7-table-removebyvalue-array-value-removeall\" class=\"headerlink\" title=\"7.table.removebyvalue(array, value, removeall)\"></a>7.table.removebyvalue(array, value, removeall)</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 从表格中删除指定值，返回删除的值的个数</span></span><br><span class=\"line\"><span class=\"comment\">-- @function [parent=#table] removebyvalue</span></span><br><span class=\"line\"><span class=\"comment\">-- @param table array 表格</span></span><br><span class=\"line\"><span class=\"comment\">-- @param mixed value 要删除的值</span></span><br><span class=\"line\"><span class=\"comment\">-- @param boolean removeall 是否删除所有相同的值</span></span><br><span class=\"line\"><span class=\"comment\">-- @return integer#integer </span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">-- 从表格中删除指定值，返回删除的值的个数</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> array = &#123;<span class=\"string\">&quot;a&quot;</span>, <span class=\"string\">&quot;b&quot;</span>, <span class=\"string\">&quot;c&quot;</span>, <span class=\"string\">&quot;c&quot;</span>&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">table</span>.removebyvalue(array, <span class=\"string\">&quot;c&quot;</span>, <span class=\"literal\">true</span>)) <span class=\"comment\">-- 输出 2</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"8-table-map-t-fn\"><a href=\"#8-table-map-t-fn\" class=\"headerlink\" title=\"8.table.map(t, fn)\"></a>8.table.map(t, fn)</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 对表格中每一个值执行一次指定的函数，并用函数返回值更新表格内容</span></span><br><span class=\"line\"><span class=\"comment\">-- @function [parent=#table] map</span></span><br><span class=\"line\"><span class=\"comment\">-- @param table t 表格</span></span><br><span class=\"line\"><span class=\"comment\">-- @param function fn 函数</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">-- 对表格中每一个值执行一次指定的函数，并用函数返回值更新表格内容</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> t = &#123;name = <span class=\"string\">&quot;dualface&quot;</span>, comp = <span class=\"string\">&quot;chukong&quot;</span>&#125;</span><br><span class=\"line\"><span class=\"built_in\">table</span>.map(t, <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(v, k)</span></span></span><br><span class=\"line\">    <span class=\"comment\">-- 在每一个值前后添加括号</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;[&quot;</span> .. v .. <span class=\"string\">&quot;]&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">end</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 输出修改后的表格内容</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> <span class=\"built_in\">pairs</span>(t) <span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(k, v)</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">-- 输出</span></span><br><span class=\"line\"><span class=\"comment\">-- name [dualface]</span></span><br><span class=\"line\"><span class=\"comment\">-- comp [chukong]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- fn 参数指定的函数具有两个参数，并且返回一个值。原型如下：</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">map_function</span><span class=\"params\">(value, key)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> value</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"9-table-walk-t-fn\"><a href=\"#9-table-walk-t-fn\" class=\"headerlink\" title=\"9.table.walk(t, fn)\"></a>9.table.walk(t, fn)</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 对表格中每一个值执行一次指定的函数，但不改变表格内容</span></span><br><span class=\"line\"><span class=\"comment\">-- @function [parent=#table] walk</span></span><br><span class=\"line\"><span class=\"comment\">-- @param table t 表格</span></span><br><span class=\"line\"><span class=\"comment\">-- @param function fn 函数</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">-- 对表格中每一个值执行一次指定的函数，但不改变表格内容</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> t = &#123;name = <span class=\"string\">&quot;dualface&quot;</span>, comp = <span class=\"string\">&quot;chukong&quot;</span>&#125;</span><br><span class=\"line\"><span class=\"built_in\">table</span>.walk(t, <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(v, k)</span></span></span><br><span class=\"line\">    <span class=\"comment\">-- 输出每一个值</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(v)</span><br><span class=\"line\"><span class=\"keyword\">end</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- fn 参数指定的函数具有两个参数，没有返回值。原型如下：</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">map_function</span><span class=\"params\">(value, key)</span></span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"10-table-filter-t-fn\"><a href=\"#10-table-filter-t-fn\" class=\"headerlink\" title=\"10.table.filter(t, fn)\"></a>10.table.filter(t, fn)</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 对表格中每一个值执行一次指定的函数，如果该函数返回 false，则对应的值会从表格中删除</span></span><br><span class=\"line\"><span class=\"comment\">-- @function [parent=#table] filter</span></span><br><span class=\"line\"><span class=\"comment\">-- @param table t 表格</span></span><br><span class=\"line\"><span class=\"comment\">-- @param function fn 函数</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">-- 对表格中每一个值执行一次指定的函数，如果该函数返回 false，则对应的值会从表格中删除</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> t = &#123;name = <span class=\"string\">&quot;dualface&quot;</span>, comp = <span class=\"string\">&quot;chukong&quot;</span>&#125;</span><br><span class=\"line\"><span class=\"built_in\">table</span>.filter(t, <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(v, k)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> v ~= <span class=\"string\">&quot;dualface&quot;</span> <span class=\"comment\">-- 当值等于 dualface 时过滤掉该值</span></span><br><span class=\"line\"><span class=\"keyword\">end</span>)</span><br><span class=\"line\"><span class=\"comment\">-- 输出修改后的表格内容</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> <span class=\"built_in\">pairs</span>(t) <span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(k, v)</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">-- 输出</span></span><br><span class=\"line\"><span class=\"comment\">-- comp chukong</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- fn 参数指定的函数具有两个参数，并且返回一个 boolean 值。原型如下：</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">map_function</span><span class=\"params\">(value, key)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span> <span class=\"keyword\">or</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"11-table-unique-array\"><a href=\"#11-table-unique-array\" class=\"headerlink\" title=\"11.table.unique(array)\"></a>11.table.unique(array)</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 遍历表格，确保其中的值唯一</span></span><br><span class=\"line\"><span class=\"comment\">-- @function [parent=#table] unique</span></span><br><span class=\"line\"><span class=\"comment\">-- @param table array 数组</span></span><br><span class=\"line\"><span class=\"comment\">-- @return table#table  包含所有唯一值的新表格</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">-- 遍历表格，确保其中的值唯一</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> t = &#123;<span class=\"string\">&quot;a&quot;</span>, <span class=\"string\">&quot;a&quot;</span>, <span class=\"string\">&quot;b&quot;</span>, <span class=\"string\">&quot;c&quot;</span>&#125; <span class=\"comment\">-- 重复的 a 会被过滤掉</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> n = <span class=\"built_in\">table</span>.unique(t)</span><br><span class=\"line\"><span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> <span class=\"built_in\">pairs</span>(n) <span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(v)</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">-- 输出</span></span><br><span class=\"line\"><span class=\"comment\">-- a</span></span><br><span class=\"line\"><span class=\"comment\">-- b</span></span><br><span class=\"line\"><span class=\"comment\">-- c</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"三、下载\"><a href=\"#三、下载\" class=\"headerlink\" title=\"三、下载\"></a>三、下载</h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2N5cHJlc3MwNTIyL2N5cHJlc3MwNTIyLmdpdGh1Yi5pby9yZWxlYXNlcy9kb3dubG9hZC9tb2R1bGUvdGFibGVfbW9kdWxlLnppcA==\">table-module.zip<i class=\"fa fa-external-link-alt\"></i></span></p>\n",
            "tags": [
                "Dice"
            ]
        },
        {
            "id": "https://cypress.github.io/2022/08/05/Midido/",
            "url": "https://cypress.github.io/2022/08/05/Midido/",
            "title": "Midido 一个更非人性化的手搓midi库",
            "date_published": "2022-08-04T16:00:00.000Z",
            "content_html": "<div class=\"note success\"><p><strong>Midido</strong><br>简单实现用lua输出midi的库。</p>\n</div>\n\n<blockquote>\n<p>使用《署名—非商业性使用—相同方式共享 4.0 协议国际版》（CC BY-NC-SA 4.0）进行授权。<br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC9sZWdhbGNvZGUuemgtSGFucw==\">https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode.zh-Hans<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Midido To-do list</th>\n<th align=\"center\">描述</th>\n<th align=\"center\">状态</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">wiki</td>\n<td align=\"center\">用法wiki</td>\n<td align=\"center\">x</td>\n</tr>\n<tr>\n<td align=\"left\">Keyboards’ pack</td>\n<td align=\"center\">键位包</td>\n<td align=\"center\">敬请期待</td>\n</tr>\n<tr>\n<td align=\"left\">songs’ e.g.</td>\n<td align=\"center\">歌曲工程示例</td>\n<td align=\"center\">x</td>\n</tr>\n</tbody></table>\n<h2 id=\"一、基本信息\"><a href=\"#一、基本信息\" class=\"headerlink\" title=\"一、基本信息\"></a>一、基本信息</h2><blockquote>\n<ul>\n<li>作者： 简律纯</li>\n</ul>\n</blockquote>\n<ul>\n<li>联系方式：qq:a2c29k9</li>\n<li>版本：v1.0</li>\n<li>更新日期：暂无</li>\n<li>关键词：暂无</li>\n<li>许可协议：CC BY-NC-SA 4.0</li>\n</ul>\n<h2 id=\"二、详细介绍\"><a href=\"#二、详细介绍\" class=\"headerlink\" title=\"二、详细介绍\"></a>二、详细介绍</h2><h3 id=\"1-简介\"><a href=\"#1-简介\" class=\"headerlink\" title=\"1.简介\"></a>1.简介</h3><blockquote>\n<p>最初是一个设想，毕竟我是写音乐的，主要负责作曲编曲，鸽了快一年后很多粉丝不耐烦了，于是我开始整一些或许大学用得上的东西^比如一个bot ，高考那几天突发奇想，我或许可以教粉丝朋友一起写音乐？那就先从midi序列开始吧！<del>（也可以名正言顺咕咕咕，同时压榨劳动力）</del></p>\n</blockquote>\n<h3 id=\"2-一些教训\"><a href=\"#2-一些教训\" class=\"headerlink\" title=\"2.一些教训\"></a>2.一些教训</h3><blockquote>\n<p>1.之前试过onebot ZBP插件里的timidity，也是手搓midi，但是仍然需要安装ffmpeg和timidity环境，且受到一定的系统环境影响——尽管成功写出了midi文件，但是对于其他那些使用非Windows系统（大家其实更愿意用Macbook）的人（主要是我的作曲家编曲家朋友）来说安装十分困难。<br>zbp关于midi的插件介绍：<br><img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-07-30/1659158099-11773-5d706d6c091bc400.jpg\"></p>\n</blockquote>\n<blockquote>\n<p>2.于是我开始注意到简化使用指令的重要性，并在此机缘巧合下找到了 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYXV0b3BpYW5vLmNuLw==\">AutoPiano<i class=\"fa fa-external-link-alt\"></i></span>。<br>我并不在意它的关于编写输出音乐的任何逻辑或是别的什么，我找到了站长，并向他提出了几个问题——就比如，键盘谱是如何想出来的。<br>下图为孤勇者唱谱：<br><img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-07-30/1659157938-716855-img20220730131141.jpg\"></p>\n</blockquote>\n<blockquote>\n<p>3.综上，这未尝不是一个很好的开端，至少我明白了手搓midi的原理，以及一些更切合实际的东西，就比如简化指令。</p>\n</blockquote>\n<h2 id=\"三、TO-DO-LIST\"><a href=\"#三、TO-DO-LIST\" class=\"headerlink\" title=\"三、TO-DO LIST\"></a>三、TO-DO LIST</h2><ul>\n<li><p><input disabled=\"\" type=\"checkbox\">  编写用法wiki<br>用法非常复杂，这脚本就算是raw了，我需要讲清楚如何写出一段音阶（最简单的一段中音区 C D E F G A B midi片段）；如何写出一段chord（和弦），并在此和弦基础上继续写主旋律；如何变换调式调性（F# -&gt; Ab）；如何修改速度等等。</p>\n</li>\n<li><p><input disabled=\"\" type=\"checkbox\">  编写最基础的简化指令包，虽然目前写好的raw版本是功能最全的，但是其编写midi的方式（我目前主要靠写lua脚本再 <code>loadLua()</code> 或者使用basicFunction1.0（啊现在应该叫FuncLib2.0）内注释掉的 <code>load()()</code> 来写midi）过于硬核，所以需要一个诸如 <code>midi:0333-1 0333-2</code> 或是 <code>midi:E5 E5 E5 C5</code> 这样的简单易用指令。</p>\n</li>\n<li><p><input checked=\"\" disabled=\"\" type=\"checkbox\">  一个音源键位包，或者一个键位函数包，用于简化脚本写midi时的打谱环节。</p>\n</li>\n</ul>\n<h2 id=\"四、脚本输出实例试听\"><a href=\"#四、脚本输出实例试听\" class=\"headerlink\" title=\"四、脚本输出实例试听\"></a>四、脚本输出实例试听</h2><p>C大调音阶：<br>[upl-file uuid=e45d0254-ca7a-498c-b00d-069b2de5a74b size=257B]c-major-scale.zip[/upl-file]<br>Am和弦：<br>[upl-file uuid=d2589143-51ab-4ff7-aa9f-96734e60d4b3 size=321B]chord-example.zip[/upl-file]<br>时值变化：<br>[upl-file uuid=d9db9d92-396a-48c2-918c-2ecf3ef37e26 size=260B]duration-example.zip[/upl-file]</p>\n<h2 id=\"五、最后\"><a href=\"#五、最后\" class=\"headerlink\" title=\"五、最后\"></a>五、最后</h2><blockquote>\n<p>脚本将会在简化指令版写完发布，愿大家都能名正言顺的咕咕咕，也愿大家都热爱生活，热爱音乐！</p>\n</blockquote>\n",
            "tags": [
                "Dice",
                "FIXED"
            ]
        },
        {
            "id": "https://cypress.github.io/2022/08/04/yaml2table/",
            "url": "https://cypress.github.io/2022/08/04/yaml2table/",
            "title": "yaml2table yaml转lua table",
            "date_published": "2022-08-03T16:00:00.000Z",
            "content_html": "<div class=\"note success\"><p><strong>yaml2table</strong><br>简单实现读取yaml转为table,</p>\n<blockquote>\n<p>暂时不支持读取注释.</p>\n</blockquote>\n</div>\n\n\n<h3 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br><span class=\"line\">654</span><br><span class=\"line\">655</span><br><span class=\"line\">656</span><br><span class=\"line\">657</span><br><span class=\"line\">658</span><br><span class=\"line\">659</span><br><span class=\"line\">660</span><br><span class=\"line\">661</span><br><span class=\"line\">662</span><br><span class=\"line\">663</span><br><span class=\"line\">664</span><br><span class=\"line\">665</span><br><span class=\"line\">666</span><br><span class=\"line\">667</span><br><span class=\"line\">668</span><br><span class=\"line\">669</span><br><span class=\"line\">670</span><br><span class=\"line\">671</span><br><span class=\"line\">672</span><br><span class=\"line\">673</span><br><span class=\"line\">674</span><br><span class=\"line\">675</span><br><span class=\"line\">676</span><br><span class=\"line\">677</span><br><span class=\"line\">678</span><br><span class=\"line\">679</span><br><span class=\"line\">680</span><br><span class=\"line\">681</span><br><span class=\"line\">682</span><br><span class=\"line\">683</span><br><span class=\"line\">684</span><br><span class=\"line\">685</span><br><span class=\"line\">686</span><br><span class=\"line\">687</span><br><span class=\"line\">688</span><br><span class=\"line\">689</span><br><span class=\"line\">690</span><br><span class=\"line\">691</span><br><span class=\"line\">692</span><br><span class=\"line\">693</span><br><span class=\"line\">694</span><br><span class=\"line\">695</span><br><span class=\"line\">696</span><br><span class=\"line\">697</span><br><span class=\"line\">698</span><br><span class=\"line\">699</span><br><span class=\"line\">700</span><br><span class=\"line\">701</span><br><span class=\"line\">702</span><br><span class=\"line\">703</span><br><span class=\"line\">704</span><br><span class=\"line\">705</span><br><span class=\"line\">706</span><br><span class=\"line\">707</span><br><span class=\"line\">708</span><br><span class=\"line\">709</span><br><span class=\"line\">710</span><br><span class=\"line\">711</span><br><span class=\"line\">712</span><br><span class=\"line\">713</span><br><span class=\"line\">714</span><br><span class=\"line\">715</span><br><span class=\"line\">716</span><br><span class=\"line\">717</span><br><span class=\"line\">718</span><br><span class=\"line\">719</span><br><span class=\"line\">720</span><br><span class=\"line\">721</span><br><span class=\"line\">722</span><br><span class=\"line\">723</span><br><span class=\"line\">724</span><br><span class=\"line\">725</span><br><span class=\"line\">726</span><br><span class=\"line\">727</span><br><span class=\"line\">728</span><br><span class=\"line\">729</span><br><span class=\"line\">730</span><br><span class=\"line\">731</span><br><span class=\"line\">732</span><br><span class=\"line\">733</span><br><span class=\"line\">734</span><br><span class=\"line\">735</span><br><span class=\"line\">736</span><br><span class=\"line\">737</span><br><span class=\"line\">738</span><br><span class=\"line\">739</span><br><span class=\"line\">740</span><br><span class=\"line\">741</span><br><span class=\"line\">742</span><br><span class=\"line\">743</span><br><span class=\"line\">744</span><br><span class=\"line\">745</span><br><span class=\"line\">746</span><br><span class=\"line\">747</span><br><span class=\"line\">748</span><br><span class=\"line\">749</span><br><span class=\"line\">750</span><br><span class=\"line\">751</span><br><span class=\"line\">752</span><br><span class=\"line\">753</span><br><span class=\"line\">754</span><br><span class=\"line\">755</span><br><span class=\"line\">756</span><br><span class=\"line\">757</span><br><span class=\"line\">758</span><br><span class=\"line\">759</span><br><span class=\"line\">760</span><br><span class=\"line\">761</span><br><span class=\"line\">762</span><br><span class=\"line\">763</span><br><span class=\"line\">764</span><br><span class=\"line\">765</span><br><span class=\"line\">766</span><br><span class=\"line\">767</span><br><span class=\"line\">768</span><br><span class=\"line\">769</span><br><span class=\"line\">770</span><br><span class=\"line\">771</span><br><span class=\"line\">772</span><br><span class=\"line\">773</span><br><span class=\"line\">774</span><br><span class=\"line\">775</span><br><span class=\"line\">776</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-------------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\">-- tinyyaml - YAML subset parser</span></span><br><span class=\"line\"><span class=\"comment\">-------------------------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"built_in\">table</span> = <span class=\"built_in\">table</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"built_in\">string</span> = <span class=\"built_in\">string</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> schar = <span class=\"built_in\">string</span>.<span class=\"built_in\">char</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> ssub, <span class=\"built_in\">gsub</span> = <span class=\"built_in\">string</span>.<span class=\"built_in\">sub</span>, <span class=\"built_in\">string</span>.<span class=\"built_in\">gsub</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> sfind, smatch = <span class=\"built_in\">string</span>.<span class=\"built_in\">find</span>, <span class=\"built_in\">string</span>.<span class=\"built_in\">match</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> tinsert, tremove = <span class=\"built_in\">table</span>.<span class=\"built_in\">insert</span>, <span class=\"built_in\">table</span>.<span class=\"built_in\">remove</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"built_in\">setmetatable</span> = <span class=\"built_in\">setmetatable</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"built_in\">pairs</span> = <span class=\"built_in\">pairs</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"built_in\">type</span> = <span class=\"built_in\">type</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"built_in\">tonumber</span> = <span class=\"built_in\">tonumber</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"built_in\">math</span> = <span class=\"built_in\">math</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"built_in\">getmetatable</span> = <span class=\"built_in\">getmetatable</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"built_in\">error</span> = <span class=\"built_in\">error</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> UNESCAPES = &#123;</span><br><span class=\"line\">  [<span class=\"string\">&#x27;0&#x27;</span>] = <span class=\"string\">&quot;\\x00&quot;</span>, z = <span class=\"string\">&quot;\\x00&quot;</span>, N    = <span class=\"string\">&quot;\\x85&quot;</span>,</span><br><span class=\"line\">  a = <span class=\"string\">&quot;\\x07&quot;</span>,     b = <span class=\"string\">&quot;\\x08&quot;</span>, t    = <span class=\"string\">&quot;\\x09&quot;</span>,</span><br><span class=\"line\">  n = <span class=\"string\">&quot;\\x0a&quot;</span>,     v = <span class=\"string\">&quot;\\x0b&quot;</span>, f    = <span class=\"string\">&quot;\\x0c&quot;</span>,</span><br><span class=\"line\">  r = <span class=\"string\">&quot;\\x0d&quot;</span>,     e = <span class=\"string\">&quot;\\x1b&quot;</span>, [<span class=\"string\">&#x27;\\\\&#x27;</span>] = <span class=\"string\">&#x27;\\\\&#x27;</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-------------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\">-- utils</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">select</span><span class=\"params\">(list, pred)</span></span></span><br><span class=\"line\">  <span class=\"keyword\">local</span> selected = &#123;&#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> i = <span class=\"number\">0</span>, #list <span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> v = list[i]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> v <span class=\"keyword\">and</span> pred(v, i) <span class=\"keyword\">then</span></span><br><span class=\"line\">      tinsert(selected, v)</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> selected</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">startswith</span><span class=\"params\">(haystack, needle)</span></span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> ssub(haystack, <span class=\"number\">1</span>, #needle) == needle</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ltrim</span><span class=\"params\">(str)</span></span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> smatch(str, <span class=\"string\">&quot;^%s*(.-)$&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">rtrim</span><span class=\"params\">(str)</span></span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> smatch(str, <span class=\"string\">&quot;^(.-)%s*$&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-------------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\">-- Implementation.</span></span><br><span class=\"line\"><span class=\"comment\">--</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> class = &#123;__meta=&#123;&#125;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">class.__meta.__call</span><span class=\"params\">(cls, ...)</span></span></span><br><span class=\"line\">  <span class=\"keyword\">local</span> <span class=\"built_in\">self</span> = <span class=\"built_in\">setmetatable</span>(&#123;&#125;, cls)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> cls.__init <span class=\"keyword\">then</span></span><br><span class=\"line\">    cls.__init(<span class=\"built_in\">self</span>, ...)</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">self</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">class.def</span><span class=\"params\">(base, typ, cls)</span></span></span><br><span class=\"line\">  base = base <span class=\"keyword\">or</span> class</span><br><span class=\"line\">  <span class=\"keyword\">local</span> mt = &#123;<span class=\"built_in\">__metatable</span>=base, <span class=\"built_in\">__index</span>=base&#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> <span class=\"built_in\">pairs</span>(base.__meta) <span class=\"keyword\">do</span> mt[k] = v <span class=\"keyword\">end</span></span><br><span class=\"line\">  cls = <span class=\"built_in\">setmetatable</span>(cls <span class=\"keyword\">or</span> &#123;&#125;, mt)</span><br><span class=\"line\">  cls.<span class=\"built_in\">__index</span> = cls</span><br><span class=\"line\">  cls.<span class=\"built_in\">__metatable</span> = cls</span><br><span class=\"line\">  cls.__type = typ</span><br><span class=\"line\">  cls.__meta = mt</span><br><span class=\"line\">  <span class=\"keyword\">return</span> cls</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> types = &#123;</span><br><span class=\"line\">  null = class:def(<span class=\"string\">&#x27;null&#x27;</span>),</span><br><span class=\"line\">  map = class:def(<span class=\"string\">&#x27;map&#x27;</span>),</span><br><span class=\"line\">  omap = class:def(<span class=\"string\">&#x27;omap&#x27;</span>),</span><br><span class=\"line\">  <span class=\"built_in\">pairs</span> = class:def(<span class=\"string\">&#x27;pairs&#x27;</span>),</span><br><span class=\"line\">  set = class:def(<span class=\"string\">&#x27;set&#x27;</span>),</span><br><span class=\"line\">  seq = class:def(<span class=\"string\">&#x27;seq&#x27;</span>),</span><br><span class=\"line\">  timestamp = class:def(<span class=\"string\">&#x27;timestamp&#x27;</span>),</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> Null = types.null</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Null.__tostring</span><span class=\"params\">()</span></span> <span class=\"keyword\">return</span> <span class=\"string\">&#x27;yaml.null&#x27;</span> <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Null.isnull</span><span class=\"params\">(v)</span></span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> v == <span class=\"literal\">nil</span> <span class=\"keyword\">then</span> <span class=\"keyword\">return</span> <span class=\"literal\">true</span> <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"built_in\">type</span>(v) == <span class=\"string\">&#x27;table&#x27;</span> <span class=\"keyword\">and</span> <span class=\"built_in\">getmetatable</span>(v) == Null <span class=\"keyword\">then</span> <span class=\"keyword\">return</span> <span class=\"literal\">true</span> <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> null = Null()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">types.timestamp:__init</span><span class=\"params\">(y, m, d, h, i, s, f, z)</span></span></span><br><span class=\"line\">  <span class=\"built_in\">self</span>.year = <span class=\"built_in\">tonumber</span>(y)</span><br><span class=\"line\">  <span class=\"built_in\">self</span>.month = <span class=\"built_in\">tonumber</span>(m)</span><br><span class=\"line\">  <span class=\"built_in\">self</span>.day = <span class=\"built_in\">tonumber</span>(d)</span><br><span class=\"line\">  <span class=\"built_in\">self</span>.hour = <span class=\"built_in\">tonumber</span>(h <span class=\"keyword\">or</span> <span class=\"number\">0</span>)</span><br><span class=\"line\">  <span class=\"built_in\">self</span>.minute = <span class=\"built_in\">tonumber</span>(i <span class=\"keyword\">or</span> <span class=\"number\">0</span>)</span><br><span class=\"line\">  <span class=\"built_in\">self</span>.second = <span class=\"built_in\">tonumber</span>(s <span class=\"keyword\">or</span> <span class=\"number\">0</span>)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"built_in\">type</span>(f) == <span class=\"string\">&#x27;string&#x27;</span> <span class=\"keyword\">and</span> sfind(f, <span class=\"string\">&#x27;^%d+$&#x27;</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">self</span>.fraction = <span class=\"built_in\">tonumber</span>(f) * <span class=\"built_in\">math</span>.<span class=\"built_in\">pow</span>(<span class=\"number\">10</span>, <span class=\"number\">3</span> - #f)</span><br><span class=\"line\">  <span class=\"keyword\">elseif</span> f <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">self</span>.fraction = f</span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">self</span>.fraction = <span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"built_in\">self</span>.timezone = z</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">types.timestamp:__tostring</span><span class=\"params\">()</span></span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">string</span>.<span class=\"built_in\">format</span>(</span><br><span class=\"line\">    <span class=\"string\">&#x27;%04d-%02d-%02dT%02d:%02d:%02d.%03d%s&#x27;</span>,</span><br><span class=\"line\">    <span class=\"built_in\">self</span>.year, <span class=\"built_in\">self</span>.month, <span class=\"built_in\">self</span>.day,</span><br><span class=\"line\">    <span class=\"built_in\">self</span>.hour, <span class=\"built_in\">self</span>.minute, <span class=\"built_in\">self</span>.second, <span class=\"built_in\">self</span>.fraction,</span><br><span class=\"line\">    <span class=\"built_in\">self</span>:gettz())</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">types.timestamp:gettz</span><span class=\"params\">()</span></span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> <span class=\"built_in\">self</span>.timezone <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"built_in\">self</span>.timezone == <span class=\"number\">0</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Z&#x27;</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">local</span> sign = <span class=\"built_in\">self</span>.timezone &gt; <span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"keyword\">local</span> z = sign <span class=\"keyword\">and</span> <span class=\"built_in\">self</span>.timezone <span class=\"keyword\">or</span> -<span class=\"built_in\">self</span>.timezone</span><br><span class=\"line\">  <span class=\"keyword\">local</span> zh = <span class=\"built_in\">math</span>.<span class=\"built_in\">floor</span>(z)</span><br><span class=\"line\">  <span class=\"keyword\">local</span> zi = (z - zh) * <span class=\"number\">60</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">string</span>.<span class=\"built_in\">format</span>(</span><br><span class=\"line\">    <span class=\"string\">&#x27;%s%02d:%02d&#x27;</span>, sign <span class=\"keyword\">and</span> <span class=\"string\">&#x27;+&#x27;</span> <span class=\"keyword\">or</span> <span class=\"string\">&#x27;-&#x27;</span>, zh, zi)</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">countindent</span><span class=\"params\">(line)</span></span></span><br><span class=\"line\">  <span class=\"keyword\">local</span> _, j = sfind(line, <span class=\"string\">&#x27;^%s+&#x27;</span>)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> j <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>, line</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> j, ssub(line, j+<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">parsestring</span><span class=\"params\">(line, stopper)</span></span></span><br><span class=\"line\">  stopper = stopper <span class=\"keyword\">or</span> <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">  <span class=\"keyword\">local</span> q = ssub(line, <span class=\"number\">1</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> q == <span class=\"string\">&#x27; &#x27;</span> <span class=\"keyword\">or</span> q == <span class=\"string\">&#x27;\\t&#x27;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> parsestring(ssub(line, <span class=\"number\">2</span>))</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> q == <span class=\"string\">&quot;&#x27;&quot;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> i = sfind(line, <span class=\"string\">&quot;&#x27;&quot;</span>, <span class=\"number\">2</span>, <span class=\"literal\">true</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> i <span class=\"keyword\">then</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">nil</span>, line</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> ssub(line, <span class=\"number\">2</span>, i<span class=\"number\">-1</span>), ssub(line, i+<span class=\"number\">1</span>)</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> q == <span class=\"string\">&#x27;&quot;&#x27;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> i, buf = <span class=\"number\">2</span>, <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> i &lt; #line <span class=\"keyword\">do</span></span><br><span class=\"line\">      <span class=\"keyword\">local</span> c = ssub(line, i, i)</span><br><span class=\"line\">      <span class=\"keyword\">if</span> c == <span class=\"string\">&#x27;\\\\&#x27;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">local</span> n = ssub(line, i+<span class=\"number\">1</span>, i+<span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> UNESCAPES[n] ~= <span class=\"literal\">nil</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">          buf = buf..UNESCAPES[n]</span><br><span class=\"line\">        <span class=\"keyword\">elseif</span> n == <span class=\"string\">&#x27;x&#x27;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">          <span class=\"keyword\">local</span> h = ssub(i+<span class=\"number\">2</span>,i+<span class=\"number\">3</span>)</span><br><span class=\"line\">          <span class=\"keyword\">if</span> sfind(h, <span class=\"string\">&#x27;^[0-9a-fA-F]$&#x27;</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">            buf = buf..schar(<span class=\"built_in\">tonumber</span>(h, <span class=\"number\">16</span>))</span><br><span class=\"line\">            i = i + <span class=\"number\">2</span></span><br><span class=\"line\">          <span class=\"keyword\">else</span></span><br><span class=\"line\">            buf = buf..<span class=\"string\">&#x27;x&#x27;</span></span><br><span class=\"line\">          <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">          buf = buf..n</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        i = i + <span class=\"number\">1</span></span><br><span class=\"line\">      <span class=\"keyword\">elseif</span> c == q <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">      <span class=\"keyword\">else</span></span><br><span class=\"line\">        buf = buf..c</span><br><span class=\"line\">      <span class=\"keyword\">end</span></span><br><span class=\"line\">      i = i + <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> buf, ssub(line, i+<span class=\"number\">1</span>)</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> q == <span class=\"string\">&#x27;&#123;&#x27;</span> <span class=\"keyword\">or</span> q == <span class=\"string\">&#x27;[&#x27;</span> <span class=\"keyword\">then</span>  <span class=\"comment\">-- flow style</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">nil</span>, line</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> q == <span class=\"string\">&#x27;|&#x27;</span> <span class=\"keyword\">or</span> q == <span class=\"string\">&#x27;&gt;&#x27;</span> <span class=\"keyword\">then</span>  <span class=\"comment\">-- block</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">nil</span>, line</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> q == <span class=\"string\">&#x27;-&#x27;</span> <span class=\"keyword\">or</span> q == <span class=\"string\">&#x27;:&#x27;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ssub(line, <span class=\"number\">2</span>, <span class=\"number\">2</span>) == <span class=\"string\">&#x27; &#x27;</span> <span class=\"keyword\">or</span> #line == <span class=\"number\">1</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">nil</span>, line</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">local</span> buf = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">  <span class=\"keyword\">while</span> #line &gt; <span class=\"number\">0</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> c = ssub(line, <span class=\"number\">1</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> sfind(stopper, c, <span class=\"number\">1</span>, <span class=\"literal\">true</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">      <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> c == <span class=\"string\">&#x27;:&#x27;</span> <span class=\"keyword\">and</span> (ssub(line, <span class=\"number\">2</span>, <span class=\"number\">2</span>) == <span class=\"string\">&#x27; &#x27;</span> <span class=\"keyword\">or</span> #line == <span class=\"number\">1</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">      <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> c == <span class=\"string\">&#x27;#&#x27;</span> <span class=\"keyword\">and</span> (ssub(buf, #buf, #buf) == <span class=\"string\">&#x27; &#x27;</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">      <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">      buf = buf..c</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    line = ssub(line, <span class=\"number\">2</span>)</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> rtrim(buf), line</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isemptyline</span><span class=\"params\">(line)</span></span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> line == <span class=\"string\">&#x27;&#x27;</span> <span class=\"keyword\">or</span> sfind(line, <span class=\"string\">&#x27;^%s*$&#x27;</span>) <span class=\"keyword\">or</span> sfind(line, <span class=\"string\">&#x27;^%s*#&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">equalsline</span><span class=\"params\">(line, needle)</span></span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> startswith(line, needle) <span class=\"keyword\">and</span> isemptyline(ssub(line, #needle+<span class=\"number\">1</span>))</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkdupekey</span><span class=\"params\">(map, key)</span></span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> map[key] ~= <span class=\"literal\">nil</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"comment\">-- print(&quot;found a duplicate key &#x27;&quot;..key..&quot;&#x27; in line: &quot;..line)</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> suffix = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> map[key..<span class=\"string\">&#x27;_&#x27;</span>..suffix] <span class=\"keyword\">do</span></span><br><span class=\"line\">      suffix = suffix + <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    key = key ..<span class=\"string\">&#x27;_&#x27;</span>..suffix</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> key</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">parseflowstyle</span><span class=\"params\">(line, lines)</span></span></span><br><span class=\"line\">  <span class=\"keyword\">local</span> stack = &#123;&#125;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> <span class=\"literal\">true</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> #line == <span class=\"number\">0</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> #<span class=\"built_in\">lines</span> == <span class=\"number\">0</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">      <span class=\"keyword\">else</span></span><br><span class=\"line\">        line = tremove(<span class=\"built_in\">lines</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">      <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> c = ssub(line, <span class=\"number\">1</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> c == <span class=\"string\">&#x27;#&#x27;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">      line = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> c == <span class=\"string\">&#x27; &#x27;</span> <span class=\"keyword\">or</span> c == <span class=\"string\">&#x27;\\t&#x27;</span> <span class=\"keyword\">or</span> c == <span class=\"string\">&#x27;\\r&#x27;</span> <span class=\"keyword\">or</span> c == <span class=\"string\">&#x27;\\n&#x27;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">      line = ssub(line, <span class=\"number\">2</span>)</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> c == <span class=\"string\">&#x27;&#123;&#x27;</span> <span class=\"keyword\">or</span> c == <span class=\"string\">&#x27;[&#x27;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">      tinsert(stack, &#123;v=&#123;&#125;,t=c&#125;)</span><br><span class=\"line\">      line = ssub(line, <span class=\"number\">2</span>)</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> c == <span class=\"string\">&#x27;:&#x27;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">      <span class=\"keyword\">local</span> s = tremove(stack)</span><br><span class=\"line\">      tinsert(stack, &#123;v=s.v, t=<span class=\"string\">&#x27;:&#x27;</span>&#125;)</span><br><span class=\"line\">      line = ssub(line, <span class=\"number\">2</span>)</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> c == <span class=\"string\">&#x27;,&#x27;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">      <span class=\"keyword\">local</span> value = tremove(stack)</span><br><span class=\"line\">      <span class=\"keyword\">if</span> value.t == <span class=\"string\">&#x27;:&#x27;</span> <span class=\"keyword\">or</span> value.t == <span class=\"string\">&#x27;&#123;&#x27;</span> <span class=\"keyword\">or</span> value.t == <span class=\"string\">&#x27;[&#x27;</span> <span class=\"keyword\">then</span> <span class=\"built_in\">error</span>() <span class=\"keyword\">end</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> stack[#stack].t == <span class=\"string\">&#x27;:&#x27;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"comment\">-- map</span></span><br><span class=\"line\">        <span class=\"keyword\">local</span> key = tremove(stack)</span><br><span class=\"line\">        key.v = checkdupekey(stack[#stack].v, key.v)</span><br><span class=\"line\">        stack[#stack].v[key.v] = value.v</span><br><span class=\"line\">      <span class=\"keyword\">elseif</span> stack[#stack].t == <span class=\"string\">&#x27;&#123;&#x27;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"comment\">-- set</span></span><br><span class=\"line\">        stack[#stack].v[value.v] = <span class=\"literal\">true</span></span><br><span class=\"line\">      <span class=\"keyword\">elseif</span> stack[#stack].t == <span class=\"string\">&#x27;[&#x27;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"comment\">-- seq</span></span><br><span class=\"line\">        tinsert(stack[#stack].v, value.v)</span><br><span class=\"line\">      <span class=\"keyword\">end</span></span><br><span class=\"line\">      line = ssub(line, <span class=\"number\">2</span>)</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> c == <span class=\"string\">&#x27;&#125;&#x27;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> stack[#stack].t == <span class=\"string\">&#x27;&#123;&#x27;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> #stack == <span class=\"number\">1</span> <span class=\"keyword\">then</span> <span class=\"keyword\">break</span> <span class=\"keyword\">end</span></span><br><span class=\"line\">        stack[#stack].t = <span class=\"string\">&#x27;&#125;&#x27;</span></span><br><span class=\"line\">        line = ssub(line, <span class=\"number\">2</span>)</span><br><span class=\"line\">      <span class=\"keyword\">else</span></span><br><span class=\"line\">        line = <span class=\"string\">&#x27;,&#x27;</span>..line</span><br><span class=\"line\">      <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> c == <span class=\"string\">&#x27;]&#x27;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> stack[#stack].t == <span class=\"string\">&#x27;[&#x27;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> #stack == <span class=\"number\">1</span> <span class=\"keyword\">then</span> <span class=\"keyword\">break</span> <span class=\"keyword\">end</span></span><br><span class=\"line\">        stack[#stack].t = <span class=\"string\">&#x27;]&#x27;</span></span><br><span class=\"line\">        line = ssub(line, <span class=\"number\">2</span>)</span><br><span class=\"line\">      <span class=\"keyword\">else</span></span><br><span class=\"line\">        line = <span class=\"string\">&#x27;,&#x27;</span>..line</span><br><span class=\"line\">      <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">      <span class=\"keyword\">local</span> s, rest = parsestring(line, <span class=\"string\">&#x27;,&#123;&#125;[]&#x27;</span>)</span><br><span class=\"line\">      <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> s <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">error</span>(<span class=\"string\">&#x27;invalid flowstyle line: &#x27;</span>..line)</span><br><span class=\"line\">      <span class=\"keyword\">end</span></span><br><span class=\"line\">      tinsert(stack, &#123;v=s, t=<span class=\"string\">&#x27;s&#x27;</span>&#125;)</span><br><span class=\"line\">      line = rest</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> stack[<span class=\"number\">1</span>].v, line</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">parseblockstylestring</span><span class=\"params\">(line, lines, indent)</span></span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> #<span class=\"built_in\">lines</span> == <span class=\"number\">0</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">error</span>(<span class=\"string\">&quot;failed to find multi-line scalar content&quot;</span>)</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">local</span> s = &#123;&#125;</span><br><span class=\"line\">  <span class=\"keyword\">local</span> firstindent = <span class=\"number\">-1</span></span><br><span class=\"line\">  <span class=\"keyword\">local</span> endline = <span class=\"number\">-1</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> i = <span class=\"number\">1</span>, #<span class=\"built_in\">lines</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> ln = <span class=\"built_in\">lines</span>[i]</span><br><span class=\"line\">    <span class=\"keyword\">local</span> idt = countindent(ln)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> idt &lt;= indent <span class=\"keyword\">then</span></span><br><span class=\"line\">      <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ln == <span class=\"string\">&#x27;&#x27;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">      tinsert(s, <span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> firstindent == <span class=\"number\">-1</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">        firstindent = idt</span><br><span class=\"line\">      <span class=\"keyword\">elseif</span> idt &lt; firstindent <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">      <span class=\"keyword\">end</span></span><br><span class=\"line\">      tinsert(s, ssub(ln, firstindent + <span class=\"number\">1</span>))</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    endline = i</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">local</span> striptrailing = <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"keyword\">local</span> sep = <span class=\"string\">&#x27;\\n&#x27;</span></span><br><span class=\"line\">  <span class=\"keyword\">local</span> newlineatend = <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> line == <span class=\"string\">&#x27;|&#x27;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    striptrailing = <span class=\"literal\">true</span></span><br><span class=\"line\">    sep = <span class=\"string\">&#x27;\\n&#x27;</span></span><br><span class=\"line\">    newlineatend = <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"keyword\">elseif</span> line == <span class=\"string\">&#x27;|+&#x27;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    striptrailing = <span class=\"literal\">false</span></span><br><span class=\"line\">    sep = <span class=\"string\">&#x27;\\n&#x27;</span></span><br><span class=\"line\">    newlineatend = <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"keyword\">elseif</span> line == <span class=\"string\">&#x27;|-&#x27;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    striptrailing = <span class=\"literal\">true</span></span><br><span class=\"line\">    sep = <span class=\"string\">&#x27;\\n&#x27;</span></span><br><span class=\"line\">    newlineatend = <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"keyword\">elseif</span> line == <span class=\"string\">&#x27;&gt;&#x27;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    striptrailing = <span class=\"literal\">true</span></span><br><span class=\"line\">    sep = <span class=\"string\">&#x27; &#x27;</span></span><br><span class=\"line\">    newlineatend = <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"keyword\">elseif</span> line == <span class=\"string\">&#x27;&gt;+&#x27;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    striptrailing = <span class=\"literal\">false</span></span><br><span class=\"line\">    sep = <span class=\"string\">&#x27; &#x27;</span></span><br><span class=\"line\">    newlineatend = <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"keyword\">elseif</span> line == <span class=\"string\">&#x27;&gt;-&#x27;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    striptrailing = <span class=\"literal\">true</span></span><br><span class=\"line\">    sep = <span class=\"string\">&#x27; &#x27;</span></span><br><span class=\"line\">    newlineatend = <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">error</span>(<span class=\"string\">&#x27;invalid blockstyle string:&#x27;</span>..line)</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">local</span> eonl = <span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> i = #s, <span class=\"number\">1</span>, <span class=\"number\">-1</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> s[i] == <span class=\"string\">&#x27;&#x27;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">      tremove(s, i)</span><br><span class=\"line\">      eonl = eonl + <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> striptrailing <span class=\"keyword\">then</span></span><br><span class=\"line\">    eonl = <span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> newlineatend <span class=\"keyword\">then</span></span><br><span class=\"line\">    eonl = eonl + <span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> i = endline, <span class=\"number\">1</span>, <span class=\"number\">-1</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">    tremove(<span class=\"built_in\">lines</span>, i)</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">table</span>.<span class=\"built_in\">concat</span>(s, sep)..<span class=\"built_in\">string</span>.<span class=\"built_in\">rep</span>(<span class=\"string\">&#x27;\\n&#x27;</span>, eonl)</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">parsetimestamp</span><span class=\"params\">(line)</span></span></span><br><span class=\"line\">  <span class=\"keyword\">local</span> _, p1, y, m, d = sfind(line, <span class=\"string\">&#x27;^(%d%d%d%d)%-(%d%d)%-(%d%d)&#x27;</span>)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> p1 <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">nil</span>, line</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> p1 == #line <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> types.timestamp(y, m, d), <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">local</span> _, p2, h, i, s = sfind(line, <span class=\"string\">&#x27;^[Tt ](%d+):(%d+):(%d+)&#x27;</span>, p1+<span class=\"number\">1</span>)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> p2 <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> types.timestamp(y, m, d), ssub(line, p1+<span class=\"number\">1</span>)</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> p2 == #line <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> types.timestamp(y, m, d, h, i, s), <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">local</span> _, p3, f = sfind(line, <span class=\"string\">&#x27;^%.(%d+)&#x27;</span>, p2+<span class=\"number\">1</span>)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> p3 <span class=\"keyword\">then</span></span><br><span class=\"line\">    p3 = p2</span><br><span class=\"line\">    f = <span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">local</span> zc = ssub(line, p3+<span class=\"number\">1</span>, p3+<span class=\"number\">1</span>)</span><br><span class=\"line\">  <span class=\"keyword\">local</span> _, p4, zs, z = sfind(line, <span class=\"string\">&#x27;^ ?([%+%-])(%d+)&#x27;</span>, p3+<span class=\"number\">1</span>)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> p4 <span class=\"keyword\">then</span></span><br><span class=\"line\">    z = <span class=\"built_in\">tonumber</span>(z)</span><br><span class=\"line\">    <span class=\"keyword\">local</span> _, p5, zi = sfind(line, <span class=\"string\">&#x27;^:(%d+)&#x27;</span>, p4+<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> p5 <span class=\"keyword\">then</span></span><br><span class=\"line\">      z = z + <span class=\"built_in\">tonumber</span>(zi) / <span class=\"number\">60</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    z = zs == <span class=\"string\">&#x27;-&#x27;</span> <span class=\"keyword\">and</span> -<span class=\"built_in\">tonumber</span>(z) <span class=\"keyword\">or</span> <span class=\"built_in\">tonumber</span>(z)</span><br><span class=\"line\">  <span class=\"keyword\">elseif</span> zc == <span class=\"string\">&#x27;Z&#x27;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    p4 = p3 + <span class=\"number\">1</span></span><br><span class=\"line\">    z = <span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">    p4 = p3</span><br><span class=\"line\">    z = <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> types.timestamp(y, m, d, h, i, s, f, z), ssub(line, p4+<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">parsescalar</span><span class=\"params\">(line, lines, indent)</span></span></span><br><span class=\"line\">  line = ltrim(line)</span><br><span class=\"line\">  line = <span class=\"built_in\">gsub</span>(line, <span class=\"string\">&#x27;^%s*#.*$&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>)  <span class=\"comment\">-- comment only -&gt; &#x27;&#x27;</span></span><br><span class=\"line\">  line = <span class=\"built_in\">gsub</span>(line, <span class=\"string\">&#x27;^%s*&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>)  <span class=\"comment\">-- trim head spaces</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> line == <span class=\"string\">&#x27;&#x27;</span> <span class=\"keyword\">or</span> line == <span class=\"string\">&#x27;~&#x27;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> null</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">local</span> ts, _ = parsetimestamp(line)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ts <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> ts</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">local</span> s, _ = parsestring(line)</span><br><span class=\"line\">  <span class=\"comment\">-- startswith quote ... string</span></span><br><span class=\"line\">  <span class=\"comment\">-- not startswith quote ... maybe string</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> s <span class=\"keyword\">and</span> (startswith(line, <span class=\"string\">&#x27;&quot;&#x27;</span>) <span class=\"keyword\">or</span> startswith(line, <span class=\"string\">&quot;&#x27;&quot;</span>)) <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> s</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> startswith(<span class=\"string\">&#x27;!&#x27;</span>, line) <span class=\"keyword\">then</span>  <span class=\"comment\">-- unexpected tagchar</span></span><br><span class=\"line\">    <span class=\"built_in\">error</span>(<span class=\"string\">&#x27;unsupported line: &#x27;</span>..line)</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> equalsline(line, <span class=\"string\">&#x27;&#123;&#125;&#x27;</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;&#125;</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> equalsline(line, <span class=\"string\">&#x27;[]&#x27;</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;&#125;</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> startswith(line, <span class=\"string\">&#x27;&#123;&#x27;</span>) <span class=\"keyword\">or</span> startswith(line, <span class=\"string\">&#x27;[&#x27;</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> parseflowstyle(line, <span class=\"built_in\">lines</span>)</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> startswith(line, <span class=\"string\">&#x27;|&#x27;</span>) <span class=\"keyword\">or</span> startswith(line, <span class=\"string\">&#x27;&gt;&#x27;</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> parseblockstylestring(line, <span class=\"built_in\">lines</span>, indent)</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">-- Regular unquoted string</span></span><br><span class=\"line\">  line = <span class=\"built_in\">gsub</span>(line, <span class=\"string\">&#x27;%s*#.*$&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>)  <span class=\"comment\">-- trim tail comment</span></span><br><span class=\"line\">  <span class=\"keyword\">local</span> v = line</span><br><span class=\"line\">  <span class=\"keyword\">if</span> v == <span class=\"string\">&#x27;null&#x27;</span> <span class=\"keyword\">or</span> v == <span class=\"string\">&#x27;Null&#x27;</span> <span class=\"keyword\">or</span> v == <span class=\"string\">&#x27;NULL&#x27;</span><span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> null</span><br><span class=\"line\">  <span class=\"keyword\">elseif</span> v == <span class=\"string\">&#x27;true&#x27;</span> <span class=\"keyword\">or</span> v == <span class=\"string\">&#x27;True&#x27;</span> <span class=\"keyword\">or</span> v == <span class=\"string\">&#x27;TRUE&#x27;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"keyword\">elseif</span> v == <span class=\"string\">&#x27;false&#x27;</span> <span class=\"keyword\">or</span> v == <span class=\"string\">&#x27;False&#x27;</span> <span class=\"keyword\">or</span> v == <span class=\"string\">&#x27;FALSE&#x27;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"keyword\">elseif</span> v == <span class=\"string\">&#x27;.inf&#x27;</span> <span class=\"keyword\">or</span> v == <span class=\"string\">&#x27;.Inf&#x27;</span> <span class=\"keyword\">or</span> v == <span class=\"string\">&#x27;.INF&#x27;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">math</span>.<span class=\"built_in\">huge</span></span><br><span class=\"line\">  <span class=\"keyword\">elseif</span> v == <span class=\"string\">&#x27;+.inf&#x27;</span> <span class=\"keyword\">or</span> v == <span class=\"string\">&#x27;+.Inf&#x27;</span> <span class=\"keyword\">or</span> v == <span class=\"string\">&#x27;+.INF&#x27;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">math</span>.<span class=\"built_in\">huge</span></span><br><span class=\"line\">  <span class=\"keyword\">elseif</span> v == <span class=\"string\">&#x27;-.inf&#x27;</span> <span class=\"keyword\">or</span> v == <span class=\"string\">&#x27;-.Inf&#x27;</span> <span class=\"keyword\">or</span> v == <span class=\"string\">&#x27;-.INF&#x27;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> -<span class=\"built_in\">math</span>.<span class=\"built_in\">huge</span></span><br><span class=\"line\">  <span class=\"keyword\">elseif</span> v == <span class=\"string\">&#x27;.nan&#x27;</span> <span class=\"keyword\">or</span> v == <span class=\"string\">&#x27;.NaN&#x27;</span> <span class=\"keyword\">or</span> v == <span class=\"string\">&#x27;.NAN&#x27;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span> / <span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"keyword\">elseif</span> sfind(v, <span class=\"string\">&#x27;^[%+%-]?[0-9]+$&#x27;</span>) <span class=\"keyword\">or</span> sfind(v, <span class=\"string\">&#x27;^[%+%-]?[0-9]+%.$&#x27;</span>)<span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">tonumber</span>(v)  <span class=\"comment\">-- : int</span></span><br><span class=\"line\">  <span class=\"keyword\">elseif</span> sfind(v, <span class=\"string\">&#x27;^[%+%-]?[0-9]+%.[0-9]+$&#x27;</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">tonumber</span>(v)</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> s <span class=\"keyword\">or</span> v</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> parsemap;  <span class=\"comment\">-- : func</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">parseseq</span><span class=\"params\">(line, lines, indent)</span></span></span><br><span class=\"line\">  <span class=\"keyword\">local</span> seq = <span class=\"built_in\">setmetatable</span>(&#123;&#125;, types.seq)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> line ~= <span class=\"string\">&#x27;&#x27;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">error</span>()</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">while</span> #<span class=\"built_in\">lines</span> &gt; <span class=\"number\">0</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"comment\">-- Check for a new document</span></span><br><span class=\"line\">    line = <span class=\"built_in\">lines</span>[<span class=\"number\">1</span>]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> startswith(line, <span class=\"string\">&#x27;---&#x27;</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">      <span class=\"keyword\">while</span> #<span class=\"built_in\">lines</span> &gt; <span class=\"number\">0</span> <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> startswith(<span class=\"built_in\">lines</span>, <span class=\"string\">&#x27;---&#x27;</span>) <span class=\"keyword\">do</span></span><br><span class=\"line\">        tremove(<span class=\"built_in\">lines</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">      <span class=\"keyword\">end</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> seq</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">-- Check the indent level</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> level = countindent(line)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> level &lt; indent <span class=\"keyword\">then</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> seq</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> level &gt; indent <span class=\"keyword\">then</span></span><br><span class=\"line\">      <span class=\"built_in\">error</span>(<span class=\"string\">&quot;found bad indenting in line: &quot;</span>.. line)</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">local</span> i, j = sfind(line, <span class=\"string\">&#x27;%-%s+&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> i <span class=\"keyword\">then</span></span><br><span class=\"line\">      i, j = sfind(line, <span class=\"string\">&#x27;%-$&#x27;</span>)</span><br><span class=\"line\">      <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> i <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> seq</span><br><span class=\"line\">      <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> rest = ssub(line, j+<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> sfind(rest, <span class=\"string\">&#x27;^[^\\&#x27;\\&quot;%s]*:&#x27;</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">      <span class=\"comment\">-- Inline nested hash</span></span><br><span class=\"line\">      <span class=\"keyword\">local</span> indent2 = j</span><br><span class=\"line\">      <span class=\"built_in\">lines</span>[<span class=\"number\">1</span>] = <span class=\"built_in\">string</span>.<span class=\"built_in\">rep</span>(<span class=\"string\">&#x27; &#x27;</span>, indent2)..rest</span><br><span class=\"line\">      tinsert(seq, parsemap(<span class=\"string\">&#x27;&#x27;</span>, <span class=\"built_in\">lines</span>, indent2))</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> sfind(rest, <span class=\"string\">&#x27;^%-%s+&#x27;</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">      <span class=\"comment\">-- Inline nested seq</span></span><br><span class=\"line\">      <span class=\"keyword\">local</span> indent2 = j</span><br><span class=\"line\">      <span class=\"built_in\">lines</span>[<span class=\"number\">1</span>] = <span class=\"built_in\">string</span>.<span class=\"built_in\">rep</span>(<span class=\"string\">&#x27; &#x27;</span>, indent2)..rest</span><br><span class=\"line\">      tinsert(seq, parseseq(<span class=\"string\">&#x27;&#x27;</span>, <span class=\"built_in\">lines</span>, indent2))</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> isemptyline(rest) <span class=\"keyword\">then</span></span><br><span class=\"line\">      tremove(<span class=\"built_in\">lines</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">      <span class=\"keyword\">if</span> #<span class=\"built_in\">lines</span> == <span class=\"number\">0</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">        tinsert(seq, null)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> seq</span><br><span class=\"line\">      <span class=\"keyword\">end</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> sfind(<span class=\"built_in\">lines</span>[<span class=\"number\">1</span>], <span class=\"string\">&#x27;^%s*%-&#x27;</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">local</span> nextline = <span class=\"built_in\">lines</span>[<span class=\"number\">1</span>]</span><br><span class=\"line\">        <span class=\"keyword\">local</span> indent2 = countindent(nextline)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> indent2 == indent <span class=\"keyword\">then</span></span><br><span class=\"line\">          <span class=\"comment\">-- Null seqay entry</span></span><br><span class=\"line\">          tinsert(seq, null)</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">          tinsert(seq, parseseq(<span class=\"string\">&#x27;&#x27;</span>, <span class=\"built_in\">lines</span>, indent2))</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">      <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"comment\">-- - # comment</span></span><br><span class=\"line\">        <span class=\"comment\">--   key: value</span></span><br><span class=\"line\">        <span class=\"keyword\">local</span> nextline = <span class=\"built_in\">lines</span>[<span class=\"number\">1</span>]</span><br><span class=\"line\">        <span class=\"keyword\">local</span> indent2 = countindent(nextline)</span><br><span class=\"line\">        tinsert(seq, parsemap(<span class=\"string\">&#x27;&#x27;</span>, <span class=\"built_in\">lines</span>, indent2))</span><br><span class=\"line\">      <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> rest <span class=\"keyword\">then</span></span><br><span class=\"line\">      <span class=\"comment\">-- Array entry with a value</span></span><br><span class=\"line\">      tremove(<span class=\"built_in\">lines</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">      tinsert(seq, parsescalar(rest, <span class=\"built_in\">lines</span>))</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> seq</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">parseset</span><span class=\"params\">(line, lines, indent)</span></span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> isemptyline(line) <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">error</span>(<span class=\"string\">&#x27;not seq line: &#x27;</span>..line)</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">local</span> set = <span class=\"built_in\">setmetatable</span>(&#123;&#125;, types.set)</span><br><span class=\"line\">  <span class=\"keyword\">while</span> #<span class=\"built_in\">lines</span> &gt; <span class=\"number\">0</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"comment\">-- Check for a new document</span></span><br><span class=\"line\">    line = <span class=\"built_in\">lines</span>[<span class=\"number\">1</span>]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> startswith(line, <span class=\"string\">&#x27;---&#x27;</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">      <span class=\"keyword\">while</span> #<span class=\"built_in\">lines</span> &gt; <span class=\"number\">0</span> <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> startswith(<span class=\"built_in\">lines</span>, <span class=\"string\">&#x27;---&#x27;</span>) <span class=\"keyword\">do</span></span><br><span class=\"line\">        tremove(<span class=\"built_in\">lines</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">      <span class=\"keyword\">end</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> set</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">-- Check the indent level</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> level = countindent(line)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> level &lt; indent <span class=\"keyword\">then</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> set</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> level &gt; indent <span class=\"keyword\">then</span></span><br><span class=\"line\">      <span class=\"built_in\">error</span>(<span class=\"string\">&quot;found bad indenting in line: &quot;</span>.. line)</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">local</span> i, j = sfind(line, <span class=\"string\">&#x27;%?%s+&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> i <span class=\"keyword\">then</span></span><br><span class=\"line\">      i, j = sfind(line, <span class=\"string\">&#x27;%?$&#x27;</span>)</span><br><span class=\"line\">      <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> i <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> set</span><br><span class=\"line\">      <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> rest = ssub(line, j+<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> sfind(rest, <span class=\"string\">&#x27;^[^\\&#x27;\\&quot;%s]*:&#x27;</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">      <span class=\"comment\">-- Inline nested hash</span></span><br><span class=\"line\">      <span class=\"keyword\">local</span> indent2 = j</span><br><span class=\"line\">      <span class=\"built_in\">lines</span>[<span class=\"number\">1</span>] = <span class=\"built_in\">string</span>.<span class=\"built_in\">rep</span>(<span class=\"string\">&#x27; &#x27;</span>, indent2)..rest</span><br><span class=\"line\">      set[parsemap(<span class=\"string\">&#x27;&#x27;</span>, <span class=\"built_in\">lines</span>, indent2)] = <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> sfind(rest, <span class=\"string\">&#x27;^%s+$&#x27;</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">      tremove(<span class=\"built_in\">lines</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">      <span class=\"keyword\">if</span> #<span class=\"built_in\">lines</span> == <span class=\"number\">0</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">        tinsert(set, null)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> set</span><br><span class=\"line\">      <span class=\"keyword\">end</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> sfind(<span class=\"built_in\">lines</span>[<span class=\"number\">1</span>], <span class=\"string\">&#x27;^%s*%?&#x27;</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">local</span> indent2 = countindent(<span class=\"built_in\">lines</span>[<span class=\"number\">1</span>])</span><br><span class=\"line\">        <span class=\"keyword\">if</span> indent2 == indent <span class=\"keyword\">then</span></span><br><span class=\"line\">          <span class=\"comment\">-- Null array entry</span></span><br><span class=\"line\">          set[null] = <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">          set[parseseq(<span class=\"string\">&#x27;&#x27;</span>, <span class=\"built_in\">lines</span>, indent2)] = <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">      <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> rest <span class=\"keyword\">then</span></span><br><span class=\"line\">      tremove(<span class=\"built_in\">lines</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">      set[parsescalar(rest, <span class=\"built_in\">lines</span>)] = <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">      <span class=\"built_in\">error</span>(<span class=\"string\">&quot;failed to classify line: &quot;</span>..line)</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> set</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">parsemap</span><span class=\"params\">(line, lines, indent)</span></span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> isemptyline(line) <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">error</span>(<span class=\"string\">&#x27;not map line: &#x27;</span>..line)</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">local</span> map = <span class=\"built_in\">setmetatable</span>(&#123;&#125;, types.map)</span><br><span class=\"line\">  <span class=\"keyword\">while</span> #<span class=\"built_in\">lines</span> &gt; <span class=\"number\">0</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"comment\">-- Check for a new document</span></span><br><span class=\"line\">    line = <span class=\"built_in\">lines</span>[<span class=\"number\">1</span>]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> startswith(line, <span class=\"string\">&#x27;---&#x27;</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">      <span class=\"keyword\">while</span> #<span class=\"built_in\">lines</span> &gt; <span class=\"number\">0</span> <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> startswith(<span class=\"built_in\">lines</span>, <span class=\"string\">&#x27;---&#x27;</span>) <span class=\"keyword\">do</span></span><br><span class=\"line\">        tremove(<span class=\"built_in\">lines</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">      <span class=\"keyword\">end</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> map</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">-- Check the indent level</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> level, _ = countindent(line)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> level &lt; indent <span class=\"keyword\">then</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> map</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> level &gt; indent <span class=\"keyword\">then</span></span><br><span class=\"line\">      <span class=\"built_in\">error</span>(<span class=\"string\">&quot;found bad indenting in line: &quot;</span>.. line)</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">-- Find the key</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> key</span><br><span class=\"line\">    <span class=\"keyword\">local</span> s, rest = parsestring(line)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">-- Quoted keys</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> s <span class=\"keyword\">and</span> startswith(rest, <span class=\"string\">&#x27;:&#x27;</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">      <span class=\"keyword\">local</span> sc = parsescalar(s, &#123;&#125;, <span class=\"number\">0</span>)</span><br><span class=\"line\">      <span class=\"keyword\">if</span> sc <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(sc) ~= <span class=\"string\">&#x27;string&#x27;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">        key = sc</span><br><span class=\"line\">      <span class=\"keyword\">else</span></span><br><span class=\"line\">        key = s</span><br><span class=\"line\">      <span class=\"keyword\">end</span></span><br><span class=\"line\">      line = ssub(rest, <span class=\"number\">2</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">      <span class=\"built_in\">error</span>(<span class=\"string\">&quot;failed to classify line: &quot;</span>..line)</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    key = checkdupekey(map, key)</span><br><span class=\"line\">    line = ltrim(line)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ssub(line, <span class=\"number\">1</span>, <span class=\"number\">1</span>) == <span class=\"string\">&#x27;!&#x27;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">      <span class=\"comment\">-- ignore type</span></span><br><span class=\"line\">      <span class=\"keyword\">local</span> rh = ltrim(ssub(line, <span class=\"number\">3</span>))</span><br><span class=\"line\">      <span class=\"keyword\">local</span> typename = smatch(rh, <span class=\"string\">&#x27;^!?[^%s]+&#x27;</span>)</span><br><span class=\"line\">      line = ltrim(ssub(rh, #typename+<span class=\"number\">1</span>))</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> isemptyline(line) <span class=\"keyword\">then</span></span><br><span class=\"line\">      tremove(<span class=\"built_in\">lines</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">      line = ltrim(line)</span><br><span class=\"line\">      map[key] = parsescalar(line, <span class=\"built_in\">lines</span>, indent)</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">      <span class=\"comment\">-- An indent</span></span><br><span class=\"line\">      tremove(<span class=\"built_in\">lines</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">      <span class=\"keyword\">if</span> #<span class=\"built_in\">lines</span> == <span class=\"number\">0</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">        map[key] = null</span><br><span class=\"line\">        <span class=\"keyword\">return</span> map;</span><br><span class=\"line\">      <span class=\"keyword\">end</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> sfind(<span class=\"built_in\">lines</span>[<span class=\"number\">1</span>], <span class=\"string\">&#x27;^%s*%-&#x27;</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">local</span> indent2 = countindent(<span class=\"built_in\">lines</span>[<span class=\"number\">1</span>])</span><br><span class=\"line\">        map[key] = parseseq(<span class=\"string\">&#x27;&#x27;</span>, <span class=\"built_in\">lines</span>, indent2)</span><br><span class=\"line\">      <span class=\"keyword\">elseif</span> sfind(<span class=\"built_in\">lines</span>[<span class=\"number\">1</span>], <span class=\"string\">&#x27;^%s*%?&#x27;</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">local</span> indent2 = countindent(<span class=\"built_in\">lines</span>[<span class=\"number\">1</span>])</span><br><span class=\"line\">        map[key] = parseset(<span class=\"string\">&#x27;&#x27;</span>, <span class=\"built_in\">lines</span>, indent2)</span><br><span class=\"line\">      <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">local</span> indent2 = countindent(<span class=\"built_in\">lines</span>[<span class=\"number\">1</span>])</span><br><span class=\"line\">        <span class=\"keyword\">if</span> indent &gt;= indent2 <span class=\"keyword\">then</span></span><br><span class=\"line\">          <span class=\"comment\">-- Null hash entry</span></span><br><span class=\"line\">          map[key] = null</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">          map[key] = parsemap(<span class=\"string\">&#x27;&#x27;</span>, <span class=\"built_in\">lines</span>, indent2)</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">      <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> map</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- : (list&lt;str&gt;)-&gt;dict</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">parsedocuments</span><span class=\"params\">(lines)</span></span></span><br><span class=\"line\">  <span class=\"built_in\">lines</span> = <span class=\"built_in\">select</span>(<span class=\"built_in\">lines</span>, <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(s)</span></span> <span class=\"keyword\">return</span> <span class=\"keyword\">not</span> isemptyline(s) <span class=\"keyword\">end</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> sfind(<span class=\"built_in\">lines</span>[<span class=\"number\">1</span>], <span class=\"string\">&#x27;^%%YAML&#x27;</span>) <span class=\"keyword\">then</span> tremove(<span class=\"built_in\">lines</span>, <span class=\"number\">1</span>) <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">local</span> root = &#123;&#125;</span><br><span class=\"line\">  <span class=\"keyword\">local</span> in_document = <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"keyword\">while</span> #<span class=\"built_in\">lines</span> &gt; <span class=\"number\">0</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> line = <span class=\"built_in\">lines</span>[<span class=\"number\">1</span>]</span><br><span class=\"line\">    <span class=\"comment\">-- Do we have a document header?</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> docright;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> sfind(line, <span class=\"string\">&#x27;^%-%-%-&#x27;</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">      <span class=\"comment\">-- Handle scalar documents</span></span><br><span class=\"line\">      docright = ssub(line, <span class=\"number\">4</span>)</span><br><span class=\"line\">      tremove(<span class=\"built_in\">lines</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">      in_document = <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> docright <span class=\"keyword\">then</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">not</span> sfind(docright, <span class=\"string\">&#x27;^%s+$&#x27;</span>) <span class=\"keyword\">and</span></span><br><span class=\"line\">          <span class=\"keyword\">not</span> sfind(docright, <span class=\"string\">&#x27;^%s+#&#x27;</span>)) <span class=\"keyword\">then</span></span><br><span class=\"line\">        tinsert(root, parsescalar(docright, <span class=\"built_in\">lines</span>))</span><br><span class=\"line\">      <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> #<span class=\"built_in\">lines</span> == <span class=\"number\">0</span> <span class=\"keyword\">or</span> startswith(line, <span class=\"string\">&#x27;---&#x27;</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">      <span class=\"comment\">-- A naked document</span></span><br><span class=\"line\">      tinsert(root, null)</span><br><span class=\"line\">      <span class=\"keyword\">while</span> #<span class=\"built_in\">lines</span> &gt; <span class=\"number\">0</span> <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> sfind(<span class=\"built_in\">lines</span>[<span class=\"number\">1</span>], <span class=\"string\">&#x27;---&#x27;</span>) <span class=\"keyword\">do</span></span><br><span class=\"line\">        tremove(<span class=\"built_in\">lines</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">      <span class=\"keyword\">end</span></span><br><span class=\"line\">      in_document = <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"comment\">-- XXX The final &#x27;-+$&#x27; is to look for -- which ends up being an</span></span><br><span class=\"line\">    <span class=\"comment\">-- error later.</span></span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> <span class=\"keyword\">not</span> in_document <span class=\"keyword\">and</span> #root &gt; <span class=\"number\">0</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">      <span class=\"comment\">-- only the first document can be explicit</span></span><br><span class=\"line\">      <span class=\"built_in\">error</span>(<span class=\"string\">&#x27;parse error: &#x27;</span>..line)</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> sfind(line, <span class=\"string\">&#x27;^%s*%-&#x27;</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">      <span class=\"comment\">-- An array at the root</span></span><br><span class=\"line\">      tinsert(root, parseseq(<span class=\"string\">&#x27;&#x27;</span>, <span class=\"built_in\">lines</span>, <span class=\"number\">0</span>))</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> sfind(line, <span class=\"string\">&#x27;^%s*[^%s]&#x27;</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">      <span class=\"comment\">-- A hash at the root</span></span><br><span class=\"line\">      <span class=\"keyword\">local</span> level = countindent(line)</span><br><span class=\"line\">      tinsert(root, parsemap(<span class=\"string\">&#x27;&#x27;</span>, <span class=\"built_in\">lines</span>, level))</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">      <span class=\"comment\">-- Shouldn&#x27;t get here.  @lines have whitespace-only lines</span></span><br><span class=\"line\">      <span class=\"comment\">-- stripped, and previous match is a line with any</span></span><br><span class=\"line\">      <span class=\"comment\">-- non-whitespace.  So this clause should only be reachable via</span></span><br><span class=\"line\">      <span class=\"comment\">-- a perlbug where \\s is not symmetric with \\S</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">-- uncoverable statement</span></span><br><span class=\"line\">      <span class=\"built_in\">error</span>(<span class=\"string\">&#x27;parse error: &#x27;</span>..line)</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> #root &gt; <span class=\"number\">1</span> <span class=\"keyword\">and</span> Null.isnull(root[<span class=\"number\">1</span>]) <span class=\"keyword\">then</span></span><br><span class=\"line\">    tremove(root, <span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> root</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> root</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--- Parse yaml string into table.</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">parse</span><span class=\"params\">(source)</span></span></span><br><span class=\"line\">  <span class=\"keyword\">local</span> <span class=\"built_in\">lines</span> = &#123;&#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> <span class=\"built_in\">string</span>.<span class=\"built_in\">gmatch</span>(source .. <span class=\"string\">&#x27;\\n&#x27;</span>, <span class=\"string\">&#x27;(.-)\\r?\\n&#x27;</span>) <span class=\"keyword\">do</span></span><br><span class=\"line\">    tinsert(<span class=\"built_in\">lines</span>, line)</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">local</span> docs = parsedocuments(<span class=\"built_in\">lines</span>)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> #docs == <span class=\"number\">1</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> docs[<span class=\"number\">1</span>]</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> docs</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">  version = <span class=\"number\">0.1</span>,</span><br><span class=\"line\">  parse = parse,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "Dice"
            ]
        },
        {
            "id": "https://cypress.github.io/2022/08/03/getFileList/",
            "url": "https://cypress.github.io/2022/08/03/getFileList/",
            "title": "getFileList 获取文件夹列表",
            "date_published": "2022-08-03T05:39:34.000Z",
            "content_html": "<div class=\"note success\"><p><strong>getFileList</strong><br>简单的调用控制台获取文件夹列表实例</p>\n</div>\n\n<h1 id=\"获取文件夹列表\"><a href=\"#获取文件夹列表\" class=\"headerlink\" title=\"获取文件夹列表\"></a>获取文件夹列表</h1><blockquote>\n<p>使用《署名—非商业性使用—相同方式共享 4.0 协议国际版》（CC BY-NC-SA 4.0）进行授权。<br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC9sZWdhbGNvZGUuemgtSGFucw==\">https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode.zh-Hans<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<p>[ toc ]</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">System</th>\n<th align=\"center\">statement</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">Windows</td>\n<td align=\"center\">supported</td>\n</tr>\n<tr>\n<td align=\"left\">Linux</td>\n<td align=\"center\">unsupported</td>\n</tr>\n<tr>\n<td align=\"left\">IOS</td>\n<td align=\"center\">unsupported</td>\n</tr>\n</tbody></table>\n<hr>\n<h3 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h3><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2N5cHJlc3MwNTIyL2N5cHJlc3MwNTIyLmdpdGh1Yi5pby9yZWxlYXNlcy90YWcvZ2V0RmlsZUxpc3Q=\">getFileList.zip<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h3 id=\"基本信息\"><a href=\"#基本信息\" class=\"headerlink\" title=\"基本信息\"></a>基本信息</h3><ul>\n<li>作者： 简律纯</li>\n<li>联系方式：qq:a2c29k9</li>\n<li>版本：v1.0</li>\n<li>更新日期：2022/08/03</li>\n<li>关键词：<br><code>--getDiceList=</code><br><code>--getRootList=</code></li>\n<li>许可协议：CC BY-NC-SA 4.0</li>\n</ul>\n<h3 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h3><p>利用os库中的os. execute执行cmd指令，达到获取文件夹列表的目的。</p>\n<h3 id=\"须知\"><a href=\"#须知\" class=\"headerlink\" title=\"须知\"></a>须知</h3><p>该脚本只适配win平台，linux版本将会在后续更新（或者你也可以修改脚本，将dir改为ls即可，注意linux斜杠和反斜杠与win的区别），MA暂无解决方法。</p>\n<h3 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h3><blockquote>\n<p><code>--getDiceList=nil</code>与 <code>--getRootList=nil</code>分别用于获取dice根目录列表以及框架根目录列表，后接二级目录或更多（你需要用两个反斜杠<a href=\"\">\\</a>将他们连接）子目录来获取其列表。每次执行命令，脚本将会在dice根目录生成对应的DiceList.txt与RootList.txt，若文件太多发不出来也可以去那边查看。</p>\n</blockquote>\n<h3 id=\"举例\"><a href=\"#举例\" class=\"headerlink\" title=\"举例\"></a>举例</h3><blockquote>\n<p>获取根目录列表<img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-08-03/1659492690-490071-13b5fe1b2faf154d.png\"></p>\n</blockquote>\n<blockquote>\n<p>获取根目录二级或三级文件夹列表<img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-08-03/1659492727-777395-17c81e22d7ab297.png\"><br><strong>获取Dice文件夹二级或更多级文件夹列表同理。</strong></p>\n</blockquote>\n<blockquote>\n<p>获取Dice文件夹列表<img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-08-03/1659492798-371911-1528bb3c4ba6fcb6.png\"></p>\n</blockquote>\n<h3 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">---------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\">-- @getFileList 获取文件列表.</span></span><br><span class=\"line\"><span class=\"comment\">-- Author @简律纯(qq:a2c29k9)</span></span><br><span class=\"line\"><span class=\"comment\">-- @License MIT.</span></span><br><span class=\"line\"><span class=\"comment\">-- 2022/08/03</span></span><br><span class=\"line\"><span class=\"comment\">---------------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\">msg_order=&#123;[<span class=\"string\">&quot;--getDiceList=&quot;</span>]=<span class=\"string\">&quot;getDiceList&quot;</span>,[<span class=\"string\">&quot;--getRootList=&quot;</span>]=<span class=\"string\">&quot;getRootList&quot;</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">read_file = <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(path,mode1,mode2)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> text = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> file = <span class=\"built_in\">io</span>.<span class=\"built_in\">open</span>(<span class=\"built_in\">path</span>,mode1)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (file ~= <span class=\"literal\">nil</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">      text = file.<span class=\"built_in\">read</span>(file, mode2)</span><br><span class=\"line\">      <span class=\"built_in\">io</span>.<span class=\"built_in\">close</span>(file)</span><br><span class=\"line\">    <span class=\"keyword\">else</span> </span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">&quot;没有找到文件哦~&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> text</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">getLineCount = <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(path)</span></span></span><br><span class=\"line\"><span class=\"keyword\">local</span> BUFSIZE = <span class=\"number\">2</span>^<span class=\"number\">13</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> f = <span class=\"built_in\">io</span>.<span class=\"built_in\">input</span>(<span class=\"built_in\">path</span>)</span><br><span class=\"line\"><span class=\"keyword\">local</span> lc = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">true</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> <span class=\"built_in\">lines</span>,rest = f:<span class=\"built_in\">read</span>(BUFSIZE,<span class=\"string\">&#x27;*line&#x27;</span>)</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> <span class=\"built_in\">lines</span> <span class=\"keyword\">then</span> <span class=\"keyword\">break</span> <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> rest <span class=\"keyword\">then</span> <span class=\"built_in\">lines</span> = <span class=\"built_in\">lines</span> .. rest .. <span class=\"string\">&#x27;\\n&#x27;</span> <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"keyword\">local</span> _,t = <span class=\"built_in\">string</span>.<span class=\"built_in\">gsub</span>(<span class=\"built_in\">lines</span>,<span class=\"string\">&quot;%S+&quot;</span>,<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">        _,t = <span class=\"built_in\">string</span>.<span class=\"built_in\">gsub</span>(<span class=\"built_in\">lines</span>,<span class=\"string\">&quot;\\n&quot;</span>,<span class=\"string\">&quot;\\n&quot;</span>)</span><br><span class=\"line\">        lc = lc + t</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> lc</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">getDiceList = <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(msg)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> <span class=\"built_in\">path</span> = <span class=\"built_in\">string</span>.<span class=\"built_in\">sub</span>(msg.fromMsg,#<span class=\"string\">&#x27;--getDiceList=&#x27;</span>+<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">local</span> Dir = <span class=\"built_in\">path</span></span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">path</span> == <span class=\"string\">&#x27;nil&#x27;</span> <span class=\"keyword\">then</span> Dir = <span class=\"literal\">nil</span> <span class=\"keyword\">end</span></span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">if</span> Dir <span class=\"keyword\">then</span> </span><br><span class=\"line\">        cmd = <span class=\"string\">&#x27;dir &#x27;</span>.. getDiceDir()..<span class=\"string\">&#x27;\\\\&#x27;</span>..<span class=\"built_in\">path</span>..<span class=\"string\">&#x27; /b &gt;&#x27;</span>..getDiceDir()..<span class=\"string\">&#x27;//DiceList.txt&#x27;</span></span><br><span class=\"line\">        <span class=\"built_in\">os</span>.<span class=\"built_in\">execute</span>(cmd)</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        cmd = <span class=\"string\">&#x27;dir &#x27;</span>.. getDiceDir()..<span class=\"string\">&#x27; /b &gt;&#x27;</span>..getDiceDir()..<span class=\"string\">&#x27;//DiceList.txt&#x27;</span></span><br><span class=\"line\">        <span class=\"built_in\">os</span>.<span class=\"built_in\">execute</span>(cmd)</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> read_file(getDiceDir()..<span class=\"string\">&#x27;//DiceList.txt&#x27;</span>,<span class=\"string\">&#x27;r&#x27;</span>,<span class=\"string\">&#x27;*a&#x27;</span>)..<span class=\"built_in\">os</span>.<span class=\"built_in\">date</span>(<span class=\"string\">&#x27;\\n%x&#x27;</span>)..<span class=\"string\">&#x27;\\n文件夹与文件共 &#x27;</span>..getLineCount(getDiceDir()..<span class=\"string\">&#x27;//DiceList.txt&#x27;</span>)..<span class=\"string\">&#x27; 个&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">getRootList = <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(msg)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> <span class=\"built_in\">path</span> = <span class=\"built_in\">string</span>.<span class=\"built_in\">sub</span>(msg.fromMsg,#<span class=\"string\">&#x27;--getRootList=&#x27;</span>+<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">local</span> Dir = <span class=\"built_in\">path</span></span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">path</span> == <span class=\"string\">&#x27;nil&#x27;</span> <span class=\"keyword\">then</span> Dir = <span class=\"literal\">nil</span> <span class=\"keyword\">end</span></span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">if</span> Dir <span class=\"keyword\">then</span> </span><br><span class=\"line\">        cmd = <span class=\"string\">&#x27;dir &#x27;</span>..<span class=\"built_in\">path</span>..<span class=\"string\">&#x27; /b &gt;&#x27;</span>..getDiceDir()..<span class=\"string\">&#x27;//RootList.txt&#x27;</span></span><br><span class=\"line\">        <span class=\"built_in\">os</span>.<span class=\"built_in\">execute</span>(cmd)</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        cmd = <span class=\"string\">&#x27;dir /b &gt;&#x27;</span>..getDiceDir()..<span class=\"string\">&#x27;//RootList.txt&#x27;</span></span><br><span class=\"line\">        <span class=\"built_in\">os</span>.<span class=\"built_in\">execute</span>(cmd)</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> read_file(getDiceDir()..<span class=\"string\">&#x27;//RootList.txt&#x27;</span>,<span class=\"string\">&#x27;r&#x27;</span>,<span class=\"string\">&#x27;*a&#x27;</span>)..<span class=\"built_in\">os</span>.<span class=\"built_in\">date</span>(<span class=\"string\">&#x27;\\n%x&#x27;</span>)..<span class=\"string\">&#x27;\\n文件夹与文件共 &#x27;</span>..getLineCount(getDiceDir()..<span class=\"string\">&#x27;//RootList.txt&#x27;</span>)..<span class=\"string\">&#x27; 个&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>",
            "tags": [
                "Dice"
            ]
        },
        {
            "id": "https://cypress.github.io/2022/07/14/repeat-joker/",
            "url": "https://cypress.github.io/2022/07/14/repeat-joker/",
            "title": "repeat-joker",
            "date_published": "2022-07-13T16:00:00.000Z",
            "content_html": "<details class=\"note \"><summary><p>secondary</p>\n</summary>\n<p><strong>目前正在努力ing…</strong></p>\n\n</details>\n\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><blockquote>\n<p>使用《署名—非商业性使用—相同方式共享4.0 协议国际版》（CC BY-NC-SA 4.0）进行授权<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC9sZWdhbGNvZGUuemgtSGFucw==\">https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode.zh-Hans<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<div class=\"note warning\"><p><strong>WARNING ⚠️</strong><br>提供了dice解决复读问题的一种方法思路，但不免会有诸多不便。</p>\n<blockquote>\n<p>采用读写json方式。</p>\n</blockquote>\n</div>\n\n\n<h2 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h2><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">msg_order=&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">&quot;basicFunction&quot;</span>)</span><br><span class=\"line\">json = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;json&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">msg_order[<span class=\"string\">&quot;.repjoker&quot;</span>]=<span class=\"string\">&quot;repjoker&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">default_uid_json = <span class=\"string\">[[&#123;&quot;uid&quot;:2753364619,&quot;msg&quot;:&quot;好耶&quot;,&quot;time&quot;:1657773120&#125;]]</span></span><br><span class=\"line\">default_gid_json = <span class=\"string\">[[&#123;&quot;gid&quot;:971050440,&quot;msg&quot;:&quot;简律纯&quot;,&quot;time&quot;:1657773120&#125;]]</span></span><br><span class=\"line\">uid_path = <span class=\"string\">&quot;plugin//repeat-joker//uid.json&quot;</span></span><br><span class=\"line\">gid_path = <span class=\"string\">&quot;plugin//repeat-joker//gid.json&quot;</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">if</span>(getUserConf(getDiceQQ(),<span class=\"string\">&#x27;repjoker_&#x27;</span>) ~= <span class=\"literal\">true</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">    mkDirs(getDiceDir()..<span class=\"string\">&#x27;//plugin//repeat-joker&#x27;</span>)</span><br><span class=\"line\">    write_file(uid_path,default_uid_json)</span><br><span class=\"line\">    write_file(gid_path,default_gid_json)</span><br><span class=\"line\">    setUserConf(getDiceQQ(),<span class=\"string\">&#x27;repjoker_&#x27;</span>,<span class=\"literal\">true</span>)</span><br><span class=\"line\">    <span class=\"comment\">--&gt; repeat-joker:初始化完成~</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">repjoker</span><span class=\"params\">(msg)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> default_data = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> data = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> son_orders = fitemSort(Match(msg.fromMsg,#<span class=\"string\">&#x27;.repkiller&#x27;</span>+<span class=\"number\">1</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(fitems[<span class=\"number\">1</span>] == <span class=\"string\">&quot;list&quot;</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(fitems[<span class=\"number\">2</span>] == <span class=\"string\">&quot;uid&quot;</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">            default_data = <span class=\"string\">&quot;&#123;\\&quot;uid_list\\&quot;:[&quot;</span>..read_file(uid_path)..<span class=\"string\">&quot;]&#125;&quot;</span></span><br><span class=\"line\">            data = json.decode(default_data)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;&#123;self&#125;共【&quot;</span>..#data.uid_list..<span class=\"string\">&quot;】条私聊记录:&quot;</span>..default_data</span><br><span class=\"line\">        <span class=\"keyword\">elseif</span>(fitems[<span class=\"number\">2</span>] == <span class=\"string\">&quot;gid&quot;</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">            default_data =  <span class=\"string\">&quot;&#123;\\&quot;gid_list\\&quot;:[&quot;</span>..read_file(gid_path)..<span class=\"string\">&quot;]&#125;&quot;</span></span><br><span class=\"line\">            data =  json.decode(default_data)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;&#123;self&#125;共【&quot;</span>..#data.gid_list..<span class=\"string\">&quot;】条群聊记录:\\n&quot;</span>..default_data</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">elseif</span>(fitems[<span class=\"number\">1</span>] == <span class=\"string\">&quot;uid&quot;</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">        default_data = <span class=\"string\">&quot;&#123;\\&quot;uid_list\\&quot;:[&quot;</span>..read_file(uid_path)..<span class=\"string\">&quot;]&#125;&quot;</span></span><br><span class=\"line\">        data = json.decode(default_data)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(fitems[<span class=\"number\">2</span>] == <span class=\"literal\">nil</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(getUserConf(msg.uid,<span class=\"string\">&#x27;uid-help&#x27;</span>) ~= <span class=\"literal\">true</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">                setUserConf(msg.uid,<span class=\"string\">&#x27;uid-help&#x27;</span>,<span class=\"literal\">true</span>)</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">&quot;&#123;nick&#125;你的对象呢？\\n是这样用哒:\\n.repjoker uid &lt;QQ号&gt;\\n记住了以后可不会再告诉你了&quot;</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">&quot;&#123;nick&#125;又没有对象了吗?&quot;</span></span><br><span class=\"line\">            <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"keyword\">local</span> uid = getAtQQ(fitems[<span class=\"number\">2</span>])</span><br><span class=\"line\">            data = json.decode(<span class=\"built_in\">string</span>.<span class=\"built_in\">gsub</span>(default_data,<span class=\"string\">&#x27;%s&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>))</span><br><span class=\"line\">            <span class=\"keyword\">for</span> i=<span class=\"number\">1</span>,#data.uid_list <span class=\"keyword\">do</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(data.uid_list[i].uid == <span class=\"built_in\">tonumber</span>(uid)) <span class=\"keyword\">then</span></span><br><span class=\"line\">                    k = i</span><br><span class=\"line\">                    out = <span class=\"string\">&quot;已为&#123;nick&#125;找到&quot;</span>..getUserConf(<span class=\"built_in\">tonumber</span>(data.uid_list[k].uid),<span class=\"string\">&quot;nick#&quot;</span>)..<span class=\"string\">&quot;最近的一条发言记录:\\n&quot;</span>..stamp2Time(data.uid_list[k].<span class=\"built_in\">time</span>)..<span class=\"string\">&quot;:&quot;</span>..data.uid_list[k].msg</span><br><span class=\"line\">                    <span class=\"keyword\">break</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    out = <span class=\"string\">&quot;&#123;self&#125;处没有关于&quot;</span>.. getUserConf(<span class=\"built_in\">tonumber</span>(uid),<span class=\"string\">&quot;nick#&quot;</span>)..<span class=\"string\">&quot;的发言记录哦~&quot;</span></span><br><span class=\"line\">                <span class=\"keyword\">end</span></span><br><span class=\"line\">            <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> out</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span>(fitems[<span class=\"number\">1</span>] == <span class=\"string\">&quot;gid&quot;</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">        default_data = <span class=\"string\">&quot;&#123;\\&quot;gid_list\\&quot;:[&quot;</span>..read_file(gid_path)..<span class=\"string\">&quot;]&#125;&quot;</span></span><br><span class=\"line\">        data = json.decode(default_data)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(fitems[<span class=\"number\">2</span>] == <span class=\"literal\">nil</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> getGroupConf(<span class=\"built_in\">tonumber</span>(msg.gid),<span class=\"string\">&quot;name&quot;</span>)..<span class=\"string\">&quot;(&quot;</span>..msg.gid..<span class=\"string\">&quot;)还没有人复读过哦~#期待&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"keyword\">local</span> gid = getAtQQ(fitems[<span class=\"number\">2</span>])</span><br><span class=\"line\">            data = json.decode(<span class=\"built_in\">string</span>.<span class=\"built_in\">gsub</span>(default_data,<span class=\"string\">&#x27;%s&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>))</span><br><span class=\"line\">            <span class=\"keyword\">for</span> i=<span class=\"number\">1</span>,#data.msg <span class=\"keyword\">do</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(data.gid[i] == <span class=\"built_in\">tonumber</span>(gid)) <span class=\"keyword\">then</span></span><br><span class=\"line\">                    k = i</span><br><span class=\"line\">                    <span class=\"keyword\">break</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    out = <span class=\"string\">&quot;&#123;self&#125;处没有关于群&quot;</span>.. getGroupConf(<span class=\"built_in\">tonumber</span>(gid),<span class=\"string\">&quot;name&quot;</span>)..<span class=\"string\">&quot;(&quot;</span>..gid..<span class=\"string\">&quot;)的用户发言记录哦~&quot;</span></span><br><span class=\"line\">                <span class=\"keyword\">end</span></span><br><span class=\"line\">            <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> out</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span>(fitems[<span class=\"number\">1</span>] == <span class=\"string\">&quot;test&quot;</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">        write_(msg.fromMsg,msg.uid,msg.fromGroup)</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">write_</span><span class=\"params\">(str,uid,gid)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(gid == <span class=\"string\">&quot;0&quot;</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">        write_file(uid_path,<span class=\"string\">&quot;,&#123;\\&quot;uid\\&quot;:&quot;</span>..uid..<span class=\"string\">&quot;,\\&quot;msg\\&quot;:\\&quot;&quot;</span>..str..<span class=\"string\">&quot;\\&quot;,\\&quot;time\\&quot;:&quot;</span>..<span class=\"built_in\">os</span>.<span class=\"built_in\">time</span>()..<span class=\"string\">&quot;&#125;&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        write_file(gid_path,<span class=\"string\">&quot;,&#123;\\&quot;gid\\&quot;:&quot;</span>..gid..<span class=\"string\">&quot;,\\&quot;msg\\&quot;:\\&quot;&quot;</span>..str..<span class=\"string\">&quot;\\&quot;,\\&quot;time\\&quot;:&quot;</span>..<span class=\"built_in\">os</span>.<span class=\"built_in\">time</span>()..<span class=\"string\">&quot;&#125;&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "Dice"
            ]
        },
        {
            "id": "https://cypress.github.io/2022/07/06/ai-reply/",
            "url": "https://cypress.github.io/2022/07/06/ai-reply/",
            "title": "在dice里关于ai的应用",
            "date_published": "2022-07-05T16:00:00.000Z",
            "content_html": "<div class=\"note primary\"><p>一个失败品…</p>\n</div>\n\n<blockquote>\n<p>使用《署名—非商业性使用—相同方式共享 4.0 协议国际版》（CC BY-NC-SA 4.0）进行授权。<br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC9sZWdhbGNvZGUuemgtSGFucw==\">https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode.zh-Hans<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<h2 id=\"起因\"><a href=\"#起因\" class=\"headerlink\" title=\"起因\"></a>起因</h2><p>非常无聊，于是用正则以及dice的lua回复写了一个调用ai实例，总结了两个ai，青云客与思知。</p>\n<p>使用方法：<br>调用青云客:setUserConf(getDiceQQ(),’ai’,1)<br>调用思知:setUserConf(getDiceQQ(),’ai’,2)</p>\n<h2 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h2><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.reply set</span><br><span class=\"line\">Regex=(.*)</span><br><span class=\"line\">Lua=</span><br><span class=\"line\"><span class=\"keyword\">if</span> getUserConf(getDiceQQ(),<span class=\"string\">&#x27;ai&#x27;</span>) == <span class=\"number\">1</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">url = <span class=\"string\">&quot;http://api.qingyunke.com/api.php?key=free&amp;appid=0&amp;msg=&quot;</span> .. msg.fromMsg</span><br><span class=\"line\">\tres,data = http.get(url)</span><br><span class=\"line\">\tjson = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;json&quot;</span>)</span><br><span class=\"line\">\tj = json.decode(data)</span><br><span class=\"line\"><span class=\"keyword\">return</span> j.content</span><br><span class=\"line\"><span class=\"keyword\">elseif</span> getUserConf(getDiceQQ(),<span class=\"string\">&#x27;ai&#x27;</span>) == <span class=\"number\">2</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">url = <span class=\"string\">&quot;https://api.ownthink.com/bot?spoken=&quot;</span> .. msg.fromMsg</span><br><span class=\"line\">\tres,data = http.get(url)</span><br><span class=\"line\">\tjson = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;json&quot;</span>)</span><br><span class=\"line\">\tj = json.decode(data)</span><br><span class=\"line\"><span class=\"keyword\">return</span> j.data.info.text</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>",
            "tags": [
                "Dice",
                "AI"
            ]
        },
        {
            "id": "https://cypress.github.io/2022/06/24/reborn/",
            "url": "https://cypress.github.io/2022/06/24/reborn/",
            "title": "reborn 重开模拟器",
            "date_published": "2022-06-23T16:00:00.000Z",
            "content_html": "<div class=\"note success\"><p><strong>reborn</strong><br>高考成绩出来了，重开吧，摆烂！</p>\n</div>\n\n<blockquote>\n<p>使用《署名—非商业性使用—相同方式共享 4.0 协议国际版》（CC BY-NC-SA 4.0）进行授权。<br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC9sZWdhbGNvZGUuemgtSGFucw==\">https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode.zh-Hans<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<h2 id=\"基本信息\"><a href=\"#基本信息\" class=\"headerlink\" title=\"基本信息\"></a>基本信息</h2><ul>\n<li>作者： 简律纯</li>\n<li>联系方式：qq:a2c29k9</li>\n<li>版本：v1.2 fix</li>\n<li>更新日期：2022/06/24</li>\n<li>简介：投胎</li>\n<li>关键词：<code>reborn</code></li>\n<li>许可协议：CC BY-NC-SA 4.0</li>\n</ul>\n<h2 id=\"详细介绍\"><a href=\"#详细介绍\" class=\"headerlink\" title=\"详细介绍\"></a>详细介绍</h2><p>首先感谢 @Natsume <span class=\"exturl\" data-url=\"aHR0cHM6Ly9mb3J1bS5rb2tvbmEudGVjaC9kLzExOA==\">随机国家<i class=\"fa fa-external-link-alt\"></i></span><br>算起来Natsume的这个帖子已经两年整了。<br>ta说这似乎没什么用，于是我便突发奇想昨天晚上熬夜整了个重开模拟器。</p>\n<h2 id=\"效果图\"><a href=\"#效果图\" class=\"headerlink\" title=\"效果图\"></a>效果图</h2><p><img src=\"https://cdn.jsdelivr.net/gh/cypress0522/img@main/2022/06/24/49e9f345b9e057b6.png\"></p>\n<h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2N5cHJlc3MwNTIyL2N5cHJlc3MwNTIyLmdpdGh1Yi5pby9yZWxlYXNlcy90YWcvcmVib3Ju\">reborn v1.2 fix.zip<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h2><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">---------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\">--reborn.重生|投胎 脚本</span></span><br><span class=\"line\"><span class=\"comment\">--countryu取自Natsume(https://forum.kokona.tech/d/118)</span></span><br><span class=\"line\"><span class=\"comment\">--作者:简律纯(qq:A2C29K9)</span></span><br><span class=\"line\"><span class=\"comment\">--2022.06.24 Fixed</span></span><br><span class=\"line\"><span class=\"comment\">---------------------------------------------------------------------</span></span><br><span class=\"line\">msg_order=&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">born</span><span class=\"params\">(msg)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> countryu = &#123; <span class=\"string\">&quot;芬兰&quot;</span>,<span class=\"string\">&quot;瑞典&quot;</span>,<span class=\"string\">&quot;挪威&quot;</span>,<span class=\"string\">&quot;冰岛&quot;</span>,<span class=\"string\">&quot;丹麦&quot;</span>,<span class=\"string\">&quot;法罗群岛（丹）&quot;</span> ,<span class=\"string\">&quot;爱沙尼亚&quot;</span>,<span class=\"string\">&quot;拉脱维亚&quot;</span>,<span class=\"string\">&quot;立陶宛&quot;</span>,<span class=\"string\">&quot;俄罗斯&quot;</span>,<span class=\"string\">&quot;白俄罗斯&quot;</span>,<span class=\"string\">&quot;乌克兰&quot;</span>,<span class=\"string\">&quot;摩尔多瓦&quot;</span>,<span class=\"string\">&quot;波兰&quot;</span>,<span class=\"string\">&quot;捷克&quot;</span>,<span class=\"string\">&quot;斯洛伐克&quot;</span>,<span class=\"string\">&quot;匈牙利&quot;</span>,<span class=\"string\">&quot;德国&quot;</span>,<span class=\"string\">&quot;奥地利&quot;</span>,<span class=\"string\">&quot;瑞士&quot;</span>,<span class=\"string\">&quot;列支敦士登&quot;</span>,<span class=\"string\">&quot;英国&quot;</span>,<span class=\"string\">&quot;爱尔兰&quot;</span>,<span class=\"string\">&quot;荷兰&quot;</span>,<span class=\"string\">&quot;比利时&quot;</span>,<span class=\"string\">&quot;卢森堡&quot;</span>,<span class=\"string\">&quot;法国&quot;</span>,<span class=\"string\">&quot;摩纳哥&quot;</span>,<span class=\"string\">&quot;罗马尼亚&quot;</span>,<span class=\"string\">&quot;保加利亚&quot;</span>,<span class=\"string\">&quot;塞尔维亚&quot;</span>,<span class=\"string\">&quot;黑山&quot;</span>,<span class=\"string\">&quot;马其顿&quot;</span>,<span class=\"string\">&quot;阿尔巴尼亚&quot;</span>,<span class=\"string\">&quot;希腊&quot;</span>,<span class=\"string\">&quot;斯洛文尼亚&quot;</span>,<span class=\"string\">&quot;克罗地亚&quot;</span>,<span class=\"string\">&quot;波斯尼亚和墨塞哥维那&quot;</span>,<span class=\"string\">&quot;意大利&quot;</span>,<span class=\"string\">&quot;梵蒂冈&quot;</span>,<span class=\"string\">&quot;圣马力诺&quot;</span>,<span class=\"string\">&quot;马耳他&quot;</span>,<span class=\"string\">&quot;西班牙&quot;</span>,<span class=\"string\">&quot;葡萄牙&quot;</span>,<span class=\"string\">&quot;安道尔&quot;</span>,<span class=\"string\">&quot;中国&quot;</span>,<span class=\"string\">&quot;蒙古&quot;</span>,<span class=\"string\">&quot;朝鲜&quot;</span>,<span class=\"string\">&quot;韩国&quot;</span>,<span class=\"string\">&quot;日本&quot;</span>,<span class=\"string\">&quot;菲律宾&quot;</span>,<span class=\"string\">&quot;越南&quot;</span>,<span class=\"string\">&quot;老挝&quot;</span>,<span class=\"string\">&quot;柬埔寨&quot;</span>,<span class=\"string\">&quot;缅甸&quot;</span>,<span class=\"string\">&quot;泰国&quot;</span>,<span class=\"string\">&quot;马来西亚&quot;</span>,<span class=\"string\">&quot;文莱&quot;</span>,<span class=\"string\">&quot;新加坡&quot;</span>,<span class=\"string\">&quot;印度尼西亚&quot;</span>,<span class=\"string\">&quot;东帝汶&quot;</span>,<span class=\"string\">&quot;尼泊尔&quot;</span>,<span class=\"string\">&quot;不丹&quot;</span>,<span class=\"string\">&quot;孟加拉国&quot;</span>,<span class=\"string\">&quot;印度&quot;</span>,<span class=\"string\">&quot;巴基斯坦&quot;</span>,<span class=\"string\">&quot;斯里兰卡&quot;</span>,<span class=\"string\">&quot;马尔代夫&quot;</span>,<span class=\"string\">&quot;哈萨克斯坦&quot;</span>,<span class=\"string\">&quot;土库曼斯坦&quot;</span>,<span class=\"string\">&quot;塔吉克斯坦&quot;</span>,<span class=\"string\">&quot;乌兹别克斯坦&quot;</span>,<span class=\"string\">&quot;吉尔吉斯斯坦&quot;</span>,<span class=\"string\">&quot;阿富汗&quot;</span>,<span class=\"string\">&quot;伊拉克&quot;</span>,<span class=\"string\">&quot;伊朗&quot;</span>,<span class=\"string\">&quot;叙利亚&quot;</span>,<span class=\"string\">&quot;约旦&quot;</span>,<span class=\"string\">&quot;黎巴嫩&quot;</span>,<span class=\"string\">&quot;以色列&quot;</span>,<span class=\"string\">&quot;巴勒斯坦&quot;</span>,<span class=\"string\">&quot;巴林&quot;</span>,<span class=\"string\">&quot;卡塔尔&quot;</span>,<span class=\"string\">&quot;科威特&quot;</span>,<span class=\"string\">&quot;沙特阿拉伯&quot;</span>,<span class=\"string\">&quot;阿拉伯联合酋长国&quot;</span>,<span class=\"string\">&quot;阿曼&quot;</span>,<span class=\"string\">&quot;也门&quot;</span>,<span class=\"string\">&quot;格鲁吉亚&quot;</span>,<span class=\"string\">&quot;亚美尼亚&quot;</span>,<span class=\"string\">&quot;阿塞拜疆&quot;</span>,<span class=\"string\">&quot;塞浦路斯&quot;</span>,<span class=\"string\">&quot;土耳其&quot;</span>,<span class=\"string\">&quot;埃及&quot;</span>,<span class=\"string\">&quot;利比亚&quot;</span>,<span class=\"string\">&quot;苏丹&quot;</span>,<span class=\"string\">&quot;突尼斯&quot;</span>,<span class=\"string\">&quot;阿尔及利亚&quot;</span>,<span class=\"string\">&quot;摩洛哥&quot;</span>,<span class=\"string\">&quot;亚速尔群岛（葡）&quot;</span>,<span class=\"string\">&quot;马德拉群岛（葡）&quot;</span>,<span class=\"string\">&quot;埃塞俄比亚&quot;</span>,<span class=\"string\">&quot;厄立特里亚&quot;</span>,<span class=\"string\">&quot;索马里&quot;</span>,<span class=\"string\">&quot;吉布提&quot;</span>,<span class=\"string\">&quot;肯尼亚&quot;</span>,<span class=\"string\">&quot;坦桑尼亚&quot;</span>,<span class=\"string\">&quot;乌干达&quot;</span>,<span class=\"string\">&quot;卢旺达&quot;</span>,<span class=\"string\">&quot;布隆迪&quot;</span>,<span class=\"string\">&quot;塞舌尔&quot;</span>,<span class=\"string\">&quot;赞比亚&quot;</span>,<span class=\"string\">&quot;安哥拉&quot;</span>,<span class=\"string\">&quot;津巴布韦&quot;</span>,<span class=\"string\">&quot;马拉维&quot;</span>,<span class=\"string\">&quot;莫桑比克&quot;</span>,<span class=\"string\">&quot;博茨瓦纳&quot;</span>,<span class=\"string\">&quot;纳米比亚&quot;</span>,<span class=\"string\">&quot;斯威士兰&quot;</span>,<span class=\"string\">&quot;莱索托&quot;</span>,<span class=\"string\">&quot;马达加斯加&quot;</span>,<span class=\"string\">&quot;科摩罗&quot;</span>,<span class=\"string\">&quot;毛里求斯&quot;</span>,<span class=\"string\">&quot;留尼旺（法）&quot;</span>,<span class=\"string\">&quot;圣赫勒拿&quot;</span>,<span class=\"string\">&quot;（英）南非&quot;</span>,<span class=\"string\">&quot;乍得&quot;</span>,<span class=\"string\">&quot;中非&quot;</span>,<span class=\"string\">&quot;喀麦隆&quot;</span>,<span class=\"string\">&quot;加蓬&quot;</span>,<span class=\"string\">&quot;圣多美&quot;</span>,<span class=\"string\">&quot;赤道几内亚&quot;</span>,<span class=\"string\">&quot;刚果民主共和国（刚果)&quot;</span>,<span class=\"string\">&quot;普林西比&quot;</span>,<span class=\"string\">&quot;毛里塔尼亚&quot;</span>,<span class=\"string\">&quot;塞内加尔&quot;</span>,<span class=\"string\">&quot;冈比亚&quot;</span>,<span class=\"string\">&quot;马里&quot;</span>,<span class=\"string\">&quot;布基纳法索&quot;</span>,<span class=\"string\">&quot;几内亚&quot;</span>,<span class=\"string\">&quot;几内亚比绍&quot;</span>,<span class=\"string\">&quot;塞拉利昂&quot;</span>,<span class=\"string\">&quot;利比里亚&quot;</span>,<span class=\"string\">&quot;科特迪瓦&quot;</span>,<span class=\"string\">&quot;佛得角&quot;</span>,<span class=\"string\">&quot;加纳&quot;</span>,<span class=\"string\">&quot;多哥&quot;</span>,<span class=\"string\">&quot;贝宁&quot;</span>,<span class=\"string\">&quot;尼日尔&quot;</span>,<span class=\"string\">&quot;加那利群岛（西）&quot;</span>,<span class=\"string\">&quot;澳大利亚&quot;</span>,<span class=\"string\">&quot;新西兰&quot;</span>,<span class=\"string\">&quot;巴布亚新几内亚&quot;</span>,<span class=\"string\">&quot;所罗门群岛&quot;</span>,<span class=\"string\">&quot;瓦努阿图&quot;</span>,<span class=\"string\">&quot;密克罗尼西亚&quot;</span>,<span class=\"string\">&quot;马绍尔群岛&quot;</span>,<span class=\"string\">&quot;帕劳&quot;</span>,<span class=\"string\">&quot;瑙鲁&quot;</span>,<span class=\"string\">&quot;基里巴斯&quot;</span>,<span class=\"string\">&quot;图瓦卢&quot;</span>,<span class=\"string\">&quot;萨摩亚&quot;</span>,<span class=\"string\">&quot;斐济群岛&quot;</span>,<span class=\"string\">&quot;汤加&quot;</span>,<span class=\"string\">&quot;库克群岛（新）&quot;</span>,<span class=\"string\">&quot;关岛（美）&quot;</span>,<span class=\"string\">&quot;新喀里多尼亚（法）&quot;</span>,<span class=\"string\">&quot;法属波利尼西亚&quot;</span>,<span class=\"string\">&quot;皮特凯恩岛（英）&quot;</span>,<span class=\"string\">&quot;瓦利斯与富图纳（法）&quot;</span>,<span class=\"string\">&quot;纽埃（新）&quot;</span>,<span class=\"string\">&quot;托克劳（新）&quot;</span>,<span class=\"string\">&quot;美属萨摩亚&quot;</span>,<span class=\"string\">&quot;北马里亚纳（美）&quot;</span>,<span class=\"string\">&quot;加拿大&quot;</span>,<span class=\"string\">&quot;美国&quot;</span>,<span class=\"string\">&quot;墨西哥&quot;</span>,<span class=\"string\">&quot;格陵兰（丹）&quot;</span>,<span class=\"string\">&quot;危地马拉&quot;</span>,<span class=\"string\">&quot;伯利兹&quot;</span>,<span class=\"string\">&quot;萨尔瓦多&quot;</span>,<span class=\"string\">&quot;洪都拉斯&quot;</span>,<span class=\"string\">&quot;尼加拉瓜&quot;</span>,<span class=\"string\">&quot;哥斯达黎加&quot;</span>,<span class=\"string\">&quot;巴拿马&quot;</span>,<span class=\"string\">&quot;巴哈马&quot;</span>,<span class=\"string\">&quot;古巴&quot;</span>,<span class=\"string\">&quot;牙买加&quot;</span>,<span class=\"string\">&quot;海地&quot;</span>,<span class=\"string\">&quot;多米尼加共和国&quot;</span>,<span class=\"string\">&quot;安提瓜和巴布达&quot;</span>,<span class=\"string\">&quot;圣基茨和尼维斯&quot;</span>,<span class=\"string\">&quot;多米尼克&quot;</span>,<span class=\"string\">&quot;圣卢西亚&quot;</span>,<span class=\"string\">&quot;圣文森特和格林纳丁斯&quot;</span>,<span class=\"string\">&quot;格林纳达&quot;</span>,<span class=\"string\">&quot;特立尼达和多巴哥&quot;</span>,<span class=\"string\">&quot;波多黎各（美）&quot;</span>,<span class=\"string\">&quot;英属维尔京群岛&quot;</span>,<span class=\"string\">&quot;巴巴多斯&quot;</span>,<span class=\"string\">&quot;美属维尔京群岛&quot;</span>,<span class=\"string\">&quot;蒙特塞拉特（英）&quot;</span>,<span class=\"string\">&quot;瓜德罗普（法）&quot;</span>,<span class=\"string\">&quot;马提尼克（法）&quot;</span>,<span class=\"string\">&quot;荷属安的列斯&quot;</span>,<span class=\"string\">&quot;安圭拉&quot;</span>,<span class=\"string\">&quot;阿鲁巴（荷）&quot;</span>,<span class=\"string\">&quot;特克斯和凯科斯群岛（英）&quot;</span>,<span class=\"string\">&quot;开曼群岛（英）&quot;</span>,<span class=\"string\">&quot;百慕大（英）&quot;</span>,<span class=\"string\">&quot;哥伦比亚&quot;</span>,<span class=\"string\">&quot;委内瑞拉&quot;</span>,<span class=\"string\">&quot;圭亚那&quot;</span>,<span class=\"string\">&quot;法属圭亚那&quot;</span>,<span class=\"string\">&quot;苏里南&quot;</span>,<span class=\"string\">&quot;厄瓜多尔&quot;</span>,<span class=\"string\">&quot;秘鲁&quot;</span>,<span class=\"string\">&quot;玻利维亚&quot;</span>,<span class=\"string\">&quot;巴西&quot;</span>,<span class=\"string\">&quot;智利&quot;</span>,<span class=\"string\">&quot;阿根廷&quot;</span>,<span class=\"string\">&quot;乌拉圭&quot;</span>,<span class=\"string\">&quot;巴拉圭&quot;</span>&#125;</span><br><span class=\"line\">    <span class=\"comment\">-- 国家</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">local</span> cardu = &#123;<span class=\"string\">&quot;你患有败血症\\n&quot;</span>,<span class=\"string\">&quot;你发育不良\\n&quot;</span>,<span class=\"string\">&quot;你得了新冠病毒\\n&quot;</span>,<span class=\"string\">&quot;你居然没有屁眼\\n&quot;</span>,<span class=\"string\">&quot;你喜欢和小狗抢食物\\n&quot;</span>,<span class=\"string\">&quot;你看得见空气中浮动的黑色粒子\\n&quot;</span>..<span class=\"string\">&quot;你有两个脑袋\\n&quot;</span>,<span class=\"string\">&quot;你喜欢咬脚趾甲\\n&quot;</span>,<span class=\"string\">&quot;你喜欢吃墙灰\\n&quot;</span>,<span class=\"string\">&quot;你患有糖尿病\\n&quot;</span>,<span class=\"string\">&quot;你的小心脏是露出来的\\n&quot;</span>,<span class=\"string\">&quot;你是畸形儿\\n&quot;</span>,<span class=\"string\">&quot;你看上去像个傻子\\n&quot;</span>,<span class=\"string\">&quot;你长得很丑\\n&quot;</span>&#125;</span><br><span class=\"line\">    <span class=\"comment\">-- 病情描述，可增加</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">local</span> apper = &#123;<span class=\"string\">&quot;你有着大大的眼睛\\n&quot;</span>,<span class=\"string\">&quot;你的睫毛很长很好看\\n&quot;</span>,<span class=\"string\">&quot;你总是很好奇的看着世界\\n&quot;</span>,<span class=\"string\">&quot;你五官端正\\n&quot;</span>,<span class=\"string\">&quot;你出生时没有大哭大闹\\n&quot;</span>,<span class=\"string\">&quot;你长得很可爱\\n&quot;</span>,<span class=\"string\">&quot;你看上去很乖巧\\n&quot;</span>&#125;</span><br><span class=\"line\">    <span class=\"comment\">-- 健康描述，可增加</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">local</span> parent_good_tab = &#123;<span class=\"string\">&quot;很穷，因此&quot;</span>,<span class=\"string\">&quot;看你很可爱于是&quot;</span>&#125;</span><br><span class=\"line\">    <span class=\"keyword\">local</span> parent_bad_tab = &#123;<span class=\"string\">&quot;认为你长得太丑于是&quot;</span>,<span class=\"string\">&quot;对你议论纷纷，不过他们&quot;</span>,<span class=\"string\">&quot;发现你大有问题便把你扔了，但还是&quot;</span>&#125;</span><br><span class=\"line\">    <span class=\"comment\">-- 父母行为</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">local</span> sexu = ranint(<span class=\"number\">1</span>,<span class=\"number\">100</span>)</span><br><span class=\"line\">    <span class=\"comment\">--男女比例与下文53对应</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">local</span> health = ranint(<span class=\"number\">1</span>,<span class=\"number\">2</span>)</span><br><span class=\"line\">    <span class=\"comment\">--健康与否</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(sexu&lt;=<span class=\"number\">53</span>) <span class=\"keyword\">then</span> sex = <span class=\"string\">&quot;男孩子&quot;</span> <span class=\"keyword\">elseif</span>(sexu==<span class=\"number\">1</span>) <span class=\"keyword\">then</span> sex = <span class=\"string\">&quot;雌雄同体&quot;</span> <span class=\"keyword\">else</span> sex = <span class=\"string\">&quot;女孩子&quot;</span> <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"comment\">-- 没有采用drawDeck(0,msg.fromQQ,&quot;性别&quot;)的原因是这样可以自定义男女比例</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">local</span> country = countryu[ranint(<span class=\"number\">1</span>,#countryu)] <span class=\"comment\">-- 抽取国家</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> card = <span class=\"string\">&quot;&quot;</span> <span class=\"comment\">-- 抽选病情</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> state = ranint(<span class=\"number\">1</span>,<span class=\"number\">20</span>) <span class=\"comment\">-- 投胎成功概率</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> weight = ranint(<span class=\"number\">20</span>,<span class=\"number\">35</span>)/<span class=\"number\">10</span> <span class=\"comment\">-- 新生儿体重，折合公斤</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> weightu = <span class=\"string\">&quot;&quot;</span> <span class=\"comment\">-- 初始化关于体重的评价</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> healthu = <span class=\"string\">&quot;&quot;</span> <span class=\"comment\">-- 初始化健康与否</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> apperu = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> parent_good = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> parent_bad = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(state==<span class=\"number\">5</span>) <span class=\"keyword\">then</span> <span class=\"comment\">-- 失败概率为1/20</span></span><br><span class=\"line\">        dead_weight = ranint(<span class=\"number\">9</span>,<span class=\"number\">18</span>)/<span class=\"number\">10</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;&#123;nick&#125;投胎失败！\\n你没能活到出生，祝你下次好运！\\n你的父母收到了一具&quot;</span>..dead_weight..<span class=\"string\">&quot;公斤的死尸x(没错就是你)&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"comment\">-- 投胎失败</span></span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(weight==<span class=\"number\">3.2</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">            weightu = <span class=\"string\">&quot;是标准体重哦~&quot;</span> </span><br><span class=\"line\">            <span class=\"comment\">-- 对体重等于3.2kg的评价</span></span><br><span class=\"line\">        <span class=\"keyword\">elseif</span>(weight&lt;=<span class=\"number\">2.4</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">            weightu = <span class=\"string\">&quot;有一点点轻呢。&quot;</span></span><br><span class=\"line\">            <span class=\"comment\">-- 对体重小于2.4kg的评价</span></span><br><span class=\"line\">        <span class=\"keyword\">elseif</span>(weight&gt;<span class=\"number\">3.2</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">            weightu = <span class=\"string\">&quot;可能是父母的原因让你有点点小胖吧~&quot;</span></span><br><span class=\"line\">            <span class=\"comment\">-- 对体重大于3.2kg的评价</span></span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(country==<span class=\"string\">&quot;中国&quot;</span>) <span class=\"keyword\">then</span> name = drawDeck(<span class=\"number\">0</span>,msg.fromQQ,<span class=\"string\">&quot;随机姓名_zh&quot;</span>) <span class=\"keyword\">or</span> drawDeck(<span class=\"number\">0</span>,msg.fromQQ,<span class=\"string\">&quot;随机姓名_enzh&quot;</span>)</span><br><span class=\"line\">        <span class=\"comment\">-- 中国人当然要有中文名</span></span><br><span class=\"line\">        <span class=\"keyword\">elseif</span>(country==<span class=\"string\">&quot;日本&quot;</span>) <span class=\"keyword\">then</span> name = drawDeck(<span class=\"number\">0</span>,msg.fromQQ,<span class=\"string\">&quot;随机姓名_jp&quot;</span>)</span><br><span class=\"line\">        <span class=\"comment\">-- 霓虹進的名字</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span> name = drawDeck(<span class=\"number\">0</span>,msg.fromQQ,<span class=\"string\">&quot;随机姓名_en&quot;</span>) <span class=\"keyword\">or</span> drawDeck(<span class=\"number\">0</span>,msg.fromQQ,<span class=\"string\">&quot;随机姓名_enzh&quot;</span>)</span><br><span class=\"line\">        <span class=\"comment\">-- 剩下一律包含en</span></span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(health==<span class=\"number\">1</span>) <span class=\"keyword\">then</span> </span><br><span class=\"line\">            healthu,apperu = <span class=\"string\">&quot;你很健康呢！\\n&quot;</span>,<span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">            <span class=\"keyword\">local</span> start = ranint(<span class=\"number\">1</span>,#apper//<span class=\"number\">2</span>)</span><br><span class=\"line\">                <span class=\"keyword\">for</span> i=start,ranint(start+<span class=\"number\">1</span>,#apper) <span class=\"keyword\">do</span></span><br><span class=\"line\">                    apperu = apperu..apper[i]</span><br><span class=\"line\">                <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"comment\">-- 健康描述</span></span><br><span class=\"line\">            parent_good = parent_good_tab[ranint(<span class=\"number\">1</span>,#parent_good_tab)]</span><br><span class=\"line\">            </span><br><span class=\"line\">        <span class=\"keyword\">else</span> </span><br><span class=\"line\">        </span><br><span class=\"line\">            healthu = <span class=\"string\">&quot;你并不是一个健康的孩子:\\n&quot;</span></span><br><span class=\"line\">            </span><br><span class=\"line\">                <span class=\"keyword\">local</span> start = ranint(<span class=\"number\">1</span>,#cardu//<span class=\"number\">2</span>)</span><br><span class=\"line\">                <span class=\"keyword\">for</span> i=start,ranint(start+<span class=\"number\">1</span>,#cardu) <span class=\"keyword\">do</span></span><br><span class=\"line\">                    card = card..cardu[i]</span><br><span class=\"line\">                <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"comment\">-- 病情描述</span></span><br><span class=\"line\">                parent_bad = parent_bad_tab[ranint(<span class=\"number\">1</span>,#parent_bad_tab)]</span><br><span class=\"line\">                </span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;&#123;nick&#125;投胎成功！\\n你出生在&quot;</span>..country..<span class=\"string\">&quot;，是&quot;</span>..sex..<span class=\"string\">&quot;\\n体重:&quot;</span>..weight..<span class=\"string\">&quot;公斤 &quot;</span>..weightu..<span class=\"string\">&quot;\\n&quot;</span>..healthu..apperu..card..<span class=\"string\">&quot;你的父母&quot;</span>.. parent_good..parent_bad..<span class=\"string\">&quot;给你起名&quot;</span>..name</span><br><span class=\"line\">        <span class=\"comment\">-- 推起来输出</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">msg_order[<span class=\"string\">&quot;reborn&quot;</span>]=<span class=\"string\">&quot;born&quot;</span></span><br></pre></td></tr></table></figure>",
            "tags": [
                "Dice"
            ]
        },
        {
            "id": "https://cypress.github.io/2022/06/23/unlimited-errors/",
            "url": "https://cypress.github.io/2022/06/23/unlimited-errors/",
            "title": "unlimited-errors",
            "date_published": "2022-06-22T16:00:00.000Z",
            "content_html": "<details class=\"note \"><summary><p>secondary</p>\n</summary>\n<p><strong>目前正在努力ing…</strong><br>利用 <code>error()</code>与 <code>pcall()</code>进行lua自定义报错</p>\n\n</details>\n\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><blockquote>\n<p>使用《署名—非商业性使用—相同方式共享4.0 协议国际版》（CC BY-NC-SA 4.0）进行授权<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC9sZWdhbGNvZGUuemgtSGFucw==\">https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode.zh-Hans<i class=\"fa fa-external-link-alt\"></i></span><br>作者：简律纯<br>联系方式：qq:A2C29K9<br>更新日期：2022/5/28</p>\n</blockquote>\n<div class=\"note warning\"><p><strong>WARNING ⚠️</strong><br>本帖是作为利用basicFunction自带的chat指令并结合修改chat指令内tryCatch部分的函数名来进行报错排查的示例帖。</p>\n<blockquote>\n<p>简言之让报错更好看一点，更容易理解一点。</p>\n</blockquote>\n</div>\n\n<p>taboo前些日子（好久了）评论了<span class=\"exturl\" data-url=\"aHR0cHM6Ly9mb3J1bS5rb2tvbmEudGVjaC9kLzExNDctemhpLWxpbmctamlhby1iZW4ta3VvLXpoYW4taGFuLXNodS1rdS1jaGkteHUtemhvdS1nZW5n\">basicFunction<i class=\"fa fa-external-link-alt\"></i></span> 的tryCatch函数，他说，</p>\n<blockquote>\n<p>骰娘自检可以安排到行程上了</p>\n</blockquote>\n<p>虽然和写tryCatch的初衷完全不一样，但是返校后在考试过程中突然发现这会是一个很不错的想法，于是单独写一篇帖子介绍它。</p>\n<h2 id=\"开始\"><a href=\"#开始\" class=\"headerlink\" title=\"开始\"></a>开始</h2><h3 id=\"1-准备工作\"><a href=\"#1-准备工作\" class=\"headerlink\" title=\"1. 准备工作\"></a>1. 准备工作</h3><p>首先我们在basicFunction的chat指令函数里的tryCatch部分写上这些代码，图片中的抓取报错函数示例是 <code>read_file()</code>函数，输入的参数是path，文件路径；返回值为文件内容。<br><img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-28/1653713607-498189-screenshot-2022-05-28-12-41-00-92.jpg\"><br>这段代码的意思是如果报错信息里有nil这个字符串那返回自定义报错回复内容，否则返回read_file函数的返回内容。</p>\n<h3 id=\"2-第一次测试\"><a href=\"#2-第一次测试\" class=\"headerlink\" title=\"2.第一次测试\"></a>2.第一次测试</h3><p>接着输入 <code>#basicFunction:tryCatch</code>，不带任何参数，它等效于 <code>#basicFunction:read_file</code>接着的确报错了，但是因为 <code>read_file()</code>函数的path参数为空，报错信息中有nil字符串，于是被替换成了预先写好的自定义报错回复内容。<br>接着我使用 <code>#basicFunction:read_file myDiary.txt</code> 查看了此文件，由于这个文件并不存在，于是krypton返回了read_file里写好的自定义回复。<br><img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-28/1653713518-807281-74092e56946e00a4.png\"></p>\n<h3 id=\"3-修改\"><a href=\"#3-修改\" class=\"headerlink\" title=\"3.修改\"></a>3.修改</h3><p>那么我们使用 <code>#basicFunction:write_file myDiary.txt [内容]</code>来创建这个文件并且写下点什么<del>烂人诅咒</del><br><img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-28/1653713557-476439-432aa460c37a0fe9.png\"></p>\n<h3 id=\"4-第二次测试\"><a href=\"#4-第二次测试\" class=\"headerlink\" title=\"4.第二次测试\"></a>4.第二次测试</h3><p>已经写好了此文件，我们再用 <code>#basicFunction:read_file myDiary.txt</code>查看一下，来确保有此文件并且写入了内容。<br><img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-28/1653713564-665112-3aa06a678e8679f3.png\"></p>\n<h3 id=\"5-第三次测试\"><a href=\"#5-第三次测试\" class=\"headerlink\" title=\"5.第三次测试\"></a>5.第三次测试</h3><p>一切顺利，这时候我们再输入正确的指令来试试抓取报错<br><img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-28/1653713588-190887-7b41211a21a97483.png\"><br>因为这次输入了参数，即 <code>#basicFunction:tryCatch myDiary.txt</code>等效于 <code>#basicFunction:read_file myDiary.txt</code>，所以顺理成章的返回了里面的文本内容。</p>\n<h2 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h2><p>附上tryCatch函数的内容，如下:</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-----------------------------------------------------[15]:</span></span><br><span class=\"line\"><span class=\"comment\">-- 功能：监听错误报告如有则反馈</span></span><br><span class=\"line\"><span class=\"comment\">-- 参数：函数名</span></span><br><span class=\"line\"><span class=\"comment\">-- 返回：错误信息</span></span><br><span class=\"line\"><span class=\"comment\">-- 说明：lua有两个函数可以捕获异常，分别是pcall(fun[,arg1,...])和xpcall(fun,errfun,[,arg1,...])，对比这两个函数,xpcall多了异常处理，这里仅采用pcall()做示例</span></span><br><span class=\"line\">tryCatch = <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(fun,arg1,arg2,arg3,arg4,arg5)</span></span></span><br><span class=\"line\">  <span class=\"keyword\">local</span> ret,errMessage=<span class=\"built_in\">pcall</span>(fun,arg1,arg2,arg3,arg4,arg5);</span><br><span class=\"line\">  wrong=ret <span class=\"keyword\">and</span> <span class=\"string\">&quot;false&quot;</span> <span class=\"keyword\">or</span> <span class=\"string\">&quot;true&quot;</span></span><br><span class=\"line\">  <span class=\"comment\">--print(&quot;是否错误:\\n&quot;..错误..&quot; \\n\\n出错信息:\\n&quot; .. (errMessage or &quot;无&quot;));</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> wrong==<span class=\"string\">&quot;true&quot;</span> <span class=\"keyword\">then</span><span class=\"comment\">--错误提示</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> ret,errMessage=<span class=\"built_in\">pcall</span>(fun,arg1,arg2,arg3,arg4,arg5)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;\\n错误详情：\\n&quot;</span>..errMessage</span><br><span class=\"line\">  <span class=\"keyword\">else</span><span class=\"comment\">--无错误正常执行</span></span><br><span class=\"line\">    ret,back=<span class=\"built_in\">pcall</span>(fun,arg1,arg2,arg3,arg4,arg5);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;没有错误发生，返回值如下:\\n&quot;</span>..back</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>",
            "tags": [
                "Dice"
            ]
        },
        {
            "id": "https://cypress.github.io/2022/06/18/chat-ActObjectValue-2.0/",
            "url": "https://cypress.github.io/2022/06/18/chat-ActObjectValue-2.0/",
            "title": "chat-ActObjectValue 2.0",
            "date_published": "2022-06-17T16:00:00.000Z",
            "content_html": "<details class=\"note \"><summary><p>secondary</p>\n</summary>\n<p><strong>NOTICE</strong><br>2.0 或许在明天就出了？</p>\n\n</details>\n\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><blockquote>\n<p>说句实话在昨天2.0也只是个创建了一个空文件夹的存在，但是今天突然就写完了，并且写得彻彻底底的，总之能用便是了！</p>\n</blockquote>\n<p>只需要两步即可完成操作</p>\n<h2 id=\"开始\"><a href=\"#开始\" class=\"headerlink\" title=\"开始\"></a>开始</h2><h3 id=\"添加回复命令\"><a href=\"#添加回复命令\" class=\"headerlink\" title=\"添加回复命令\"></a>添加回复命令</h3><p>在开始之前，你需要对自己家的骰娘输入以下命，其中，<code>require &quot;catchError&quot;</code>是必须的库，其他可根据需要添加。</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.reply set</span><br><span class=\"line\">Prefix=#</span><br><span class=\"line\">Lua=</span><br><span class=\"line\"><span class=\"built_in\">require</span> <span class=\"string\">&quot;catchError&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">require</span> <span class=\"string\">&quot;basicFunction&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"built_in\">load</span>(<span class=\"string\">&quot;return &quot;</span>..<span class=\"built_in\">string</span>.<span class=\"built_in\">gsub</span>(msg.fromMsg,<span class=\"number\">2</span>))()</span><br></pre></td></tr></table></figure>\n\n<p>好的，目前你已经完成了三分之二了！<br>接下来让我们完成最后一步操作。</p>\n<h3 id=\"安装库\"><a href=\"#安装库\" class=\"headerlink\" title=\"安装库\"></a>安装库</h3><p>1.下载<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXJodWIuY29tL2N5cHJlc3MwNTIy\">catchError<i class=\"fa fa-external-link-alt\"></i></span><br>2.将lua库丢进<code>Diceki\\lua\\</code>文件夹下<br>3.在聊天窗口使用<code>.system load</code>命令</p>\n",
            "tags": [
                "Dice"
            ]
        },
        {
            "id": "https://cypress.github.io/2022/06/11/chat-ActObjectValue-1.0/",
            "url": "https://cypress.github.io/2022/06/11/chat-ActObjectValue-1.0/",
            "title": "chat-ActObjectValue 1.0",
            "date_published": "2022-06-11T10:57:18.000Z",
            "content_html": "<blockquote>\n<p>使用《署名—非商业性使用—相同方式共享 4.0 协议国际版》（CC BY-NC-SA 4.0）进行授权<br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC9sZWdhbGNvZGUuemgtSGFucw==\">https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode.zh-Hans<i class=\"fa fa-external-link-alt\"></i></span><br>许可协议：CC BY-NC-SA 4.0<br>声明：本脚本适合<strong>有一定脚本编写基础</strong>的master使用，所造成的一切损失作者概不负责。</p>\n</blockquote>\n<div class=\"note warning\"><p><strong>WARNING</strong><br>1.0已不再更新，或许你可以期待一下<a href=\"https://cypress0522.github.io/2022/06/18/chat-ActObjectValue-2.0\"><strong>2.0</strong></a>？</p>\n</div>\n\n<h3 id=\"基本信息\"><a href=\"#基本信息\" class=\"headerlink\" title=\"基本信息\"></a>基本信息</h3><ul>\n<li>默认设置参数输入格式：#setUserConf <user_qq> <Conf_name> <value><br>清空和获取同理。</li>\n<li>注意：必须写UserConf或者UserToday，否则不输出。</li>\n<li>作者：简律纯</li>\n<li>联系方式：qq:A2C29K9</li>\n<li>版本：1.0(FINAL)</li>\n<li>更新日期：2022/6/16</li>\n</ul>\n<blockquote>\n<p>关键词：<code>#set</code> <code>#get</code> <code>#help log</code> <code>#help chataov</code></p>\n</blockquote>\n<h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2N5cHJlc3MwNTIyL2N5cHJlc3MwNTIyLmdpdGh1Yi5pby9yZWxlYXNlcy90YWcvY2hhdC1BY3RPYmplY3RWYWx1ZQ==\">chat-ActObjectValue.zip<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>在测试时总会遇到要重置或获取或设置某个用户配置的情况，但苦于没有这方面的指令，所以写了一个，目前可以在聊天窗口中设置用户全局配置或当日配置。<br>当然，你也可以使用更多花里胡哨的东西。</p>\n<p><img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-04-22/1650594557-426212-4acb8e97ccd6fe5a.png\"><br><img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-01/1651378789-731493-e5371e816c74ee6.png\"></p>\n<blockquote>\n<p>清 空 可 使 用 set nil</p>\n</blockquote>\n<h2 id=\"进阶用法\"><a href=\"#进阶用法\" class=\"headerlink\" title=\"进阶用法\"></a>进阶用法</h2><ul>\n<li>Chat-AOV；</li>\n</ul>\n<p>1.赋予所有人权限：<br><code>#setUserConf &lt;DiceQQ&gt; &lt;chat_perm&gt; 1</code><br>2.赋予单个用户权限：<br><code>.user trust &lt;用户&gt; 4</code></p>\n<ul>\n<li>Dice；</li>\n</ul>\n<p>1.查看|修改 jrrp：<br><code>#get|setUserToday &lt;用户&gt; &lt;jrrp&gt;</code><br>2.查看|修改 用户信任trust：<br><code>#get|setUserConf &lt;用户&gt; &lt;trust&gt;</code><br>3.查看|修改 群配置rc房规：<br><code>#get|setGroupConf &lt;群号&gt; &lt;rc房规&gt; &lt;参数&gt;</code><br>4.清空/重置 配置：<br><code>#setUserConf 2753364619 好感度 nil</code></p>\n<h2 id=\"TODO-list\"><a href=\"#TODO-list\" class=\"headerlink\" title=\"TODO list\"></a>TODO list</h2><ul>\n<li>各类报错回复</li>\n<li>设置数据类型</li>\n</ul>\n<h2 id=\"关于5-8更新内容的示例\"><a href=\"#关于5-8更新内容的示例\" class=\"headerlink\" title=\"关于5.8更新内容的示例\"></a>关于5.8更新内容的示例</h2><p>5.8重点更新了记录的查看方式，新增了 <code>start_crrt</code>配置。</p>\n<p>使用命令 <code>#setUserConf &lt;骰娘QQ&gt; start_crrt &lt;值&gt; </code>进行更改，其更改将会改变 <code>#help log</code>的返回内容：<br><code>start_crrt</code> 默认为0，这时查看日志会显示最新的一条。<br><img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-07/1651953020-849510-29e7e2d45c34a60b.png\"><br>当 <code>start_crrt</code>修改为1至5范围内的数字，会显示最近的2至6条记录。<br><img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-07/1651953344-615701-574c97559bc3ae34.png\"><br>设置范围6至30时会显示对应数量的记录，但不是在群里，bot会私发给指令发出者。<br><img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-07/1651953608-811583-315f836bf1e21646.png\"><br><img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-07/1651953634-841540-1a024626f1fb6728.png\"></p>\n<h2 id=\"如何安装使用？\"><a href=\"#如何安装使用？\" class=\"headerlink\" title=\"如何安装使用？\"></a>如何安装使用？</h2><p>1.解压安装包<br>2.将安装包内文件与文件夹全部放入plugin文件夹<br>3.使用命令<code>.system load</code></p>\n",
            "tags": [
                "Dice"
            ]
        },
        {
            "id": "https://cypress.github.io/2022/06/11/basicFunction/",
            "url": "https://cypress.github.io/2022/06/11/basicFunction/",
            "title": "basicFunction",
            "date_published": "2022-06-11T10:52:57.000Z",
            "content_html": "<blockquote>\n<p>使用《署名—非商业性使用—相同方式共享 4.0 协议国际版》（CC BY-NC-SA 4.0）进行授权<br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC9sZWdhbGNvZGUuemgtSGFucw==\">https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode.zh-Hans<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<blockquote>\n<p>作者：简律纯<br>联系方式：qq:A2C29K9<br>更新日期：2022/5/15<br>关键词： <code>#basicFunction:</code></p>\n</blockquote>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p><em>basicFunction</em> 的定位非常清晰，那就是作为脚本制作者的配置扩展，通过在lua脚本中 <code>require &quot;basicFunction&quot;</code>使用其中的函数。</p>\n<h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2N5cHJlc3MwNTIyL2N5cHJlc3MwNTIyLmdpdGh1Yi5pby9yZWxlYXNlcy90YWcvYmFzaWNGdW5jdGlvbg==\">basicFunction-alpha(2).zip<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><p> 衷心希望大家指正其中的错误和不足，促使 <em>basicFunction</em> 不断进步完善</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><h3 id=\"搭载\"><a href=\"#搭载\" class=\"headerlink\" title=\"搭载\"></a>搭载</h3><p><em>——开始之前的一些必要工作。</em><br>1.下载 _basicFunction_并解压得到 _basicFunction.lua_文件<br>2.将解压得到的 _basicFunction.lua_文件放入 DiceQQ\\plugin\\文件夹<br>3.在确保前两步万无一失的情况下回到聊天窗口使用 <code>.system load</code>命令重载 _basicFunction_脚本</p>\n<blockquote>\n<p>看到这里，你已经成功安装完成了！接下来让我们快速开始吧！</p>\n</blockquote>\n<h3 id=\"在聊天窗口使用\"><a href=\"#在聊天窗口使用\" class=\"headerlink\" title=\"在聊天窗口使用\"></a>在聊天窗口使用</h3><p> <em>为了方便测试函数，简律纯特别的写了一个聊天窗口指令，用于测试这些函数</em></p>\n<h4 id=\"gt-xxx-basicFunction-help\"><a href=\"#gt-xxx-basicFunction-help\" class=\"headerlink\" title=\"&gt; [xxx]. #basicFunction:help\"></a>&gt; [xxx]. <code>#basicFunction:help</code></h4><p>这是一条用于获取帮助与更新的指令，不建议在群聊中使用。<br><img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652528156-326881-4ce86491377f0bf4.png\"></p>\n<h4 id=\"gt-1-basicFunction-table-draw\"><a href=\"#gt-1-basicFunction-table-draw\" class=\"headerlink\" title=\"&gt; [1] #basicFunction:table_draw\"></a>&gt; [1] <code>#basicFunction:table_draw</code></h4><ul>\n<li>功能：随机抽取一条数组内元素</li>\n<li>参数：数组</li>\n<li>返回：字符串</li>\n<li>示例：<img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652528703-218364-341fe90b2615ec.png\"></li>\n</ul>\n<h4 id=\"gt-2-basicFunction-num-or-string\"><a href=\"#gt-2-basicFunction-num-or-string\" class=\"headerlink\" title=\"&gt;[2] #basicFunction:num_or_string\"></a>&gt;[2] <code>#basicFunction:num_or_string</code></h4><ul>\n<li>功能：判断是否为num类型，若是则自动转为num类型，否则为string</li>\n<li>参数：x:待转换字符串</li>\n<li>返回：number类型数据或string类型数据</li>\n<li>示例：<img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652529015-469470-1a7836efde35a6a8.png\"></li>\n</ul>\n<h4 id=\"gt-3-basicFunction-getAtQQ\"><a href=\"#gt-3-basicFunction-getAtQQ\" class=\"headerlink\" title=\"&gt;[3] #basicFunction:getAtQQ\"></a>&gt;[3] <code>#basicFunction:getAtQQ</code></h4><ul>\n<li>功能：取at对象的qq</li>\n<li>参数：字符串（尤指CQ码）</li>\n<li>返回：文本形式的qq号</li>\n<li>示例：<img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652531356-998104-7ef52e1b54b3e7ce.png\"></li>\n</ul>\n<h4 id=\"gt-4-basicFunction-write-file\"><a href=\"#gt-4-basicFunction-write-file\" class=\"headerlink\" title=\"&gt;[4] #basicFunction:write_file\"></a>&gt;[4] <code>#basicFunction:write_file</code></h4><ul>\n<li>功能：追加写文件，没有则创建</li>\n<li>参数：文件路径，文件内容</li>\n<li>返回：提示文本</li>\n<li>说明：文件根目录DiceQQ//，我在生成文件时写了点注释，就比如会在当文件读写时在第一行特别注明文件名。</li>\n<li>示例：<img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652532311-215587-35aa6d41a8469dd9.png\"><br><img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652532306-79898-312b586e9182eb27.png\"></li>\n</ul>\n<h4 id=\"gt-5-basicFunction-read-file\"><a href=\"#gt-5-basicFunction-read-file\" class=\"headerlink\" title=\"&gt;[5] #basicFunction:read_file\"></a>&gt;[5] <code>#basicFunction:read_file</code></h4><ul>\n<li>功能：读取文件全部内容</li>\n<li>参数：文件路径</li>\n<li>返回：有内容则返回字符串否则返回错误提示</li>\n<li>示例：<img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652532848-201463-3b032d5b2cba1d44.png\"></li>\n</ul>\n<h4 id=\"gt-6-basicFunction-filter-spec-chars\"><a href=\"#gt-6-basicFunction-filter-spec-chars\" class=\"headerlink\" title=\"&gt;[6] #basicFunction:filter_spec_chars\"></a>&gt;[6] <code>#basicFunction:filter_spec_chars</code></h4><ul>\n<li>功能：捕获并提取所有中文，合并后输出</li>\n<li>参数：待捕获中文的字符串</li>\n<li>返回：所有中文合并后的字符串</li>\n<li>示例：<img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652533253-492295-2c56f7627a54c1e4.png\"></li>\n</ul>\n<h4 id=\"gt-7-basicFunction-getFileName\"><a href=\"#gt-7-basicFunction-getFileName\" class=\"headerlink\" title=\"&gt;[7] #basicFunction:getFileName\"></a>&gt;[7] <code>#basicFunction:getFileName</code></h4><ul>\n<li>功能：取文件名，有扩展名</li>\n<li>参数：文件路径</li>\n<li>返回：字符串</li>\n<li>示例：<img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652535078-993169-6fc947dd5fe881d3.png\"></li>\n</ul>\n<h4 id=\"gt-8-basicFunction-getFileName2\"><a href=\"#gt-8-basicFunction-getFileName2\" class=\"headerlink\" title=\"&gt;[8] #basicFunction:getFileName2\"></a>&gt;[8] <code>#basicFunction:getFileName2</code></h4><ul>\n<li>功能：取文件名，无扩展名</li>\n<li>参数：文件路径</li>\n<li>返回：字符串</li>\n<li>示例：<img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652535090-491912-475b2a113fb5d0a2.png\"></li>\n</ul>\n<h4 id=\"gt-9-basicFunction-utfStrLen\"><a href=\"#gt-9-basicFunction-utfStrLen\" class=\"headerlink\" title=\"&gt;[9] #basicFunction:utfStrLen\"></a>&gt;[9] <code>#basicFunction:utfStrLen</code></h4><ul>\n<li>功能：返回文本中的字符总数目</li>\n<li>参数：字符串</li>\n<li>返回：数字</li>\n<li>示例：<img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652536608-701822-3e9f7c7fe9aa2e6d.png\"></li>\n</ul>\n<h4 id=\"gt-10-basicFunction-MD5\"><a href=\"#gt-10-basicFunction-MD5\" class=\"headerlink\" title=\"&gt;[10] #basicFunction:MD5\"></a>&gt;[10] <code>#basicFunction:MD5</code></h4><ul>\n<li>功能：转字符串为MD5</li>\n<li>参数：待转换字符串</li>\n<li>返回：MD5</li>\n<li>示例：<img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652537139-681577-35d6b69778ddd24a.png\"><br><img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652537160-810141-screenshot-2022-05-14-22-00-48-36.jpg\"><br><img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652537170-642829-screenshot-2022-05-14-22-01-10-15.jpg\"></li>\n</ul>\n<h4 id=\"gt-11-basicFunction-table-exists\"><a href=\"#gt-11-basicFunction-table-exists\" class=\"headerlink\" title=\"&gt;[11] #basicFunction:table_exists\"></a>&gt;[11] <code>#basicFunction:table_exists</code></h4><ul>\n<li>功能：判断数组中是否存在指定字符串</li>\n<li>参数：数组，查找的字符串</li>\n<li>返回：有则为true，没有则什么都不返回</li>\n<li>示例：<br>先看一下内部代码，设定了一个tables<br><img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652541688-375470-screenshot-2022-05-14-23-19-42-70.jpg\"><br>接着输入看看效果<br><img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652541709-390654-644c1b552d1efffa.png\"></li>\n</ul>\n<h4 id=\"gt-12-basicFunction-encodeBase64\"><a href=\"#gt-12-basicFunction-encodeBase64\" class=\"headerlink\" title=\"&gt;[12] #basicFunction:encodeBase64\"></a>&gt;[12] <code>#basicFunction:encodeBase64</code></h4><ul>\n<li>功能：返回字符串base64加密后的文本</li>\n<li>参数：待加密字符串</li>\n<li>返回：base64加密后文本</li>\n<li>说明：因为不支持 <code>math.pow</code> 所以把写好的解密删了</li>\n<li>示例：<img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652542191-759474-40c8bacd80597d41.png\"><br><img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652537170-642829-screenshot-2022-05-14-22-01-10-15.jpg\"><br><img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652537160-810141-screenshot-2022-05-14-22-00-48-36.jpg\"></li>\n</ul>\n<h4 id=\"gt-13-basicFunction-string-split\"><a href=\"#gt-13-basicFunction-string-split\" class=\"headerlink\" title=\"&gt;[13] #basicFunction:string.split\"></a>&gt;[13] <code>#basicFunction:string.split</code></h4><ul>\n<li>功能：分割字符串</li>\n<li>参数：待分割字符串，分隔符</li>\n<li>返回：字符串表</li>\n<li>示例：<img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652551923-200447-7c2b18bc815913ea.png\"></li>\n</ul>\n<h4 id=\"gt-14-basicFunction-string-count\"><a href=\"#gt-14-basicFunction-string-count\" class=\"headerlink\" title=\"&gt;[14] #basicFunction:string.count\"></a>&gt;[14] <code>#basicFunction:string.count</code></h4><ul>\n<li>功能：统计字符串中字符的个数</li>\n<li>参数：待统计的字符串</li>\n<li>返回：总字符个数、英文字符数、中文字符数</li>\n<li>示例：<img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652544106-120444-2bc227485b07f827.png\"></li>\n</ul>\n<h4 id=\"gt-15-basicFunction-string-width\"><a href=\"#gt-15-basicFunction-string-width\" class=\"headerlink\" title=\"&gt;[15] #basicFunction:string.width\"></a>&gt;[15] <code>#basicFunction:string.width</code></h4><ul>\n<li>功能：计算字符串的宽度</li>\n<li>参数：字符串</li>\n<li>返回：数字</li>\n<li>说明：这里一个中文等于两个英文，后面的情况同理，此函数和 _utfStrLen_原理类似</li>\n<li>示例：<img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652554310-333254-20bf853ca8430fd0.png\"></li>\n</ul>\n<h4 id=\"gt-16-basicFunction-string-tocenter\"><a href=\"#gt-16-basicFunction-string-tocenter\" class=\"headerlink\" title=\"&gt;[16] #basicFunction:string.tocenter\"></a>&gt;[16] <code>#basicFunction:string.tocenter</code></h4><ul>\n<li>功能: 把字符串扩展为长度为len,居中对齐, 其他地方以filledChar补齐</li>\n<li>参数: 需要被扩展的字符、数字、字符串表，被扩展成的长度，填充字符（可以为空）</li>\n<li>返回：字符串</li>\n<li>示例：<img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652553472-701179-49139d6f69a2cd50.png\"></li>\n</ul>\n<h4 id=\"gt-3-14-basicFunction-string-toleft\"><a href=\"#gt-3-14-basicFunction-string-toleft\" class=\"headerlink\" title=\"&gt;[3+14] #basicFunction:string.toleft\"></a>&gt;[3+14] <code>#basicFunction:string.toleft</code></h4><ul>\n<li>功能: 把字符串扩展为长度为len,左对齐, 其他地方用filledChar补齐</li>\n<li>参数：需要被扩展的字符、数字、字符串表，被扩展成的长度，填充字符（可以为空）</li>\n<li>返回：字符串</li>\n<li>说明：中文相当于2个英文</li>\n<li>示例：<img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652553319-940907-3d59e78bd1371f52.png\"></li>\n</ul>\n<h4 id=\"gt-18-basicFunction-string-toright\"><a href=\"#gt-18-basicFunction-string-toright\" class=\"headerlink\" title=\"&gt;[18] #basicFunction:string.toright\"></a>&gt;[18] <code>#basicFunction:string.toright</code></h4><ul>\n<li>功能: 把字符串扩展为长度为len,右对齐, 其他地方用filledChar补齐</li>\n<li>参数：需要被扩展的字符、数字、字符串表，被扩展成的长度，填充字符（可以为空）</li>\n<li>返回：字符串</li>\n<li>示例：<img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652553542-607083-2e26d59c330482.png\"></li>\n</ul>\n<h4 id=\"gt-19-basicFunction-string-ltrim\"><a href=\"#gt-19-basicFunction-string-ltrim\" class=\"headerlink\" title=\"&gt;[19] #basicFunction:string.ltrim\"></a>&gt;[19] <code>#basicFunction:string.ltrim</code></h4><ul>\n<li>功能：对齐，去除通配符</li>\n<li>参数：文本</li>\n<li>返回：文本</li>\n<li>示例：暂无</li>\n</ul>\n<h4 id=\"gt-20-basicFunction-string-rtrim\"><a href=\"#gt-20-basicFunction-string-rtrim\" class=\"headerlink\" title=\"&gt;[20] #basicFunction:string.rtrim\"></a>&gt;[20] <code>#basicFunction:string.rtrim</code></h4><ul>\n<li>功能：对齐，去除通配符</li>\n<li>参数：文本</li>\n<li>返回：文本</li>\n<li>示例：暂无</li>\n</ul>\n<h4 id=\"gt-21-basicFunction-string-trim\"><a href=\"#gt-21-basicFunction-string-trim\" class=\"headerlink\" title=\"&gt;[21] #basicFunction:string.trim\"></a>&gt;[21] <code>#basicFunction:string.trim</code></h4><ul>\n<li>功能：对齐，去除通配符</li>\n<li>参数：文本</li>\n<li>返回：文本</li>\n<li>示例：暂无</li>\n</ul>\n<h4 id=\"gt-22-basicFunction-ranStr\"><a href=\"#gt-22-basicFunction-ranStr\" class=\"headerlink\" title=\"&gt;[22] #basicFunction:ranStr\"></a>&gt;[22] <code>#basicFunction:ranStr</code></h4><ul>\n<li>功能：随机输出字符串</li>\n<li>参数：数字（输出个数）</li>\n<li>返回：字符串</li>\n<li>示例：<img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652554731-126125-39ebb8a73aeede9.png\"></li>\n</ul>\n<h4 id=\"gt-23-basicFunction-tryCatch\"><a href=\"#gt-23-basicFunction-tryCatch\" class=\"headerlink\" title=\"&gt;[23] #basicFunction:tryCatch\"></a>&gt;[23] <code>#basicFunction:tryCatch</code></h4><ul>\n<li>功能：监听错误报告如有则反馈</li>\n<li>参数：函数名</li>\n<li>返回：错误信息</li>\n<li>说明：lua有两个函数可以捕获异常，分别是pcall(fun[,arg1,…])和xpcall(fun,errfun,[,arg1,…])，对比这两个函数,xpcall多了异常处理，这里仅采用pcall()做示例</li>\n<li>示例：在没有改代码的情况下如果直接输入参数，将把输入的文本当做函数名找错<img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652555008-125097-45b942fe53a293c.png\"><br>我们看代码部分，我已经修改好了参数，好，现在它将会调用自己了<img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652555367-976137-img20220515030858.jpg\"><br>让我们猜一下会输出什么？<br><img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652555401-577693-5f1c2329f7089d24.png\"><br>是啊，没有错误，因为是奔着找错的目的执行 _找错_函数，当它能完整运行时自然是没有错误，简言之：</li>\n</ul>\n<p>错误的错误就是没有错误（好耶！我又说了一句凡人名言）</p>\n<p>那么，换成别的函数还会如此吗？<br>这里以 <em>bubbleSort</em> 函数为例<em>因为很快就要讲到ta了</em><br><img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652555938-996780-screenshot-2022-05-15-03-18-06-41.jpg\"><br>很好，果然不负众望的报错并让krypton拦截了<br><img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652556076-36222-1f5d440399af905f.png\"><br>那么输入参数会发生什么？<br>…to be continue</p>\n<h4 id=\"gt-24-basicFunction-bubbleSort\"><a href=\"#gt-24-basicFunction-bubbleSort\" class=\"headerlink\" title=\"&gt;[24] #basicFunction:bubbleSort\"></a>&gt;[24] <code>#basicFunction:bubbleSort</code></h4><ul>\n<li>功能：冒泡（升序）排序</li>\n<li>参数：tab:目标表</li>\n<li>返回：排好序的文本</li>\n<li>示例：<br><code>tab = &#123;3, 4, 61, 7, 5, 8, 56, 14, 11, 10&#125; return bubbleSort(tab)</code><br><img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652556743-633251-36c62b11467b00a2.png\"></li>\n</ul>\n<h4 id=\"gt-25-basicFunction-load\"><a href=\"#gt-25-basicFunction-load\" class=\"headerlink\" title=\"&gt;[25] #basicFunction:load\"></a>&gt;[25] <code>#basicFunction:load</code></h4><ul>\n<li>功能：安全执行lua语句</li>\n<li>说明：暂时弃用</li>\n<li>示例：暂无</li>\n</ul>\n<h4 id=\"gt-26-basicFunction-sortTable-delRepeat\"><a href=\"#gt-26-basicFunction-sortTable-delRepeat\" class=\"headerlink\" title=\"&gt;[26] #basicFunction:sortTable_delRepeat\"></a>&gt;[26] <code>#basicFunction:sortTable_delRepeat</code></h4><ul>\n<li>功能：将重复出现的数字全部删除(后续数字往前移)</li>\n<li>参数：tab:数组</li>\n<li>返回：去完重的字符串（多半还是降序的）</li>\n<li>示例：<img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652557118-960232-5fe3b9332f1eabbb.png\"></li>\n</ul>\n<h4 id=\"gt-27-1-basicFunction-Round\"><a href=\"#gt-27-1-basicFunction-Round\" class=\"headerlink\" title=\"&gt;[27-1] #basicFunction:Round\"></a>&gt;[27-1] <code>#basicFunction:Round</code></h4><ul>\n<li>功能：四舍五入(常用)</li>\n<li>参数：num:待计算数字</li>\n<li>返回：计算结果</li>\n<li>示例：<img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652557301-733453-57f1940480749985.png\"></li>\n</ul>\n<h4 id=\"gt-27-2-basicFunction-Round2\"><a href=\"#gt-27-2-basicFunction-Round2\" class=\"headerlink\" title=\"&gt;[27-2] #basicFunction:Round2\"></a>&gt;[27-2] <code>#basicFunction:Round2</code></h4><ul>\n<li>功能：四舍五入(奇进偶舍)</li>\n<li>参数：num:待计算数字 i:保留几位小数</li>\n<li>返回：计算结果</li>\n<li>示例：<img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652557524-430485-37f48a1ee6238e19.png\"></li>\n</ul>\n<h4 id=\"gt-28-basicFunction-Multiply\"><a href=\"#gt-28-basicFunction-Multiply\" class=\"headerlink\" title=\"&gt;[28] #basicFunction:Multiply\"></a>&gt;[28] <code>#basicFunction:Multiply</code></h4><ul>\n<li>功能：相乘，同时判断了是否有null值</li>\n<li>参数：都看得懂吧//两个数字…</li>\n<li>返回：计算结果</li>\n<li>示例：<img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652557646-168592-1b35afe337a9742d.png\"></li>\n</ul>\n<h4 id=\"gt-29-basicFunction-Divide\"><a href=\"#gt-29-basicFunction-Divide\" class=\"headerlink\" title=\"&gt;[29] #basicFunction:Divide\"></a>&gt;[29] <code>#basicFunction:Divide</code></h4><ul>\n<li>功能：相除</li>\n<li>参数：denominator:除数 numerator:被除数</li>\n<li>返回：计算结果</li>\n<li>示例：<img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652557740-451-6ccd7840db133641.png\"></li>\n</ul>\n<h4 id=\"gt-30-1-basicFunction-Ceil\"><a href=\"#gt-30-1-basicFunction-Ceil\" class=\"headerlink\" title=\"&gt;[30-1] #basicFunction:Ceil\"></a>&gt;[30-1] <code>#basicFunction:Ceil</code></h4><ul>\n<li>功能：取整</li>\n<li>参数：数字</li>\n<li>返回：结果</li>\n<li>示例：<img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652557790-14329-4f2b567f4dcf84d9.png\"></li>\n</ul>\n<h4 id=\"gt-30-2-basicFunction-Ceil2\"><a href=\"#gt-30-2-basicFunction-Ceil2\" class=\"headerlink\" title=\"&gt;[30-2] #basicFunction:Ceil2\"></a>&gt;[30-2] <code>#basicFunction:Ceil2</code></h4><ul>\n<li>参数：数字</li>\n<li>返回：结果</li>\n<li>说明：第二种取整思路</li>\n<li>示例：<img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652557836-897466-682bdcbbe4e50ec4.png\"></li>\n</ul>\n<h4 id=\"gt-31-basicFunction-unicode2Chinese\"><a href=\"#gt-31-basicFunction-unicode2Chinese\" class=\"headerlink\" title=\"&gt;[31] #basicFunction:unicode2Chinese\"></a>&gt;[31] <code>#basicFunction:unicode2Chinese</code></h4><ul>\n<li>功能：利用JSON解析器把Unicode转中文汉字</li>\n<li>参数：uni:完整的json格式Unicode码</li>\n<li>返回：汉字字符串</li>\n<li>示例：<img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652558928-339373-407db05212e7f332.png\"></li>\n</ul>\n<h4 id=\"gt-32-basicFunction-stamp2Time\"><a href=\"#gt-32-basicFunction-stamp2Time\" class=\"headerlink\" title=\"&gt;[32] #basicFunction:stamp2Time\"></a>&gt;[32] <code>#basicFunction:stamp2Time</code></h4><ul>\n<li>功能：时间戳转时间</li>\n<li>参数：Stamp:时间戳</li>\n<li>返回：字符串</li>\n<li>示例：<img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652559106-59803-2aba66b7a6713455.png\"></li>\n</ul>\n<h4 id=\"gt-33-basicFunction-Match\"><a href=\"#gt-33-basicFunction-Match\" class=\"headerlink\" title=\"&gt;[33] #basicFunction:Match\"></a>&gt;[33] <code>#basicFunction:Match</code></h4><ul>\n<li>功能：匹配截取字符串</li>\n<li>参数：msg:待匹配的字符串 num:截取位置</li>\n<li>说明：汉字长度为2，特别注意</li>\n<li>示例：<img src=\"https://dice-forum.s3.ap-northeast-1.amazonaws.com/2022-05-14/1652559448-296157-4861fe8be91b307b.png\"></li>\n</ul>\n<h4 id=\"gt-34-1-basicFunction-fitemSort\"><a href=\"#gt-34-1-basicFunction-fitemSort\" class=\"headerlink\" title=\"&gt;[34-1] #basicFunction:fitemSort\"></a>&gt;[34-1] <code>#basicFunction:fitemSort</code></h4><ul>\n<li>功能：取数据存入数组</li>\n<li>参数：字符串</li>\n<li>返回：数组</li>\n<li>示例：暂无</li>\n</ul>\n<h4 id=\"gt-34-2-basicFunction-ffitemSort\"><a href=\"#gt-34-2-basicFunction-ffitemSort\" class=\"headerlink\" title=\"&gt;[34-2] #basicFunction:ffitemSort\"></a>&gt;[34-2] <code>#basicFunction:ffitemSort</code></h4><ul>\n<li>功能：取数据存入数组</li>\n<li>参数：字符串</li>\n<li>返回：数组</li>\n<li>示例：暂无</li>\n</ul>\n<h4 id=\"gt-FUNCTION-INDEX-amp-LIST\"><a href=\"#gt-FUNCTION-INDEX-amp-LIST\" class=\"headerlink\" title=\"&gt; FUNCTION INDEX&amp;LIST:\"></a>&gt; FUNCTION INDEX&amp;LIST:</h4><p>[1]table_draw(tab) LINE:48<br>[2]num_or_string(x) LINE:55<br>[3]getAtQQ(str) LINE:67<br>[4]write_file(path, text) LINE:79<br>[5]read_file(path) LINE:88<br>[6]filter_spec_chars(s) LINE:103<br>[7]getFileName(path) LINE:133<br>[8]getFileName2(path) LINE:140<br>[9]utfstrlen(str) LINE:147<br>[10]MD5(str) LINE:168<br>[11]table_exists(tables,value) LINE:395<br>[12]encodeBase64(source_str) LINE:408<br>[13]string.split(str, delimiter) LINE:443<br>[14]string.count(str) LINE:460<br>[15]string.width(str) LINE:470<br>[16]string.tocenter(str, len, filledChar) LINE:479<br>[17]string.toleft(str, len, filledChar) LINE:511<br>[18]string.toright(str, len, filledChar) LINE:540<br>[19]string.ltrim(str) LINE:573<br>[20]string.rtrim(str) LINE:577<br>[21]string.trim(str) LINE:581<br>[22]ranStr(num) LINE:588<br>[23]tryCatch(fun) LINE:604<br>[24]bubbleSort(tab) LINE:620<br>[25]弃用 LINE:646<br>[26]sortTable_delRepeat(tab) LINE:653<br>[27-1]Round(num, i) LINE:672<br>[27-2]Round2(num, i) LINE:681<br>[28]Multiply(num1,num2) LINE:702<br>[29]Divide(denominator,numerator) LINE:718<br>[30-1]Ceil(num) LINE:734<br>[30-2]Ceil2(num) LINE:753<br>[31]unicode2Chinese(uni) LINE:765<br>[32]stamp2Time(Stamp) LINE:782<br>[33]Match(msg,num) LINE:789<br>[34-1]fitemSort(rest) LINE:798<br>[34-2]ffitemSort(rest) LINE:809</p>\n<h3 id=\"在lua编写过程中使用\"><a href=\"#在lua编写过程中使用\" class=\"headerlink\" title=\"在lua编写过程中使用\"></a>在lua编写过程中使用</h3><p>由于时间来不及，在lua中使用的教程与进阶用法将会在日后补齐。<br><strong>to be…</strong></p>\n<h3 id=\"一些实例\"><a href=\"#一些实例\" class=\"headerlink\" title=\"一些实例\"></a>一些实例</h3><p><strong>getAtQQ</strong>的使用：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9mb3J1bS5rb2tvbmEudGVjaC9kLzExNDY=\">【指令脚本】爬/丢/赞<i class=\"fa fa-external-link-alt\"></i></span><br><strong>tryCatch</strong>的使用：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9mb3J1bS5rb2tvbmEudGVjaC9kLzExNjg=\">【指令脚本/思想】巴拉巴拉骰娘自检和偷懒自定义报错什么的<i class=\"fa fa-external-link-alt\"></i></span></p>\n",
            "tags": [
                "Dice"
            ]
        }
    ]
}