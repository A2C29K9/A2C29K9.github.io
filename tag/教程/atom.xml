<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://jyunko.cn</id>
    <title>Cypress - 小柏树 • Posts by &#34;教程&#34; tag</title>
    <link href="https://jyunko.cn" />
    <updated>2022-11-19T00:00:00.000Z</updated>
    <category term="徐州站" />
    <category term="Dice" />
    <category term="教程" />
    <category term="FIXED" />
    <category term="AI" />
    <category term="颜色" />
    <entry>
        <id>https://jyunko.cn/2022/11/19/Lua%E5%8E%9F%E7%94%9F%E5%87%BD%E6%95%B0load%E7%9A%84%E7%BB%A7%E6%89%BF/</id>
        <title>Lua原生函数load的继承性</title>
        <link rel="alternate" href="https://jyunko.cn/2022/11/19/Lua%E5%8E%9F%E7%94%9F%E5%87%BD%E6%95%B0load%E7%9A%84%E7%BB%A7%E6%89%BF/"/>
        <content type="html">&lt;h2 id=&#34;Lua原生函数load的继承性&#34;&gt;&lt;a href=&#34;#Lua原生函数load的继承性&#34; class=&#34;headerlink&#34; title=&#34;Lua原生函数load的继承性&#34;&gt;&lt;/a&gt;&lt;strong&gt;Lua原生函数load的继承性&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;这篇帖子是没有学习目标的，并且更适合有&lt;strong&gt;Lua编写基础&lt;/strong&gt;的人观看。&lt;br&gt;&lt;del&gt;今天就是想不明不白的开始。&lt;/del&gt;&lt;br&gt;关于 &lt;code&gt;load&lt;/code&gt;，如果看过&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9mb3J1bS5rb2tvbmEudGVjaC9kLzEzODY=&#34;&gt;【指令脚本/抛砖引玉】Load: 在聊天窗口使用lua&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt; 那么你或许会对它熟悉一些，此函数是 &lt;code&gt;lua 5.1&lt;/code&gt;就有的东西，作用是加载一个数据块。下面是现今的&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubHVhLm9yZy9tYW51YWwvNS4yL21hbnVhbC5odG1sI3BkZi1sb2Fk&#34;&gt;官方5.2 manual&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;给出的关于它的介绍：&lt;/p&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;load (ld [, source [, mode [, env]]])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Loads a chunk.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;If is a string, the chunk is this string. If is a function, calls it repeatedly to get the chunk pieces. Each call to must return a string that concatenates with previous results. A return of an empty string, nil, or no value signals the end of the chunk. ldldloadld&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;If there are no syntactic errors, returns the compiled chunk as a function; otherwise, returns nil plus the error message.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;If the resulting function has upvalues, the first upvalue is set to the value of , if that parameter is given, or to the value of the global environment. (When you load a main chunk, the resulting function will always have exactly one upvalue, the variable (see §2.2). When you load a binary chunk created from a function (see string.dump), the resulting function can have arbitrary upvalues.) env_ENV&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;source is used as the source of the chunk for error messages and debug information (see §4.9). When absent, it defaults to , if is a string, or to &amp;quot;&amp;quot; otherwise. ldld&amp;#x3D;(load)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;The string controls whether the chunk can be text or binary (that is, a precompiled chunk). It may be the string &amp;quot;&amp;quot; (only binary chunks), &amp;quot;&amp;quot; (only text chunks), or &amp;quot;&amp;quot; (both binary and text). The default is &amp;quot;&amp;quot;.modebtbtbt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;什么意思？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;坦白来说，&lt;strong&gt;就是从字符串或者函数中加载一个代码块为方法并返回。&lt;/strong&gt;——应该不难理解吧？&lt;/p&gt;
&lt;p&gt;但你需要明白以下几点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;load()&lt;/code&gt;返回的是函数,需要调用的话,还需要加括号。&lt;/li&gt;
&lt;li&gt;5.1.x版本 &lt;code&gt;load&lt;/code&gt;方法为 &lt;code&gt;load(func[,chunkname])&lt;/code&gt;从函数中加载，&lt;code&gt;loadstring(str[,chunkname])&lt;/code&gt;从字符串中加载&lt;/li&gt;
&lt;li&gt;5.3.x版本为 &lt;code&gt;load (chunk [, chunkname [, mode [, env]]])&lt;/code&gt;&lt;br&gt;&lt;code&gt;chunk&lt;/code&gt;为函数或字符串&lt;br&gt;&lt;code&gt;mode&lt;/code&gt;为加载模式:”t”文本样式,”b”二进制样式,”bt”二进制和文本模式.&lt;br&gt;&lt;code&gt;env&lt;/code&gt;代码块需要的参数&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;你可以这样对自己的骰娘做个测试&lt;del&gt;（我称此方法为简式测试法）&lt;/del&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在 &lt;code&gt;DiceQQ\plugin\&lt;/code&gt;下新建 &lt;code&gt;test.lua&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;在 &lt;code&gt;DiceQQ\plugin\test.lua&lt;/code&gt;内写上如下代码：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight lua&#34;&gt;&lt;figcaption&gt;&lt;span&gt;test.lua&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;msg_order=&amp;#123;[&lt;span class=&#34;string&#34;&gt;&amp;quot;@&amp;quot;&lt;/span&gt;]=&lt;span class=&#34;string&#34;&gt;&amp;quot;main&amp;quot;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;local&lt;/span&gt; main = &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(msg)&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;load&lt;/span&gt;(msg.fromMsg:&lt;span class=&#34;built_in&#34;&gt;sub&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;))() &lt;span class=&#34;keyword&#34;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ol&gt;
&lt;li&gt;对骰娘发送 &lt;code&gt;.system load&lt;/code&gt;命令重载。&lt;/li&gt;
&lt;li&gt;对骰娘发送 &lt;code&gt;@return msg.fromQQ&lt;/code&gt;，你将会收到自己的QQ。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;其实到这里就是&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9mb3J1bS5rb2tvbmEudGVjaC9kLzEzODY=&#34;&gt;【指令脚本/抛砖引玉】Load: 在聊天窗口使用lua&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt; 的全部内容了。下面进入正题。&lt;br&gt;因为昨天，哦不，今天凌晨喝的有点多，又很奇怪的是我醒的特别早，我大概五点就醒了，然后开始敲代码，也许是酒精的作用吧，我对krypton进行了如下无厘头测试：&lt;/p&gt;
&lt;figure class=&#34;highlight lua&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;tbl=&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tbl[&lt;span class=&#34;string&#34;&gt;&amp;#x27;第1层&amp;#x27;&lt;/span&gt;]=&lt;span class=&#34;string&#34;&gt;&amp;quot;tbl[\&amp;quot;tbl[&amp;#x27;第2层&amp;#x27;]\&amp;quot;]&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tbl[&lt;span class=&#34;string&#34;&gt;&amp;quot;tbl[&amp;#x27;第2层&amp;#x27;]&amp;quot;&lt;/span&gt;]=&lt;span class=&#34;string&#34;&gt;&amp;quot;第3层&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;load&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;return &amp;quot;&lt;/span&gt;..tbl[&lt;span class=&#34;string&#34;&gt;&amp;#x27;第1层&amp;#x27;&lt;/span&gt;])()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;猜猜返回了什么？&lt;/p&gt;
&lt;p&gt;我又进行了推导：&lt;/p&gt;
&lt;figure class=&#34;highlight lua&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;tbl=&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tbl[&lt;span class=&#34;string&#34;&gt;&amp;#x27;第1层&amp;#x27;&lt;/span&gt;]=&lt;span class=&#34;string&#34;&gt;&amp;quot;tbl[\&amp;quot;tbl[&amp;#x27;第2层&amp;#x27;]\&amp;quot;]&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tbl[&lt;span class=&#34;string&#34;&gt;&amp;quot;tbl[&amp;#x27;第2层&amp;#x27;]&amp;quot;&lt;/span&gt;]=&lt;span class=&#34;string&#34;&gt;&amp;quot;tbl[\&amp;quot;tbl[&amp;#x27;第3层&amp;#x27;]\&amp;quot;]&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tbl[&lt;span class=&#34;string&#34;&gt;&amp;quot;tbl[\&amp;quot;tbl[&amp;#x27;第3层&amp;#x27;]\&amp;quot;]&amp;quot;&lt;/span&gt;]=&lt;span class=&#34;string&#34;&gt;&amp;quot;第4层&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;load&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;return &amp;quot;&lt;/span&gt;..tbl[&lt;span class=&#34;string&#34;&gt;&amp;#x27;第1层&amp;#x27;&lt;/span&gt;])()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;又返回了什么？&lt;br&gt;希望能有人好好运用吧。&lt;del&gt;再不行就只能我自己写了()&lt;/del&gt;&lt;/p&gt;
&lt;center&gt;&lt;b&gt;教程结束。&lt;/b&gt;&lt;/center&gt;
</content>
        <category term="教程" />
        <updated>2022-11-19T00:00:00.000Z</updated>
    </entry>
</feed>
